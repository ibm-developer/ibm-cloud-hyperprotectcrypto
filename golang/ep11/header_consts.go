// Code generated by constgen. DO NOT EDIT.

/*
Copyright IBM Corp. All Rights Reserved.

SPDX-License-Identifier: Apache-2.0
*/

package ep11

import (
	"encoding/json"
	"fmt"
	"github.com/gogo/protobuf/jsonpb"
	"strconv"
	"strings"
)

type AdminCommand uint32
type Attribute uint64
type CardAttributeFlags uint32
type CardAttributeKey uint32
type ControlPoint uint32
type FunctionID uint32
type ImporterKeyType uint32
type KeyType uint64
type Mechanism uint64
type MechanismInfoFlag uint64
type ObjectClass uint64
type Return uint64

type EP11Attributes map[Attribute]interface{}

// Deprecated: here for backwards compatibility for []byte attributes
type AttributeStruct struct {
	Type  Attribute
	Value []byte
}

const (
	XCP_ADM_ADMIN_LOGIN         AdminCommand = 0x00000001
	XCP_ADM_DOM_ADMIN_LOGIN     AdminCommand = 0x00000002
	XCP_ADM_ADMIN_LOGOUT        AdminCommand = 0x00000003
	XCP_ADM_DOM_ADMIN_LOGOUT    AdminCommand = 0x00000004
	XCP_ADM_ADMIN_REPLACE       AdminCommand = 0x00000005
	XCP_ADM_DOM_ADMIN_REPLACE   AdminCommand = 0x00000006
	XCP_ADM_SET_ATTR            AdminCommand = 0x00000007
	XCP_ADM_DOM_SET_ATTR        AdminCommand = 0x00000008
	XCP_ADM_GEN_DOM_IMPORTER    AdminCommand = 0x00000009
	XCP_ADM_GEN_WK              AdminCommand = 0x0000000a
	XCP_ADM_EXPORT_WK           AdminCommand = 0x0000000b
	XCP_ADM_IMPORT_WK           AdminCommand = 0x0000000c
	XCP_ADM_COMMIT_WK           AdminCommand = 0x0000000d
	XCP_ADM_FINALIZE_WK         AdminCommand = 0x0000000e
	XCP_ADM_ZEROIZE             AdminCommand = 0x0000000f
	XCP_ADM_DOM_ZEROIZE         AdminCommand = 0x00000010
	XCP_ADM_DOM_CTRLPOINT_SET   AdminCommand = 0x00000011
	XCP_ADM_DOM_CTRLPOINT_ADD   AdminCommand = 0x00000012
	XCP_ADM_DOM_CTRLPOINT_DEL   AdminCommand = 0x00000013
	XCP_ADM_SET_CLOCK           AdminCommand = 0x00000014
	XCP_ADM_SET_FCV             AdminCommand = 0x00000015
	XCP_ADM_CTRLPOINT_SET       AdminCommand = 0x00000016
	XCP_ADM_CTRLPOINT_ADD       AdminCommand = 0x00000017
	XCP_ADM_CTRLPOINT_DEL       AdminCommand = 0x00000018
	XCP_ADM_REENCRYPT           AdminCommand = 0x00000019
	XCP_ADM_RK_REMOVE           AdminCommand = 0x0000001a
	XCP_ADM_CLEAR_WK            AdminCommand = 0x0000001b
	XCP_ADM_CLEAR_NEXT_WK       AdminCommand = 0x0000001c
	XCP_ADM_SYSTEM_ZEROIZE      AdminCommand = 0x0000001d
	XCP_ADM_EXPORT_STATE        AdminCommand = 0x0000001e
	XCP_ADM_IMPORT_STATE        AdminCommand = 0x0000001f
	XCP_ADM_COMMIT_STATE        AdminCommand = 0x00000020
	XCP_ADM_REMOVE_STATE        AdminCommand = 0x00000021
	XCP_ADM_GEN_MODULE_IMPORTER AdminCommand = 0x00000022
	XCP_ADM_SET_TRUSTED         AdminCommand = 0x00000023
	XCP_ADM_DOMAINS_ZEROIZE     AdminCommand = 0x00000024
	XCP_ADM_SESSION_REMOVE      AdminCommand = 0x00000025
	XCP_ADM_EXPORT_NEXT_WK      AdminCommand = 0x00000026
	XCP_ADMQ_ADMIN              AdminCommand = 0x00010001
	XCP_ADMQ_DOMADMIN           AdminCommand = 0x00010002
	XCP_ADMQ_DEVICE_CERT        AdminCommand = 0x00010003
	XCP_ADMQ_DOM_IMPORTER_CERT  AdminCommand = 0x00010004
	XCP_ADMQ_CTRLPOINTS         AdminCommand = 0x00010005
	XCP_ADMQ_DOM_CTRLPOINTS     AdminCommand = 0x00010006
	XCP_ADMQ_WK                 AdminCommand = 0x00010007
	XCP_ADMQ_NEXT_WK            AdminCommand = 0x00010008
	XCP_ADMQ_ATTRS              AdminCommand = 0x00010009
	XCP_ADMQ_DOM_ATTRS          AdminCommand = 0x0001000a
	XCP_ADMQ_FCV                AdminCommand = 0x0001000b
	XCP_ADMQ_WK_ORIGINS         AdminCommand = 0x0001000c
	XCP_ADMQ_RKLIST             AdminCommand = 0x0001000d
	XCP_ADMQ_INTERNAL_STATE     AdminCommand = 0x0001000e
	XCP_ADMQ_IMPORTER_CERT      AdminCommand = 0x0001000f
	XCP_ADMQ_AUDIT_STATE        AdminCommand = 0x00010010

	CKA_CLASS                         Attribute = 0x00000000
	CKA_TOKEN                         Attribute = 0x00000001
	CKA_PRIVATE                       Attribute = 0x00000002
	CKA_LABEL                         Attribute = 0x00000003
	CKA_APPLICATION                   Attribute = 0x00000010
	CKA_VALUE                         Attribute = 0x00000011
	CKA_OBJECT_ID                     Attribute = 0x00000012
	CKA_CERTIFICATE_TYPE              Attribute = 0x00000080
	CKA_ISSUER                        Attribute = 0x00000081
	CKA_SERIAL_NUMBER                 Attribute = 0x00000082
	CKA_AC_ISSUER                     Attribute = 0x00000083
	CKA_OWNER                         Attribute = 0x00000084
	CKA_ATTR_TYPES                    Attribute = 0x00000085
	CKA_TRUSTED                       Attribute = 0x00000086
	CKA_CERTIFICATE_CATEGORY          Attribute = 0x00000087
	CKA_JAVA_MIDP_SECURITY_DOMAIN     Attribute = 0x00000088
	CKA_URL                           Attribute = 0x00000089
	CKA_HASH_OF_SUBJECT_PUBLIC_KEY    Attribute = 0x0000008a
	CKA_HASH_OF_ISSUER_PUBLIC_KEY     Attribute = 0x0000008b
	CKA_NAME_HASH_ALGORITHM           Attribute = 0x0000008c
	CKA_CHECK_VALUE                   Attribute = 0x00000090
	CKA_KEY_TYPE                      Attribute = 0x00000100
	CKA_SUBJECT                       Attribute = 0x00000101
	CKA_ID                            Attribute = 0x00000102
	CKA_SENSITIVE                     Attribute = 0x00000103
	CKA_ENCRYPT                       Attribute = 0x00000104
	CKA_DECRYPT                       Attribute = 0x00000105
	CKA_WRAP                          Attribute = 0x00000106
	CKA_UNWRAP                        Attribute = 0x00000107
	CKA_SIGN                          Attribute = 0x00000108
	CKA_SIGN_RECOVER                  Attribute = 0x00000109
	CKA_VERIFY                        Attribute = 0x0000010a
	CKA_VERIFY_RECOVER                Attribute = 0x0000010b
	CKA_DERIVE                        Attribute = 0x0000010c
	CKA_START_DATE                    Attribute = 0x00000110
	CKA_END_DATE                      Attribute = 0x00000111
	CKA_MODULUS                       Attribute = 0x00000120
	CKA_MODULUS_BITS                  Attribute = 0x00000121
	CKA_PUBLIC_EXPONENT               Attribute = 0x00000122
	CKA_PRIVATE_EXPONENT              Attribute = 0x00000123
	CKA_PRIME_1                       Attribute = 0x00000124
	CKA_PRIME_2                       Attribute = 0x00000125
	CKA_EXPONENT_1                    Attribute = 0x00000126
	CKA_EXPONENT_2                    Attribute = 0x00000127
	CKA_COEFFICIENT                   Attribute = 0x00000128
	CKA_PUBLIC_KEY_INFO               Attribute = 0x00000129
	CKA_PRIME                         Attribute = 0x00000130
	CKA_SUBPRIME                      Attribute = 0x00000131
	CKA_BASE                          Attribute = 0x00000132
	CKA_PRIME_BITS                    Attribute = 0x00000133
	CKA_SUBPRIME_BITS                 Attribute = 0x00000134
	CKA_SUB_PRIME_BITS                Attribute = 0x00000134
	CKA_VALUE_BITS                    Attribute = 0x00000160
	CKA_VALUE_LEN                     Attribute = 0x00000161
	CKA_EXTRACTABLE                   Attribute = 0x00000162
	CKA_LOCAL                         Attribute = 0x00000163
	CKA_NEVER_EXTRACTABLE             Attribute = 0x00000164
	CKA_ALWAYS_SENSITIVE              Attribute = 0x00000165
	CKA_KEY_GEN_MECHANISM             Attribute = 0x00000166
	CKA_MODIFIABLE                    Attribute = 0x00000170
	CKA_COPYABLE                      Attribute = 0x00000171
	CKA_DESTROYABLE                   Attribute = 0x00000172
	CKA_ECDSA_PARAMS                  Attribute = 0x00000180
	CKA_EC_PARAMS                     Attribute = 0x00000180
	CKA_EC_POINT                      Attribute = 0x00000181
	CKA_SECONDARY_AUTH                Attribute = 0x00000200
	CKA_AUTH_PIN_FLAGS                Attribute = 0x00000201
	CKA_ALWAYS_AUTHENTICATE           Attribute = 0x00000202
	CKA_WRAP_WITH_TRUSTED             Attribute = 0x00000210
	CKA_OTP_FORMAT                    Attribute = 0x00000220
	CKA_OTP_LENGTH                    Attribute = 0x00000221
	CKA_OTP_TIME_INTERVAL             Attribute = 0x00000222
	CKA_OTP_USER_FRIENDLY_MODE        Attribute = 0x00000223
	CKA_OTP_CHALLENGE_REQUIREMENT     Attribute = 0x00000224
	CKA_OTP_TIME_REQUIREMENT          Attribute = 0x00000225
	CKA_OTP_COUNTER_REQUIREMENT       Attribute = 0x00000226
	CKA_OTP_PIN_REQUIREMENT           Attribute = 0x00000227
	CKA_OTP_USER_IDENTIFIER           Attribute = 0x0000022a
	CKA_OTP_SERVICE_IDENTIFIER        Attribute = 0x0000022b
	CKA_OTP_SERVICE_LOGO              Attribute = 0x0000022c
	CKA_OTP_SERVICE_LOGO_TYPE         Attribute = 0x0000022d
	CKA_OTP_COUNTER                   Attribute = 0x0000022e
	CKA_OTP_TIME                      Attribute = 0x0000022f
	CKA_GOSTR3410_PARAMS              Attribute = 0x00000250
	CKA_GOSTR3411_PARAMS              Attribute = 0x00000251
	CKA_GOST28147_PARAMS              Attribute = 0x00000252
	CKA_HW_FEATURE_TYPE               Attribute = 0x00000300
	CKA_RESET_ON_INIT                 Attribute = 0x00000301
	CKA_HAS_RESET                     Attribute = 0x00000302
	CKA_PIXEL_X                       Attribute = 0x00000400
	CKA_PIXEL_Y                       Attribute = 0x00000401
	CKA_RESOLUTION                    Attribute = 0x00000402
	CKA_CHAR_ROWS                     Attribute = 0x00000403
	CKA_CHAR_COLUMNS                  Attribute = 0x00000404
	CKA_COLOR                         Attribute = 0x00000405
	CKA_BITS_PER_PIXEL                Attribute = 0x00000406
	CKA_CHAR_SETS                     Attribute = 0x00000480
	CKA_ENCODING_METHODS              Attribute = 0x00000481
	CKA_MIME_TYPES                    Attribute = 0x00000482
	CKA_MECHANISM_TYPE                Attribute = 0x00000500
	CKA_REQUIRED_CMS_ATTRIBUTES       Attribute = 0x00000501
	CKA_DEFAULT_CMS_ATTRIBUTES        Attribute = 0x00000502
	CKA_SUPPORTED_CMS_ATTRIBUTES      Attribute = 0x00000503
	CKA_WRAP_TEMPLATE                 Attribute = 0x40000211
	CKA_UNWRAP_TEMPLATE               Attribute = 0x40000212
	CKA_DERIVE_TEMPLATE               Attribute = 0x40000213
	CKA_ALLOWED_MECHANISMS            Attribute = 0x40000600
	CKA_VENDOR_DEFINED                Attribute = 0x80000000
	CKA_IBM_RESTRICTABLE              Attribute = CKA_VENDOR_DEFINED + 0x10001
	CKA_IBM_NEVER_MODIFIABLE          Attribute = CKA_VENDOR_DEFINED + 0x10002
	CKA_IBM_RETAINKEY                 Attribute = CKA_VENDOR_DEFINED + 0x10003
	CKA_IBM_ATTRBOUND                 Attribute = CKA_VENDOR_DEFINED + 0x10004
	CKA_IBM_KEYTYPE                   Attribute = CKA_VENDOR_DEFINED + 0x10005
	CKA_IBM_CV                        Attribute = CKA_VENDOR_DEFINED + 0x10006
	CKA_IBM_MACKEY                    Attribute = CKA_VENDOR_DEFINED + 0x10007
	CKA_IBM_USE_AS_DATA               Attribute = CKA_VENDOR_DEFINED + 0x10008
	CKA_IBM_STRUCT_PARAMS             Attribute = CKA_VENDOR_DEFINED + 0x10009
	CKA_IBM_STD_COMPLIANCE1           Attribute = CKA_VENDOR_DEFINED + 0x1000a
	CKA_IBM_MLS_TYPE                  Attribute = CKA_VENDOR_DEFINED + 0x1000b
	CKA_IBM_PROTKEY_EXTRACTABLE       Attribute = CKA_VENDOR_DEFINED + 0x1000c
	CKA_IBM_PROTKEY_NEVER_EXTRACTABLE Attribute = CKA_VENDOR_DEFINED + 0x1000d
	CKA_IBM_WIRETEST                  Attribute = CKA_VENDOR_DEFINED + 0x20001
	CKA_VENDOR_DEFINED_GREP11         Attribute = CKA_VENDOR_DEFINED + 0x40000
	CKA_GREP11_TOKEN_LABEL            Attribute = CKA_VENDOR_DEFINED_GREP11 + 0x1
	CKA_GREP11_RAW_KEYBLOB            Attribute = CKA_VENDOR_DEFINED_GREP11 + 0x2
	CKA_GREP11_VOTE_VERSION           Attribute = CKA_VENDOR_DEFINED_GREP11 + 0x3
	CKA_IBM_EPX                       Attribute = CKA_VENDOR_DEFINED_GREP11 + 0x61100000

	XCP_ADMP_WK_IMPORT          CardAttributeFlags = 0x00000001
	XCP_ADMP_WK_EXPORT          CardAttributeFlags = 0x00000002
	XCP_ADMP_WK_1PART           CardAttributeFlags = 0x00000004
	XCP_ADMP_WK_RANDOM          CardAttributeFlags = 0x00000008
	XCP_ADMP_1SIGN              CardAttributeFlags = 0x00000010
	XCP_ADMP_CP_1SIGN           CardAttributeFlags = 0x00000020
	XCP_ADMP_ZERO_1SIGN         CardAttributeFlags = 0x00000040
	XCP_ADMP_NO_DOMAIN_IMPRINT  CardAttributeFlags = 0x00000080
	XCP_ADMP_STATE_IMPORT       CardAttributeFlags = 0x00000100
	XCP_ADMP_STATE_EXPORT       CardAttributeFlags = 0x00000200
	XCP_ADMP_STATE_1PART        CardAttributeFlags = 0x00000400
	XCP_ADMP_NO_EPX             CardAttributeFlags = 0x00000800
	XCP_ADMP_NO_EPXVM           CardAttributeFlags = 0x00001000
	XCP_ADMP_DO_NOT_DISTURB     CardAttributeFlags = 0x00002000
	XCP_ADMP__PERMS             CardAttributeFlags = 0x00003fff
	XCP_ADMP_CHG_WK_IMPORT      CardAttributeFlags = 0x00010000
	XCP_ADMP_CHG_WK_EXPORT      CardAttributeFlags = 0x00020000
	XCP_ADMP_CHG_WK_1PART       CardAttributeFlags = 0x00040000
	XCP_ADMP_CHG_WK_RANDOM      CardAttributeFlags = 0x00080000
	XCP_ADMP_CHG_SIGN_THR       CardAttributeFlags = 0x00100000
	XCP_ADMP_CHG_REVOKE_THR     CardAttributeFlags = 0x00200000
	XCP_ADMP_CHG_1SIGN          CardAttributeFlags = 0x00400000
	XCP_ADMP_CHG_CP_1SIGN       CardAttributeFlags = 0x00800000
	XCP_ADMP_CHG_ZERO_1SIGN     CardAttributeFlags = 0x01000000
	XCP_ADMP_CHG_ST_IMPORT      CardAttributeFlags = 0x02000000
	XCP_ADMP_CHG_ST_EXPORT      CardAttributeFlags = 0x04000000
	XCP_ADMP_CHG_ST_1PART       CardAttributeFlags = 0x08000000
	XCP_ADMP_CHG_NO_EPX         CardAttributeFlags = 0x20000000
	XCP_ADMP_CHG_NO_EPXVM       CardAttributeFlags = 0x40000000
	XCP_ADMP_NOT_SUP            CardAttributeFlags = 0x60001800
	XCP_ADMP_CHG_DO_NOT_DISTURB CardAttributeFlags = 0x80000000
	XCP_ADMP__CHGBITS           CardAttributeFlags = 0x8fff0000
	XCP_ADMP__DEFAULT           CardAttributeFlags = 0x8fff0011

	XCP_ADMINT_SIGN_THR   CardAttributeKey = 0x00000001
	XCP_ADMINT_REVOKE_THR CardAttributeKey = 0x00000002
	XCP_ADMINT_PERMS      CardAttributeKey = 0x00000003
	XCP_ADMINT_MODE       CardAttributeKey = 0x00000004
	XCP_ADMINT_STD        CardAttributeKey = 0x00000005

	XCP_CPB_ADD_CPBS           ControlPoint = 0x00000000
	XCP_CPB_DELETE_CPBS        ControlPoint = 0x00000001
	XCP_CPB_SIGN_ASYMM         ControlPoint = 0x00000002
	XCP_CPB_SIGN_SYMM          ControlPoint = 0x00000003
	XCP_CPB_SIGVERIFY_SYMM     ControlPoint = 0x00000004
	XCP_CPB_ENCRYPT_SYMM       ControlPoint = 0x00000005
	XCP_CPB_DECRYPT_ASYMM      ControlPoint = 0x00000006
	XCP_CPB_DECRYPT_SYMM       ControlPoint = 0x00000007
	XCP_CPB_WRAP_ASYMM         ControlPoint = 0x00000008
	XCP_CPB_WRAP_SYMM          ControlPoint = 0x00000009
	XCP_CPB_UNWRAP_ASYMM       ControlPoint = 0x0000000a
	XCP_CPB_UNWRAP_SYMM        ControlPoint = 0x0000000b
	XCP_CPB_KEYGEN_ASYMM       ControlPoint = 0x0000000c
	XCP_CPB_KEYGEN_SYMM        ControlPoint = 0x0000000d
	XCP_CPB_RETAINKEYS         ControlPoint = 0x0000000e
	XCP_CPB_SKIP_KEYTESTS      ControlPoint = 0x0000000f
	XCP_CPB_NON_ATTRBOUND      ControlPoint = 0x00000010
	XCP_CPB_MODIFY_OBJECTS     ControlPoint = 0x00000011
	XCP_CPB_RNG_SEED           ControlPoint = 0x00000012
	XCP_CPB_ALG_RAW_RSA        ControlPoint = 0x00000013
	XCP_CPB_ALG_NFIPS2009      ControlPoint = 0x00000014
	XCP_CPB_ALG_NBSI2009       ControlPoint = 0x00000015
	XCP_CPB_KEYSZ_HMAC_ANY     ControlPoint = 0x00000016
	XCP_CPB_KEYSZ_BELOW80BIT   ControlPoint = 0x00000017
	XCP_CPB_KEYSZ_80BIT        ControlPoint = 0x00000018
	XCP_CPB_KEYSZ_112BIT       ControlPoint = 0x00000019
	XCP_CPB_KEYSZ_128BIT       ControlPoint = 0x0000001a
	XCP_CPB_KEYSZ_192BIT       ControlPoint = 0x0000001b
	XCP_CPB_KEYSZ_256BIT       ControlPoint = 0x0000001c
	XCP_CPB_KEYSZ_RSA65536     ControlPoint = 0x0000001d
	XCP_CPB_ALG_RSA            ControlPoint = 0x0000001e
	XCP_CPB_ALG_DSA            ControlPoint = 0x0000001f
	XCP_CPB_ALG_EC             ControlPoint = 0x00000020
	XCP_CPB_ALG_EC_BPOOLCRV    ControlPoint = 0x00000021
	XCP_CPB_ALG_EC_NISTCRV     ControlPoint = 0x00000022
	XCP_CPB_ALG_NFIPS2011      ControlPoint = 0x00000023
	XCP_CPB_ALG_NBSI2011       ControlPoint = 0x00000024
	XCP_CPB_USER_SET_TRUSTED   ControlPoint = 0x00000025
	XCP_CPB_ALG_SKIP_CROSSCHK  ControlPoint = 0x00000026
	XCP_CPB_WRAP_CRYPT_KEYS    ControlPoint = 0x00000027
	XCP_CPB_SIGN_CRYPT_KEYS    ControlPoint = 0x00000028
	XCP_CPB_WRAP_SIGN_KEYS     ControlPoint = 0x00000029
	XCP_CPB_USER_SET_ATTRBOUND ControlPoint = 0x0000002a
	XCP_CPB_ALLOW_PASSPHRASE   ControlPoint = 0x0000002b
	XCP_CPB_WRAP_STRONGER_KEY  ControlPoint = 0x0000002c
	XCP_CPB_WRAP_WITH_RAW_SPKI ControlPoint = 0x0000002d
	XCP_CPB_ALG_DH             ControlPoint = 0x0000002e
	XCP_CPB_DERIVE             ControlPoint = 0x0000002f
	XCP_CPB_ALG_EC_25519       ControlPoint = 0x00000037
	XCP_CPB_ALG_NBSI2017       ControlPoint = 0x0000003d
	XCP_CPB_EMV                ControlPoint = 0x0000003e
	XCP_CPB_EMV_MIX            ControlPoint = 0x0000003f
	XCP_CPB_BTC                ControlPoint = 0x00000042

	FNID_Login             FunctionID = 0x00000001
	FNID_Logout            FunctionID = 0x00000002
	FNID_SeedRandom        FunctionID = 0x00000003
	FNID_GenerateRandom    FunctionID = 0x00000004
	FNID_DigestInit        FunctionID = 0x00000005
	FNID_DigestUpdate      FunctionID = 0x00000006
	FNID_DigestKey         FunctionID = 0x00000007
	FNID_DigestFinal       FunctionID = 0x00000008
	FNID_Digest            FunctionID = 0x00000009
	FNID_DigestSingle      FunctionID = 0x0000000a
	FNID_EncryptInit       FunctionID = 0x0000000b
	FNID_DecryptInit       FunctionID = 0x0000000c
	FNID_EncryptUpdate     FunctionID = 0x0000000d
	FNID_DecryptUpdate     FunctionID = 0x0000000e
	FNID_EncryptFinal      FunctionID = 0x0000000f
	FNID_DecryptFinal      FunctionID = 0x00000010
	FNID_Encrypt           FunctionID = 0x00000011
	FNID_Decrypt           FunctionID = 0x00000012
	FNID_EncryptSingle     FunctionID = 0x00000013
	FNID_DecryptSingle     FunctionID = 0x00000014
	FNID_GenerateKey       FunctionID = 0x00000015
	FNID_GenerateKeyPair   FunctionID = 0x00000016
	FNID_SignInit          FunctionID = 0x00000017
	FNID_SignUpdate        FunctionID = 0x00000018
	FNID_SignFinal         FunctionID = 0x00000019
	FNID_Sign              FunctionID = 0x0000001a
	FNID_VerifyInit        FunctionID = 0x0000001b
	FNID_VerifyUpdate      FunctionID = 0x0000001c
	FNID_VerifyFinal       FunctionID = 0x0000001d
	FNID_Verify            FunctionID = 0x0000001e
	FNID_SignSingle        FunctionID = 0x0000001f
	FNID_VerifySingle      FunctionID = 0x00000020
	FNID_WrapKey           FunctionID = 0x00000021
	FNID_UnwrapKey         FunctionID = 0x00000022
	FNID_DeriveKey         FunctionID = 0x00000023
	FNID_GetMechanismList  FunctionID = 0x00000024
	FNID_GetMechanismInfo  FunctionID = 0x00000025
	FNID_get_xcp_info      FunctionID = 0x00000026
	FNID_GetAttributeValue FunctionID = 0x00000027
	FNID_SetAttributeValue FunctionID = 0x00000028
	FNID_admin             FunctionID = 0x00000029
	FNID_ReencryptSingle   FunctionID = 0x0000002a
	FNID_NEXT_AVAILABLE    FunctionID = 0x0000002b

	XCP_IMPRKEY_RSA_2048 ImporterKeyType = 0x00000000
	XCP_IMPRKEY_RSA_4096 ImporterKeyType = 0x00000001
	XCP_IMPRKEY_EC_P256  ImporterKeyType = 0x00000002
	XCP_IMPRKEY_EC_P521  ImporterKeyType = 0x00000003
	XCP_IMPRKEY_RSA_3072 ImporterKeyType = 0x00000007

	CKK_RSA                KeyType = 0x00000000
	CKK_DSA                KeyType = 0x00000001
	CKK_DH                 KeyType = 0x00000002
	CKK_EC                 KeyType = 0x00000003
	CKK_ECDSA              KeyType = 0x00000003
	CKK_X9_42_DH           KeyType = 0x00000004
	CKK_KEA                KeyType = 0x00000005
	CKK_GENERIC_SECRET     KeyType = 0x00000010
	CKK_RC2                KeyType = 0x00000011
	CKK_RC4                KeyType = 0x00000012
	CKK_DES                KeyType = 0x00000013
	CKK_DES2               KeyType = 0x00000014
	CKK_DES3               KeyType = 0x00000015
	CKK_CAST               KeyType = 0x00000016
	CKK_CAST3              KeyType = 0x00000017
	CKK_CAST128            KeyType = 0x00000018
	CKK_CAST5              KeyType = 0x00000018
	CKK_RC5                KeyType = 0x00000019
	CKK_IDEA               KeyType = 0x0000001a
	CKK_SKIPJACK           KeyType = 0x0000001b
	CKK_BATON              KeyType = 0x0000001c
	CKK_JUNIPER            KeyType = 0x0000001d
	CKK_CDMF               KeyType = 0x0000001e
	CKK_AES                KeyType = 0x0000001f
	CKK_BLOWFISH           KeyType = 0x00000020
	CKK_TWOFISH            KeyType = 0x00000021
	CKK_SECURID            KeyType = 0x00000022
	CKK_HOTP               KeyType = 0x00000023
	CKK_ACTI               KeyType = 0x00000024
	CKK_CAMELLIA           KeyType = 0x00000025
	CKK_ARIA               KeyType = 0x00000026
	CKK_MD5_HMAC           KeyType = 0x00000027
	CKK_SHA_1_HMAC         KeyType = 0x00000028
	CKK_RIPEMD128_HMAC     KeyType = 0x00000029
	CKK_RIPEMD160_HMAC     KeyType = 0x0000002a
	CKK_SHA256_HMAC        KeyType = 0x0000002b
	CKK_SHA384_HMAC        KeyType = 0x0000002c
	CKK_SHA512_HMAC        KeyType = 0x0000002d
	CKK_SHA224_HMAC        KeyType = 0x0000002e
	CKK_SEED               KeyType = 0x0000002f
	CKK_GOSTR3410          KeyType = 0x00000030
	CKK_GOSTR3411          KeyType = 0x00000031
	CKK_GOST28147          KeyType = 0x00000032
	CKK_VENDOR_DEFINED     KeyType = 0x80000000
	CKK_IBM_SM4            KeyType = CKK_VENDOR_DEFINED + 0x50001
	CKK_IBM_SM2            KeyType = CKK_VENDOR_DEFINED + 0x50002
	CKK_IBM_EPX_SYMM       KeyType = CKK_VENDOR_DEFINED + 0x61120000
	CKK_IBM_EPX_ASYMM      KeyType = CKK_VENDOR_DEFINED + 0x61130000
	CKK_IBM_EPX_ASYMM_PRIV KeyType = CKK_VENDOR_DEFINED + 0x61140000
	CKK_IBM_EPX_ASYMM_PUB  KeyType = CKK_VENDOR_DEFINED + 0x61150000

	CKM_RSA_PKCS_KEY_PAIR_GEN          Mechanism = 0x00000000
	CKM_RSA_PKCS                       Mechanism = 0x00000001
	CKM_RSA_9796                       Mechanism = 0x00000002
	CKM_RSA_X_509                      Mechanism = 0x00000003
	CKM_MD2_RSA_PKCS                   Mechanism = 0x00000004
	CKM_MD5_RSA_PKCS                   Mechanism = 0x00000005
	CKM_SHA1_RSA_PKCS                  Mechanism = 0x00000006
	CKM_RIPEMD128_RSA_PKCS             Mechanism = 0x00000007
	CKM_RIPEMD160_RSA_PKCS             Mechanism = 0x00000008
	CKM_RSA_PKCS_OAEP                  Mechanism = 0x00000009
	CKM_RSA_X9_31_KEY_PAIR_GEN         Mechanism = 0x0000000a
	CKM_RSA_X9_31                      Mechanism = 0x0000000b
	CKM_SHA1_RSA_X9_31                 Mechanism = 0x0000000c
	CKM_RSA_PKCS_PSS                   Mechanism = 0x0000000d
	CKM_SHA1_RSA_PKCS_PSS              Mechanism = 0x0000000e
	CKM_DSA_KEY_PAIR_GEN               Mechanism = 0x00000010
	CKM_DSA                            Mechanism = 0x00000011
	CKM_DSA_SHA1                       Mechanism = 0x00000012
	CKM_DSA_SHA224                     Mechanism = 0x00000013
	CKM_DSA_SHA256                     Mechanism = 0x00000014
	CKM_DSA_SHA384                     Mechanism = 0x00000015
	CKM_DSA_SHA512                     Mechanism = 0x00000016
	CKM_DH_PKCS_KEY_PAIR_GEN           Mechanism = 0x00000020
	CKM_DH_PKCS_DERIVE                 Mechanism = 0x00000021
	CKM_X9_42_DH_KEY_PAIR_GEN          Mechanism = 0x00000030
	CKM_X9_42_DH_DERIVE                Mechanism = 0x00000031
	CKM_X9_42_DH_HYBRID_DERIVE         Mechanism = 0x00000032
	CKM_X9_42_MQV_DERIVE               Mechanism = 0x00000033
	CKM_SHA256_RSA_PKCS                Mechanism = 0x00000040
	CKM_SHA384_RSA_PKCS                Mechanism = 0x00000041
	CKM_SHA512_RSA_PKCS                Mechanism = 0x00000042
	CKM_SHA256_RSA_PKCS_PSS            Mechanism = 0x00000043
	CKM_SHA384_RSA_PKCS_PSS            Mechanism = 0x00000044
	CKM_SHA512_RSA_PKCS_PSS            Mechanism = 0x00000045
	CKM_SHA224_RSA_PKCS                Mechanism = 0x00000046
	CKM_SHA224_RSA_PKCS_PSS            Mechanism = 0x00000047
	CKM_SHA512_224                     Mechanism = 0x00000048
	CKM_SHA512_224_HMAC                Mechanism = 0x00000049
	CKM_SHA512_224_HMAC_GENERAL        Mechanism = 0x0000004a
	CKM_SHA512_224_KEY_DERIVATION      Mechanism = 0x0000004b
	CKM_SHA512_256                     Mechanism = 0x0000004c
	CKM_SHA512_256_HMAC                Mechanism = 0x0000004d
	CKM_SHA512_256_HMAC_GENERAL        Mechanism = 0x0000004e
	CKM_SHA512_256_KEY_DERIVATION      Mechanism = 0x0000004f
	CKM_SHA512_T                       Mechanism = 0x00000050
	CKM_SHA512_T_HMAC                  Mechanism = 0x00000051
	CKM_SHA512_T_HMAC_GENERAL          Mechanism = 0x00000052
	CKM_SHA512_T_KEY_DERIVATION        Mechanism = 0x00000053
	CKM_RC2_KEY_GEN                    Mechanism = 0x00000100
	CKM_RC2_ECB                        Mechanism = 0x00000101
	CKM_RC2_CBC                        Mechanism = 0x00000102
	CKM_RC2_MAC                        Mechanism = 0x00000103
	CKM_RC2_MAC_GENERAL                Mechanism = 0x00000104
	CKM_RC2_CBC_PAD                    Mechanism = 0x00000105
	CKM_RC4_KEY_GEN                    Mechanism = 0x00000110
	CKM_RC4                            Mechanism = 0x00000111
	CKM_DES_KEY_GEN                    Mechanism = 0x00000120
	CKM_DES_ECB                        Mechanism = 0x00000121
	CKM_DES_CBC                        Mechanism = 0x00000122
	CKM_DES_MAC                        Mechanism = 0x00000123
	CKM_DES_MAC_GENERAL                Mechanism = 0x00000124
	CKM_DES_CBC_PAD                    Mechanism = 0x00000125
	CKM_DES2_KEY_GEN                   Mechanism = 0x00000130
	CKM_DES3_KEY_GEN                   Mechanism = 0x00000131
	CKM_DES3_ECB                       Mechanism = 0x00000132
	CKM_DES3_CBC                       Mechanism = 0x00000133
	CKM_DES3_MAC                       Mechanism = 0x00000134
	CKM_DES3_MAC_GENERAL               Mechanism = 0x00000135
	CKM_DES3_CBC_PAD                   Mechanism = 0x00000136
	CKM_DES3_CMAC_GENERAL              Mechanism = 0x00000137
	CKM_DES3_CMAC                      Mechanism = 0x00000138
	CKM_CDMF_KEY_GEN                   Mechanism = 0x00000140
	CKM_CDMF_ECB                       Mechanism = 0x00000141
	CKM_CDMF_CBC                       Mechanism = 0x00000142
	CKM_CDMF_MAC                       Mechanism = 0x00000143
	CKM_CDMF_MAC_GENERAL               Mechanism = 0x00000144
	CKM_CDMF_CBC_PAD                   Mechanism = 0x00000145
	CKM_DES_OFB64                      Mechanism = 0x00000150
	CKM_DES_OFB8                       Mechanism = 0x00000151
	CKM_DES_CFB64                      Mechanism = 0x00000152
	CKM_DES_CFB8                       Mechanism = 0x00000153
	CKM_MD2                            Mechanism = 0x00000200
	CKM_MD2_HMAC                       Mechanism = 0x00000201
	CKM_MD2_HMAC_GENERAL               Mechanism = 0x00000202
	CKM_MD5                            Mechanism = 0x00000210
	CKM_MD5_HMAC                       Mechanism = 0x00000211
	CKM_MD5_HMAC_GENERAL               Mechanism = 0x00000212
	CKM_SHA_1                          Mechanism = 0x00000220
	CKM_SHA_1_HMAC                     Mechanism = 0x00000221
	CKM_SHA_1_HMAC_GENERAL             Mechanism = 0x00000222
	CKM_RIPEMD128                      Mechanism = 0x00000230
	CKM_RIPEMD128_HMAC                 Mechanism = 0x00000231
	CKM_RIPEMD128_HMAC_GENERAL         Mechanism = 0x00000232
	CKM_RIPEMD160                      Mechanism = 0x00000240
	CKM_RIPEMD160_HMAC                 Mechanism = 0x00000241
	CKM_RIPEMD160_HMAC_GENERAL         Mechanism = 0x00000242
	CKM_SHA256                         Mechanism = 0x00000250
	CKM_SHA256_HMAC                    Mechanism = 0x00000251
	CKM_SHA256_HMAC_GENERAL            Mechanism = 0x00000252
	CKM_SHA224                         Mechanism = 0x00000255
	CKM_SHA224_HMAC                    Mechanism = 0x00000256
	CKM_SHA224_HMAC_GENERAL            Mechanism = 0x00000257
	CKM_SHA384                         Mechanism = 0x00000260
	CKM_SHA384_HMAC                    Mechanism = 0x00000261
	CKM_SHA384_HMAC_GENERAL            Mechanism = 0x00000262
	CKM_SHA512                         Mechanism = 0x00000270
	CKM_SHA512_HMAC                    Mechanism = 0x00000271
	CKM_SHA512_HMAC_GENERAL            Mechanism = 0x00000272
	CKM_SECURID_KEY_GEN                Mechanism = 0x00000280
	CKM_SECURID                        Mechanism = 0x00000282
	CKM_HOTP_KEY_GEN                   Mechanism = 0x00000290
	CKM_HOTP                           Mechanism = 0x00000291
	CKM_ACTI                           Mechanism = 0x000002a0
	CKM_ACTI_KEY_GEN                   Mechanism = 0x000002a1
	CKM_CAST_KEY_GEN                   Mechanism = 0x00000300
	CKM_CAST_ECB                       Mechanism = 0x00000301
	CKM_CAST_CBC                       Mechanism = 0x00000302
	CKM_CAST_MAC                       Mechanism = 0x00000303
	CKM_CAST_MAC_GENERAL               Mechanism = 0x00000304
	CKM_CAST_CBC_PAD                   Mechanism = 0x00000305
	CKM_CAST3_KEY_GEN                  Mechanism = 0x00000310
	CKM_CAST3_ECB                      Mechanism = 0x00000311
	CKM_CAST3_CBC                      Mechanism = 0x00000312
	CKM_CAST3_MAC                      Mechanism = 0x00000313
	CKM_CAST3_MAC_GENERAL              Mechanism = 0x00000314
	CKM_CAST3_CBC_PAD                  Mechanism = 0x00000315
	CKM_CAST128_KEY_GEN                Mechanism = 0x00000320
	CKM_CAST5_KEY_GEN                  Mechanism = 0x00000320
	CKM_CAST128_ECB                    Mechanism = 0x00000321
	CKM_CAST5_ECB                      Mechanism = 0x00000321
	CKM_CAST128_CBC                    Mechanism = 0x00000322
	CKM_CAST5_CBC                      Mechanism = 0x00000322
	CKM_CAST128_MAC                    Mechanism = 0x00000323
	CKM_CAST5_MAC                      Mechanism = 0x00000323
	CKM_CAST128_MAC_GENERAL            Mechanism = 0x00000324
	CKM_CAST5_MAC_GENERAL              Mechanism = 0x00000324
	CKM_CAST128_CBC_PAD                Mechanism = 0x00000325
	CKM_CAST5_CBC_PAD                  Mechanism = 0x00000325
	CKM_RC5_KEY_GEN                    Mechanism = 0x00000330
	CKM_RC5_ECB                        Mechanism = 0x00000331
	CKM_RC5_CBC                        Mechanism = 0x00000332
	CKM_RC5_MAC                        Mechanism = 0x00000333
	CKM_RC5_MAC_GENERAL                Mechanism = 0x00000334
	CKM_RC5_CBC_PAD                    Mechanism = 0x00000335
	CKM_IDEA_KEY_GEN                   Mechanism = 0x00000340
	CKM_IDEA_ECB                       Mechanism = 0x00000341
	CKM_IDEA_CBC                       Mechanism = 0x00000342
	CKM_IDEA_MAC                       Mechanism = 0x00000343
	CKM_IDEA_MAC_GENERAL               Mechanism = 0x00000344
	CKM_IDEA_CBC_PAD                   Mechanism = 0x00000345
	CKM_GENERIC_SECRET_KEY_GEN         Mechanism = 0x00000350
	CKM_CONCATENATE_BASE_AND_KEY       Mechanism = 0x00000360
	CKM_CONCATENATE_BASE_AND_DATA      Mechanism = 0x00000362
	CKM_CONCATENATE_DATA_AND_BASE      Mechanism = 0x00000363
	CKM_XOR_BASE_AND_DATA              Mechanism = 0x00000364
	CKM_EXTRACT_KEY_FROM_KEY           Mechanism = 0x00000365
	CKM_SSL3_PRE_MASTER_KEY_GEN        Mechanism = 0x00000370
	CKM_SSL3_MASTER_KEY_DERIVE         Mechanism = 0x00000371
	CKM_SSL3_KEY_AND_MAC_DERIVE        Mechanism = 0x00000372
	CKM_SSL3_MASTER_KEY_DERIVE_DH      Mechanism = 0x00000373
	CKM_TLS_PRE_MASTER_KEY_GEN         Mechanism = 0x00000374
	CKM_TLS_MASTER_KEY_DERIVE          Mechanism = 0x00000375
	CKM_TLS_KEY_AND_MAC_DERIVE         Mechanism = 0x00000376
	CKM_TLS_MASTER_KEY_DERIVE_DH       Mechanism = 0x00000377
	CKM_TLS_PRF                        Mechanism = 0x00000378
	CKM_SSL3_MD5_MAC                   Mechanism = 0x00000380
	CKM_SSL3_SHA1_MAC                  Mechanism = 0x00000381
	CKM_MD5_KEY_DERIVATION             Mechanism = 0x00000390
	CKM_MD2_KEY_DERIVATION             Mechanism = 0x00000391
	CKM_SHA1_KEY_DERIVATION            Mechanism = 0x00000392
	CKM_SHA256_KEY_DERIVATION          Mechanism = 0x00000393
	CKM_SHA384_KEY_DERIVATION          Mechanism = 0x00000394
	CKM_SHA512_KEY_DERIVATION          Mechanism = 0x00000395
	CKM_SHA224_KEY_DERIVATION          Mechanism = 0x00000396
	CKM_PBE_MD2_DES_CBC                Mechanism = 0x000003a0
	CKM_PBE_MD5_DES_CBC                Mechanism = 0x000003a1
	CKM_PBE_MD5_CAST_CBC               Mechanism = 0x000003a2
	CKM_PBE_MD5_CAST3_CBC              Mechanism = 0x000003a3
	CKM_PBE_MD5_CAST128_CBC            Mechanism = 0x000003a4
	CKM_PBE_MD5_CAST5_CBC              Mechanism = 0x000003a4
	CKM_PBE_SHA1_CAST128_CBC           Mechanism = 0x000003a5
	CKM_PBE_SHA1_CAST5_CBC             Mechanism = 0x000003a5
	CKM_PBE_SHA1_RC4_128               Mechanism = 0x000003a6
	CKM_PBE_SHA1_RC4_40                Mechanism = 0x000003a7
	CKM_PBE_SHA1_DES3_EDE_CBC          Mechanism = 0x000003a8
	CKM_PBE_SHA1_DES2_EDE_CBC          Mechanism = 0x000003a9
	CKM_PBE_SHA1_RC2_128_CBC           Mechanism = 0x000003aa
	CKM_PBE_SHA1_RC2_40_CBC            Mechanism = 0x000003ab
	CKM_PKCS5_PBKD2                    Mechanism = 0x000003b0
	CKM_PBA_SHA1_WITH_SHA1_HMAC        Mechanism = 0x000003c0
	CKM_WTLS_PRE_MASTER_KEY_GEN        Mechanism = 0x000003d0
	CKM_WTLS_MASTER_KEY_DERIVE         Mechanism = 0x000003d1
	CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC  Mechanism = 0x000003d2
	CKM_WTLS_PRF                       Mechanism = 0x000003d3
	CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE Mechanism = 0x000003d4
	CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE Mechanism = 0x000003d5
	CKM_TLS10_MAC_SERVER               Mechanism = 0x000003d6
	CKM_TLS10_MAC_CLIENT               Mechanism = 0x000003d7
	CKM_TLS12_MAC                      Mechanism = 0x000003d8
	CKM_TLS12_KDF                      Mechanism = 0x000003d9
	CKM_TLS12_MASTER_KEY_DERIVE        Mechanism = 0x000003e0
	CKM_TLS12_KEY_AND_MAC_DERIVE       Mechanism = 0x000003e1
	CKM_TLS12_MASTER_KEY_DERIVE_DH     Mechanism = 0x000003e2
	CKM_TLS12_KEY_SAFE_DERIVE          Mechanism = 0x000003e3
	CKM_TLS_MAC                        Mechanism = 0x000003e4
	CKM_TLS_KDF                        Mechanism = 0x000003e5
	CKM_KEY_WRAP_LYNKS                 Mechanism = 0x00000400
	CKM_KEY_WRAP_SET_OAEP              Mechanism = 0x00000401
	CKM_CMS_SIG                        Mechanism = 0x00000500
	CKM_KIP_DERIVE                     Mechanism = 0x00000510
	CKM_KIP_WRAP                       Mechanism = 0x00000511
	CKM_KIP_MAC                        Mechanism = 0x00000512
	CKM_CAMELLIA_KEY_GEN               Mechanism = 0x00000550
	CKM_CAMELLIA_ECB                   Mechanism = 0x00000551
	CKM_CAMELLIA_CBC                   Mechanism = 0x00000552
	CKM_CAMELLIA_MAC                   Mechanism = 0x00000553
	CKM_CAMELLIA_MAC_GENERAL           Mechanism = 0x00000554
	CKM_CAMELLIA_CBC_PAD               Mechanism = 0x00000555
	CKM_CAMELLIA_ECB_ENCRYPT_DATA      Mechanism = 0x00000556
	CKM_CAMELLIA_CBC_ENCRYPT_DATA      Mechanism = 0x00000557
	CKM_CAMELLIA_CTR                   Mechanism = 0x00000558
	CKM_ARIA_KEY_GEN                   Mechanism = 0x00000560
	CKM_ARIA_ECB                       Mechanism = 0x00000561
	CKM_ARIA_CBC                       Mechanism = 0x00000562
	CKM_ARIA_MAC                       Mechanism = 0x00000563
	CKM_ARIA_MAC_GENERAL               Mechanism = 0x00000564
	CKM_ARIA_CBC_PAD                   Mechanism = 0x00000565
	CKM_ARIA_ECB_ENCRYPT_DATA          Mechanism = 0x00000566
	CKM_ARIA_CBC_ENCRYPT_DATA          Mechanism = 0x00000567
	CKM_SEED_KEY_GEN                   Mechanism = 0x00000650
	CKM_SEED_ECB                       Mechanism = 0x00000651
	CKM_SEED_CBC                       Mechanism = 0x00000652
	CKM_SEED_MAC                       Mechanism = 0x00000653
	CKM_SEED_MAC_GENERAL               Mechanism = 0x00000654
	CKM_SEED_CBC_PAD                   Mechanism = 0x00000655
	CKM_SEED_ECB_ENCRYPT_DATA          Mechanism = 0x00000656
	CKM_SEED_CBC_ENCRYPT_DATA          Mechanism = 0x00000657
	CKM_SKIPJACK_KEY_GEN               Mechanism = 0x00001000
	CKM_SKIPJACK_ECB64                 Mechanism = 0x00001001
	CKM_SKIPJACK_CBC64                 Mechanism = 0x00001002
	CKM_SKIPJACK_OFB64                 Mechanism = 0x00001003
	CKM_SKIPJACK_CFB64                 Mechanism = 0x00001004
	CKM_SKIPJACK_CFB32                 Mechanism = 0x00001005
	CKM_SKIPJACK_CFB16                 Mechanism = 0x00001006
	CKM_SKIPJACK_CFB8                  Mechanism = 0x00001007
	CKM_SKIPJACK_WRAP                  Mechanism = 0x00001008
	CKM_SKIPJACK_PRIVATE_WRAP          Mechanism = 0x00001009
	CKM_SKIPJACK_RELAYX                Mechanism = 0x0000100a
	CKM_KEA_KEY_PAIR_GEN               Mechanism = 0x00001010
	CKM_KEA_KEY_DERIVE                 Mechanism = 0x00001011
	CKM_KEA_DERIVE                     Mechanism = 0x00001012
	CKM_FORTEZZA_TIMESTAMP             Mechanism = 0x00001020
	CKM_BATON_KEY_GEN                  Mechanism = 0x00001030
	CKM_BATON_ECB128                   Mechanism = 0x00001031
	CKM_BATON_ECB96                    Mechanism = 0x00001032
	CKM_BATON_CBC128                   Mechanism = 0x00001033
	CKM_BATON_COUNTER                  Mechanism = 0x00001034
	CKM_BATON_SHUFFLE                  Mechanism = 0x00001035
	CKM_BATON_WRAP                     Mechanism = 0x00001036
	CKM_ECDSA_KEY_PAIR_GEN             Mechanism = 0x00001040
	CKM_EC_KEY_PAIR_GEN                Mechanism = 0x00001040
	CKM_ECDSA                          Mechanism = 0x00001041
	CKM_ECDSA_SHA1                     Mechanism = 0x00001042
	CKM_ECDSA_SHA224                   Mechanism = 0x00001043
	CKM_ECDSA_SHA256                   Mechanism = 0x00001044
	CKM_ECDSA_SHA384                   Mechanism = 0x00001045
	CKM_ECDSA_SHA512                   Mechanism = 0x00001046
	CKM_ECDH1_DERIVE                   Mechanism = 0x00001050
	CKM_ECDH1_COFACTOR_DERIVE          Mechanism = 0x00001051
	CKM_ECMQV_DERIVE                   Mechanism = 0x00001052
	CKM_ECDH_AES_KEY_WRAP              Mechanism = 0x00001053
	CKM_RSA_AES_KEY_WRAP               Mechanism = 0x00001054
	CKM_JUNIPER_KEY_GEN                Mechanism = 0x00001060
	CKM_JUNIPER_ECB128                 Mechanism = 0x00001061
	CKM_JUNIPER_CBC128                 Mechanism = 0x00001062
	CKM_JUNIPER_COUNTER                Mechanism = 0x00001063
	CKM_JUNIPER_SHUFFLE                Mechanism = 0x00001064
	CKM_JUNIPER_WRAP                   Mechanism = 0x00001065
	CKM_FASTHASH                       Mechanism = 0x00001070
	CKM_AES_KEY_GEN                    Mechanism = 0x00001080
	CKM_AES_ECB                        Mechanism = 0x00001081
	CKM_AES_CBC                        Mechanism = 0x00001082
	CKM_AES_MAC                        Mechanism = 0x00001083
	CKM_AES_MAC_GENERAL                Mechanism = 0x00001084
	CKM_AES_CBC_PAD                    Mechanism = 0x00001085
	CKM_AES_CTR                        Mechanism = 0x00001086
	CKM_AES_GCM                        Mechanism = 0x00001087
	CKM_AES_CCM                        Mechanism = 0x00001088
	CKM_AES_CTS                        Mechanism = 0x00001089
	CKM_AES_CMAC                       Mechanism = 0x0000108a
	CKM_AES_CMAC_GENERAL               Mechanism = 0x0000108b
	CKM_AES_XCBC_MAC                   Mechanism = 0x0000108c
	CKM_AES_XCBC_MAC_96                Mechanism = 0x0000108d
	CKM_AES_GMAC                       Mechanism = 0x0000108e
	CKM_BLOWFISH_KEY_GEN               Mechanism = 0x00001090
	CKM_BLOWFISH_CBC                   Mechanism = 0x00001091
	CKM_TWOFISH_KEY_GEN                Mechanism = 0x00001092
	CKM_TWOFISH_CBC                    Mechanism = 0x00001093
	CKM_BLOWFISH_CBC_PAD               Mechanism = 0x00001094
	CKM_TWOFISH_CBC_PAD                Mechanism = 0x00001095
	CKM_DES_ECB_ENCRYPT_DATA           Mechanism = 0x00001100
	CKM_DES_CBC_ENCRYPT_DATA           Mechanism = 0x00001101
	CKM_DES3_ECB_ENCRYPT_DATA          Mechanism = 0x00001102
	CKM_DES3_CBC_ENCRYPT_DATA          Mechanism = 0x00001103
	CKM_AES_ECB_ENCRYPT_DATA           Mechanism = 0x00001104
	CKM_AES_CBC_ENCRYPT_DATA           Mechanism = 0x00001105
	CKM_GOSTR3410_KEY_PAIR_GEN         Mechanism = 0x00001200
	CKM_GOSTR3410                      Mechanism = 0x00001201
	CKM_GOSTR3410_WITH_GOSTR3411       Mechanism = 0x00001202
	CKM_GOSTR3410_KEY_WRAP             Mechanism = 0x00001203
	CKM_GOSTR3410_DERIVE               Mechanism = 0x00001204
	CKM_GOSTR3411                      Mechanism = 0x00001210
	CKM_GOSTR3411_HMAC                 Mechanism = 0x00001211
	CKM_GOST28147_KEY_GEN              Mechanism = 0x00001220
	CKM_GOST28147_ECB                  Mechanism = 0x00001221
	CKM_GOST28147                      Mechanism = 0x00001222
	CKM_GOST28147_MAC                  Mechanism = 0x00001223
	CKM_GOST28147_KEY_WRAP             Mechanism = 0x00001224
	CKM_DSA_PARAMETER_GEN              Mechanism = 0x00002000
	CKM_DH_PKCS_PARAMETER_GEN          Mechanism = 0x00002001
	CKM_X9_42_DH_PARAMETER_GEN         Mechanism = 0x00002002
	CKM_DSA_PROBABLISTIC_PARAMETER_GEN Mechanism = 0x00002003
	CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN Mechanism = 0x00002004
	CKM_AES_OFB                        Mechanism = 0x00002104
	CKM_AES_CFB64                      Mechanism = 0x00002105
	CKM_AES_CFB8                       Mechanism = 0x00002106
	CKM_AES_CFB128                     Mechanism = 0x00002107
	CKM_AES_CFB1                       Mechanism = 0x00002108
	CKM_AES_KEY_WRAP                   Mechanism = 0x00002109
	CKM_AES_KEY_WRAP_PAD               Mechanism = 0x0000210a
	CKM_RSA_PKCS_TPM_1_1               Mechanism = 0x00004001
	CKM_RSA_PKCS_OAEP_TPM_1_1          Mechanism = 0x00004002
	CKM_VENDOR_DEFINED                 Mechanism = 0x80000000
	CKM_IBM_SHA3_224                   Mechanism = CKM_VENDOR_DEFINED + 0x10001
	CKM_IBM_SHA3_256                   Mechanism = CKM_VENDOR_DEFINED + 0x10002
	CKM_IBM_SHA3_384                   Mechanism = CKM_VENDOR_DEFINED + 0x10003
	CKM_IBM_SHA3_512                   Mechanism = CKM_VENDOR_DEFINED + 0x10004
	CKM_IBM_SHAKE128                   Mechanism = CKM_VENDOR_DEFINED + 0x10005
	CKM_IBM_SHAKE256                   Mechanism = CKM_VENDOR_DEFINED + 0x10006
	CKM_IBM_CMAC                       Mechanism = CKM_VENDOR_DEFINED + 0x10007
	CKM_IBM_ECDSA_SHA224               Mechanism = CKM_VENDOR_DEFINED + 0x10008
	CKM_IBM_ECDSA_SHA256               Mechanism = CKM_VENDOR_DEFINED + 0x10009
	CKM_IBM_ECDSA_SHA384               Mechanism = CKM_VENDOR_DEFINED + 0x1000a
	CKM_IBM_ECDSA_SHA512               Mechanism = CKM_VENDOR_DEFINED + 0x1000b
	CKM_IBM_EC_MULTIPLY                Mechanism = CKM_VENDOR_DEFINED + 0x1000c
	CKM_IBM_EAC                        Mechanism = CKM_VENDOR_DEFINED + 0x1000d
	CKM_IBM_TESTCODE                   Mechanism = CKM_VENDOR_DEFINED + 0x1000e
	CKM_IBM_RESERVED_SMX_1             Mechanism = CKM_VENDOR_DEFINED + 0x1000f
	CKM_IBM_RESERVED_SMX_2             Mechanism = CKM_VENDOR_DEFINED + 0x10010
	CKM_IBM_RESERVED_SMX_3             Mechanism = CKM_VENDOR_DEFINED + 0x10011
	CKM_IBM_SHA512_256                 Mechanism = CKM_VENDOR_DEFINED + 0x10012
	CKM_IBM_SHA512_224                 Mechanism = CKM_VENDOR_DEFINED + 0x10013
	CKM_IBM_SHA512_256_HMAC            Mechanism = CKM_VENDOR_DEFINED + 0x10014
	CKM_IBM_SHA512_224_HMAC            Mechanism = CKM_VENDOR_DEFINED + 0x10015
	CKM_IBM_EMV                        Mechanism = CKM_VENDOR_DEFINED + 0x10016
	CKM_IBM_SHA512_256_HMAC_GENERAL    Mechanism = CKM_VENDOR_DEFINED + 0x10017
	CKM_IBM_SHA512_224_HMAC_GENERAL    Mechanism = CKM_VENDOR_DEFINED + 0x10018
	CKM_IBM_SHA512_256_KEY_DERIVATION  Mechanism = CKM_VENDOR_DEFINED + 0x10019
	CKM_IBM_SHA512_224_KEY_DERIVATION  Mechanism = CKM_VENDOR_DEFINED + 0x1001a
	CKM_IBM_EC_X25519                  Mechanism = CKM_VENDOR_DEFINED + 0x1001b
	CKM_IBM_ED25519_SHA512             Mechanism = CKM_VENDOR_DEFINED + 0x1001c
	CKM_IBM_ED25519_PH_SHA512          Mechanism = CKM_VENDOR_DEFINED + 0x1001d
	CKM_IBM_EC_X448                    Mechanism = CKM_VENDOR_DEFINED + 0x1001e
	CKM_IBM_ED448_SHA3                 Mechanism = CKM_VENDOR_DEFINED + 0x1001f
	CKM_IBM_ED448_PH_SHA3              Mechanism = CKM_VENDOR_DEFINED + 0x10020
	CKM_IBM_SIPHASH                    Mechanism = CKM_VENDOR_DEFINED + 0x10021
	CKM_IBM_SHA3_224_HMAC              Mechanism = CKM_VENDOR_DEFINED + 0x10025
	CKM_IBM_SHA3_256_HMAC              Mechanism = CKM_VENDOR_DEFINED + 0x10026
	CKM_IBM_SHA3_384_HMAC              Mechanism = CKM_VENDOR_DEFINED + 0x10027
	CKM_IBM_SHA3_512_HMAC              Mechanism = CKM_VENDOR_DEFINED + 0x10028
	CKM_IBM_EC_X25519_RAW              Mechanism = CKM_VENDOR_DEFINED + 0x10029
	CKM_IBM_EC_X448_RAW                Mechanism = CKM_VENDOR_DEFINED + 0x10030
	CKM_IBM_ECDSA_OTHER                Mechanism = CKM_VENDOR_DEFINED + 0x10031
	CKM_IBM_CLEARKEY_TRANSPORT         Mechanism = CKM_VENDOR_DEFINED + 0x20001
	CKM_IBM_ATTRIBUTEBOUND_WRAP        Mechanism = CKM_VENDOR_DEFINED + 0x20004
	CKM_IBM_TRANSPORTKEY               Mechanism = CKM_VENDOR_DEFINED + 0x20005
	CKM_IBM_DH_PKCS_DERIVE_RAW         Mechanism = CKM_VENDOR_DEFINED + 0x20006
	CKM_IBM_ECDH1_DERIVE_RAW           Mechanism = CKM_VENDOR_DEFINED + 0x20007
	CKM_IBM_POLY1305                   Mechanism = CKM_VENDOR_DEFINED + 0x20008
	CKM_IBM_CHACHA20                   Mechanism = CKM_VENDOR_DEFINED + 0x20009
	CKM_IBM_FILE                       Mechanism = CKM_VENDOR_DEFINED + 0x30003
	CKM_IBM_WIRETEST                   Mechanism = CKM_VENDOR_DEFINED + 0x30004
	CKM_IBM_RETAINKEY                  Mechanism = CKM_VENDOR_DEFINED + 0x40001
	CKM_IBM_SM4_KEY_GEN                Mechanism = CKM_VENDOR_DEFINED + 0x50001
	CKM_IBM_SM4_CBC                    Mechanism = CKM_VENDOR_DEFINED + 0x50002
	CKM_IBM_SM4_CBC_PAD                Mechanism = CKM_VENDOR_DEFINED + 0x50003
	CKM_IBM_SM4_ECB                    Mechanism = CKM_VENDOR_DEFINED + 0x50004
	CKM_IBM_ISO2_SM4_ECB_PAD           Mechanism = CKM_VENDOR_DEFINED + 0x50005
	CKM_IBM_ISO2_SM4_CBC_PAD           Mechanism = CKM_VENDOR_DEFINED + 0x50006
	CKM_IBM_SM4_MAC_GENERAL            Mechanism = CKM_VENDOR_DEFINED + 0x50007
	CKM_IBM_ISO2_SM4_MAC_GENERAL       Mechanism = CKM_VENDOR_DEFINED + 0x50008
	CKM_IBM_SM4_ECB_ENCRYPT_DATA       Mechanism = CKM_VENDOR_DEFINED + 0x50009
	CKM_IBM_SM2_KEY_PAIR_GEN           Mechanism = CKM_VENDOR_DEFINED + 0x5000a
	CKM_IBM_SM2                        Mechanism = CKM_VENDOR_DEFINED + 0x5000b
	CKM_IBM_SM2_SM3                    Mechanism = CKM_VENDOR_DEFINED + 0x5000c
	CKM_IBM_SM2_ENCRYPT                Mechanism = CKM_VENDOR_DEFINED + 0x5000d
	CKM_IBM_SM3                        Mechanism = CKM_VENDOR_DEFINED + 0x5000e
	CKM_IBM_SM2_SM3_RFC                Mechanism = CKM_VENDOR_DEFINED + 0x5000f
	CKM_IBM_SM4_MAC                    Mechanism = CKM_VENDOR_DEFINED + 0x58007
	CKM_IBM_ISO2_SM4_MAC               Mechanism = CKM_VENDOR_DEFINED + 0x58008
	CKM_IBM_BTC_DERIVE                 Mechanism = CKM_VENDOR_DEFINED + 0x70001
	CKM_IBM_EPX                        Mechanism = CKM_VENDOR_DEFINED + 0x61100000
	CKM_IBM_EPX_WPRM                   Mechanism = CKM_VENDOR_DEFINED + 0x61110000

	CKF_DONT_BLOCK                     MechanismInfoFlag = 0x00000001
	CKF_HW                             MechanismInfoFlag = 0x00000001
	CKF_LIBRARY_CANT_CREATE_OS_THREADS MechanismInfoFlag = 0x00000001
	CKF_NEXT_OTP                       MechanismInfoFlag = 0x00000001
	CKF_RNG                            MechanismInfoFlag = 0x00000001
	CKF_TOKEN_PRESENT                  MechanismInfoFlag = 0x00000001
	CKF_EXCLUDE_TIME                   MechanismInfoFlag = 0x00000002
	CKF_OS_LOCKING_OK                  MechanismInfoFlag = 0x00000002
	CKF_REMOVABLE_DEVICE               MechanismInfoFlag = 0x00000002
	CKF_RW_SESSION                     MechanismInfoFlag = 0x00000002
	CKF_WRITE_PROTECTED                MechanismInfoFlag = 0x00000002
	CKF_EXCLUDE_COUNTER                MechanismInfoFlag = 0x00000004
	CKF_HW_SLOT                        MechanismInfoFlag = 0x00000004
	CKF_LOGIN_REQUIRED                 MechanismInfoFlag = 0x00000004
	CKF_SERIAL_SESSION                 MechanismInfoFlag = 0x00000004
	CKF_EXCLUDE_CHALLENGE              MechanismInfoFlag = 0x00000008
	CKF_USER_PIN_INITIALIZED           MechanismInfoFlag = 0x00000008
	CKF_EXCLUDE_PIN                    MechanismInfoFlag = 0x00000010
	CKF_RESTORE_KEY_NOT_NEEDED         MechanismInfoFlag = 0x00000020
	CKF_USER_FRIENDLY_OTP              MechanismInfoFlag = 0x00000020
	CKF_CLOCK_ON_TOKEN                 MechanismInfoFlag = 0x00000040
	CKF_ENCRYPT                        MechanismInfoFlag = 0x00000100
	CKF_PROTECTED_AUTHENTICATION_PATH  MechanismInfoFlag = 0x00000100
	CKF_DECRYPT                        MechanismInfoFlag = 0x00000200
	CKF_DUAL_CRYPTO_OPERATIONS         MechanismInfoFlag = 0x00000200
	CKF_DIGEST                         MechanismInfoFlag = 0x00000400
	CKF_TOKEN_INITIALIZED              MechanismInfoFlag = 0x00000400
	CKF_SECONDARY_AUTHENTICATION       MechanismInfoFlag = 0x00000800
	CKF_SIGN                           MechanismInfoFlag = 0x00000800
	CKF_SIGN_RECOVER                   MechanismInfoFlag = 0x00001000
	CKF_VERIFY                         MechanismInfoFlag = 0x00002000
	CKF_VERIFY_RECOVER                 MechanismInfoFlag = 0x00004000
	CKF_GENERATE                       MechanismInfoFlag = 0x00008000
	CKF_GENERATE_KEY_PAIR              MechanismInfoFlag = 0x00010000
	CKF_USER_PIN_COUNT_LOW             MechanismInfoFlag = 0x00010000
	CKF_USER_PIN_FINAL_TRY             MechanismInfoFlag = 0x00020000
	CKF_WRAP                           MechanismInfoFlag = 0x00020000
	CKF_UNWRAP                         MechanismInfoFlag = 0x00040000
	CKF_USER_PIN_LOCKED                MechanismInfoFlag = 0x00040000
	CKF_DERIVE                         MechanismInfoFlag = 0x00080000
	CKF_USER_PIN_TO_BE_CHANGED         MechanismInfoFlag = 0x00080000
	CKF_EC_F_P                         MechanismInfoFlag = 0x00100000
	CKF_SO_PIN_COUNT_LOW               MechanismInfoFlag = 0x00100000
	CKF_EC_F_2M                        MechanismInfoFlag = 0x00200000
	CKF_SO_PIN_FINAL_TRY               MechanismInfoFlag = 0x00200000
	CKF_EC_ECPARAMETERS                MechanismInfoFlag = 0x00400000
	CKF_SO_PIN_LOCKED                  MechanismInfoFlag = 0x00400000
	CKF_EC_NAMEDCURVE                  MechanismInfoFlag = 0x00800000
	CKF_SO_PIN_TO_BE_CHANGED           MechanismInfoFlag = 0x00800000
	CKF_EC_UNCOMPRESS                  MechanismInfoFlag = 0x01000000
	CKF_ERROR_STATE                    MechanismInfoFlag = 0x01000000
	CKF_EC_COMPRESS                    MechanismInfoFlag = 0x02000000
	CKF_ARRAY_ATTRIBUTE                MechanismInfoFlag = 0x40000000
	CKF_EXTENSION                      MechanismInfoFlag = 0x80000000

	CKO_DATA              ObjectClass = 0x00000000
	CKO_CERTIFICATE       ObjectClass = 0x00000001
	CKO_PUBLIC_KEY        ObjectClass = 0x00000002
	CKO_PRIVATE_KEY       ObjectClass = 0x00000003
	CKO_SECRET_KEY        ObjectClass = 0x00000004
	CKO_HW_FEATURE        ObjectClass = 0x00000005
	CKO_DOMAIN_PARAMETERS ObjectClass = 0x00000006
	CKO_MECHANISM         ObjectClass = 0x00000007
	CKO_OTP_KEY           ObjectClass = 0x00000008
	CKO_VENDOR_DEFINED    ObjectClass = 0x80000000

	CKR_OK                               Return = 0x00000000
	CKR_CANCEL                           Return = 0x00000001
	CKR_HOST_MEMORY                      Return = 0x00000002
	CKR_SLOT_ID_INVALID                  Return = 0x00000003
	CKR_GENERAL_ERROR                    Return = 0x00000005
	CKR_FUNCTION_FAILED                  Return = 0x00000006
	CKR_ARGUMENTS_BAD                    Return = 0x00000007
	CKR_NO_EVENT                         Return = 0x00000008
	CKR_NEED_TO_CREATE_THREADS           Return = 0x00000009
	CKR_CANT_LOCK                        Return = 0x0000000a
	CKR_ATTRIBUTE_READ_ONLY              Return = 0x00000010
	CKR_ATTRIBUTE_SENSITIVE              Return = 0x00000011
	CKR_ATTRIBUTE_TYPE_INVALID           Return = 0x00000012
	CKR_ATTRIBUTE_VALUE_INVALID          Return = 0x00000013
	CKR_ACTION_PROHIBITED                Return = 0x0000001b
	CKR_DATA_INVALID                     Return = 0x00000020
	CKR_DATA_LEN_RANGE                   Return = 0x00000021
	CKR_DEVICE_ERROR                     Return = 0x00000030
	CKR_DEVICE_MEMORY                    Return = 0x00000031
	CKR_DEVICE_REMOVED                   Return = 0x00000032
	CKR_ENCRYPTED_DATA_INVALID           Return = 0x00000040
	CKR_ENCRYPTED_DATA_LEN_RANGE         Return = 0x00000041
	CKR_FUNCTION_CANCELED                Return = 0x00000050
	CKR_FUNCTION_NOT_PARALLEL            Return = 0x00000051
	CKR_FUNCTION_NOT_SUPPORTED           Return = 0x00000054
	CKR_KEY_HANDLE_INVALID               Return = 0x00000060
	CKR_KEY_SIZE_RANGE                   Return = 0x00000062
	CKR_KEY_TYPE_INCONSISTENT            Return = 0x00000063
	CKR_KEY_NOT_NEEDED                   Return = 0x00000064
	CKR_KEY_CHANGED                      Return = 0x00000065
	CKR_KEY_NEEDED                       Return = 0x00000066
	CKR_KEY_INDIGESTIBLE                 Return = 0x00000067
	CKR_KEY_FUNCTION_NOT_PERMITTED       Return = 0x00000068
	CKR_KEY_NOT_WRAPPABLE                Return = 0x00000069
	CKR_KEY_UNEXTRACTABLE                Return = 0x0000006a
	CKR_MECHANISM_INVALID                Return = 0x00000070
	CKR_MECHANISM_PARAM_INVALID          Return = 0x00000071
	CKR_OBJECT_HANDLE_INVALID            Return = 0x00000082
	CKR_OPERATION_ACTIVE                 Return = 0x00000090
	CKR_OPERATION_NOT_INITIALIZED        Return = 0x00000091
	CKR_PIN_INCORRECT                    Return = 0x000000a0
	CKR_PIN_INVALID                      Return = 0x000000a1
	CKR_PIN_LEN_RANGE                    Return = 0x000000a2
	CKR_PIN_EXPIRED                      Return = 0x000000a3
	CKR_PIN_LOCKED                       Return = 0x000000a4
	CKR_SESSION_CLOSED                   Return = 0x000000b0
	CKR_SESSION_COUNT                    Return = 0x000000b1
	CKR_SESSION_HANDLE_INVALID           Return = 0x000000b3
	CKR_SESSION_PARALLEL_NOT_SUPPORTED   Return = 0x000000b4
	CKR_SESSION_READ_ONLY                Return = 0x000000b5
	CKR_SESSION_EXISTS                   Return = 0x000000b6
	CKR_SESSION_READ_ONLY_EXISTS         Return = 0x000000b7
	CKR_SESSION_READ_WRITE_SO_EXISTS     Return = 0x000000b8
	CKR_SIGNATURE_INVALID                Return = 0x000000c0
	CKR_SIGNATURE_LEN_RANGE              Return = 0x000000c1
	CKR_TEMPLATE_INCOMPLETE              Return = 0x000000d0
	CKR_TEMPLATE_INCONSISTENT            Return = 0x000000d1
	CKR_TOKEN_NOT_PRESENT                Return = 0x000000e0
	CKR_TOKEN_NOT_RECOGNIZED             Return = 0x000000e1
	CKR_TOKEN_WRITE_PROTECTED            Return = 0x000000e2
	CKR_UNWRAPPING_KEY_HANDLE_INVALID    Return = 0x000000f0
	CKR_UNWRAPPING_KEY_SIZE_RANGE        Return = 0x000000f1
	CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT Return = 0x000000f2
	CKR_USER_ALREADY_LOGGED_IN           Return = 0x00000100
	CKR_USER_NOT_LOGGED_IN               Return = 0x00000101
	CKR_USER_PIN_NOT_INITIALIZED         Return = 0x00000102
	CKR_USER_TYPE_INVALID                Return = 0x00000103
	CKR_USER_ANOTHER_ALREADY_LOGGED_IN   Return = 0x00000104
	CKR_USER_TOO_MANY_TYPES              Return = 0x00000105
	CKR_WRAPPED_KEY_INVALID              Return = 0x00000110
	CKR_WRAPPED_KEY_LEN_RANGE            Return = 0x00000112
	CKR_WRAPPING_KEY_HANDLE_INVALID      Return = 0x00000113
	CKR_WRAPPING_KEY_SIZE_RANGE          Return = 0x00000114
	CKR_WRAPPING_KEY_TYPE_INCONSISTENT   Return = 0x00000115
	CKR_RANDOM_SEED_NOT_SUPPORTED        Return = 0x00000120
	CKR_RANDOM_NO_RNG                    Return = 0x00000121
	CKR_DOMAIN_PARAMS_INVALID            Return = 0x00000130
	CKR_CURVE_NOT_SUPPORTED              Return = 0x00000140
	CKR_BUFFER_TOO_SMALL                 Return = 0x00000150
	CKR_SAVED_STATE_INVALID              Return = 0x00000160
	CKR_INFORMATION_SENSITIVE            Return = 0x00000170
	CKR_STATE_UNSAVEABLE                 Return = 0x00000180
	CKR_CRYPTOKI_NOT_INITIALIZED         Return = 0x00000190
	CKR_CRYPTOKI_ALREADY_INITIALIZED     Return = 0x00000191
	CKR_MUTEX_BAD                        Return = 0x000001a0
	CKR_MUTEX_NOT_LOCKED                 Return = 0x000001a1
	CKR_NEW_PIN_MODE                     Return = 0x000001b0
	CKR_NEXT_OTP                         Return = 0x000001b1
	CKR_EXCEEDED_MAX_ITERATIONS          Return = 0x000001b5
	CKR_FIPS_SELF_TEST_FAILED            Return = 0x000001b6
	CKR_LIBRARY_LOAD_FAILED              Return = 0x000001b7
	CKR_PIN_TOO_WEAK                     Return = 0x000001b8
	CKR_PUBLIC_KEY_INVALID               Return = 0x000001b9
	CKR_FUNCTION_REJECTED                Return = 0x00000200
	CKR_VENDOR_DEFINED                   Return = 0x80000000
	CKR_IBM_WKID_MISMATCH                Return = CKR_VENDOR_DEFINED + 0x10001
	CKR_IBM_INTERNAL_ERROR               Return = CKR_VENDOR_DEFINED + 0x10002
	CKR_IBM_TRANSPORT_ERROR              Return = CKR_VENDOR_DEFINED + 0x10003
	CKR_IBM_BLOB_ERROR                   Return = CKR_VENDOR_DEFINED + 0x10004
	CKR_IBM_BLOBKEY_CONFLICT             Return = CKR_VENDOR_DEFINED + 0x10005
	CKR_IBM_MODE_CONFLICT                Return = CKR_VENDOR_DEFINED + 0x10006
	CKR_IBM_NONCRT_KEY_SIZE              Return = CKR_VENDOR_DEFINED + 0x10008
	CKR_IBM_WK_NOT_INITIALIZED           Return = CKR_VENDOR_DEFINED + 0x10009
	CKR_IBM_OA_API_ERROR                 Return = CKR_VENDOR_DEFINED + 0x1000a
	CKR_IBM_REQ_TIMEOUT                  Return = CKR_VENDOR_DEFINED + 0x1000b
	CKR_IBM_READONLY                     Return = CKR_VENDOR_DEFINED + 0x1000c
	CKR_IBM_STATIC_POLICY                Return = CKR_VENDOR_DEFINED + 0x1000d
	CKR_IBM_EMBED_CODE                   Return = CKR_VENDOR_DEFINED + 0x1000e
	CKR_IBM_EMBED_GENERIC                Return = CKR_VENDOR_DEFINED + 0x1000f
	CKR_IBM_TRANSPORT_LIMIT              Return = CKR_VENDOR_DEFINED + 0x10010
	CKR_IBM_FCV_NOT_SET                  Return = CKR_VENDOR_DEFINED + 0x10011
	CKR_IBM_PERF_CATEGORY_INVALID        Return = CKR_VENDOR_DEFINED + 0x10012
	CKR_IBM_API_MISMATCH                 Return = CKR_VENDOR_DEFINED + 0x10013
	CKR_IBM_TARGET_INVALID               Return = CKR_VENDOR_DEFINED + 0x10030
	CKR_VENDOR_DEFINED_GREP11            Return = CKR_VENDOR_DEFINED + 0x40000
	CKR_IBM_GREP11_NOT_AUTHENTICATED     Return = CKR_VENDOR_DEFINED_GREP11 + 0x1
	CKR_IBM_GREP11_CANNOT_UNMARSHAL      Return = CKR_VENDOR_DEFINED_GREP11 + 0x2
	CKR_IBM_GREP11_CANNOT_MARSHAL        Return = CKR_VENDOR_DEFINED_GREP11 + 0x3
	CKR_IBM_GREP11_CONFLICT              Return = CKR_VENDOR_DEFINED_GREP11 + 0x4
	CKR_IBM_GREP11_DBINTERNAL            Return = CKR_VENDOR_DEFINED_GREP11 + 0x5
	CKR_IBM_GREP11_SERVER_INTERNAL       Return = CKR_VENDOR_DEFINED_GREP11 + 0x6

	// Maximum Key Size
	MAX_BLOB_SIZE = 8192
	MAX_CSUMSIZE  = 64

	// Max block size of block ciphers
	MAX_BLOCK_SIZE = 256 / 8
	AES_BLOCK_SIZE = 16
	DES_BLOCK_SIZE = 8

	// Max digest output bytes
	MAX_DIGEST_BYTES = 512 / 8

	// MAX_DIGEST_STATE_BYTES is the maximum size of wrapped digest state blobs
	//   -- Section 10.1 Function descriptions, EP11 design Document
	MAX_DIGEST_STATE_BYTES = 1024
	MAX_CRYPT_STATE_BYTES  = 8192

	CK_UNAVAILABLE_INFORMATION uint64 = 0xFFFFFFFFFFFFFFFF
)

var (
	AdminCommandNameToValue = map[string]AdminCommand{
		"XCP_ADM_ADMIN_LOGIN":         XCP_ADM_ADMIN_LOGIN,
		"XCP_ADM_DOM_ADMIN_LOGIN":     XCP_ADM_DOM_ADMIN_LOGIN,
		"XCP_ADM_ADMIN_LOGOUT":        XCP_ADM_ADMIN_LOGOUT,
		"XCP_ADM_DOM_ADMIN_LOGOUT":    XCP_ADM_DOM_ADMIN_LOGOUT,
		"XCP_ADM_ADMIN_REPLACE":       XCP_ADM_ADMIN_REPLACE,
		"XCP_ADM_DOM_ADMIN_REPLACE":   XCP_ADM_DOM_ADMIN_REPLACE,
		"XCP_ADM_SET_ATTR":            XCP_ADM_SET_ATTR,
		"XCP_ADM_DOM_SET_ATTR":        XCP_ADM_DOM_SET_ATTR,
		"XCP_ADM_GEN_DOM_IMPORTER":    XCP_ADM_GEN_DOM_IMPORTER,
		"XCP_ADM_GEN_WK":              XCP_ADM_GEN_WK,
		"XCP_ADM_EXPORT_WK":           XCP_ADM_EXPORT_WK,
		"XCP_ADM_IMPORT_WK":           XCP_ADM_IMPORT_WK,
		"XCP_ADM_COMMIT_WK":           XCP_ADM_COMMIT_WK,
		"XCP_ADM_FINALIZE_WK":         XCP_ADM_FINALIZE_WK,
		"XCP_ADM_ZEROIZE":             XCP_ADM_ZEROIZE,
		"XCP_ADM_DOM_ZEROIZE":         XCP_ADM_DOM_ZEROIZE,
		"XCP_ADM_DOM_CTRLPOINT_SET":   XCP_ADM_DOM_CTRLPOINT_SET,
		"XCP_ADM_DOM_CTRLPOINT_ADD":   XCP_ADM_DOM_CTRLPOINT_ADD,
		"XCP_ADM_DOM_CTRLPOINT_DEL":   XCP_ADM_DOM_CTRLPOINT_DEL,
		"XCP_ADM_SET_CLOCK":           XCP_ADM_SET_CLOCK,
		"XCP_ADM_SET_FCV":             XCP_ADM_SET_FCV,
		"XCP_ADM_CTRLPOINT_SET":       XCP_ADM_CTRLPOINT_SET,
		"XCP_ADM_CTRLPOINT_ADD":       XCP_ADM_CTRLPOINT_ADD,
		"XCP_ADM_CTRLPOINT_DEL":       XCP_ADM_CTRLPOINT_DEL,
		"XCP_ADM_REENCRYPT":           XCP_ADM_REENCRYPT,
		"XCP_ADM_RK_REMOVE":           XCP_ADM_RK_REMOVE,
		"XCP_ADM_CLEAR_WK":            XCP_ADM_CLEAR_WK,
		"XCP_ADM_CLEAR_NEXT_WK":       XCP_ADM_CLEAR_NEXT_WK,
		"XCP_ADM_SYSTEM_ZEROIZE":      XCP_ADM_SYSTEM_ZEROIZE,
		"XCP_ADM_EXPORT_STATE":        XCP_ADM_EXPORT_STATE,
		"XCP_ADM_IMPORT_STATE":        XCP_ADM_IMPORT_STATE,
		"XCP_ADM_COMMIT_STATE":        XCP_ADM_COMMIT_STATE,
		"XCP_ADM_REMOVE_STATE":        XCP_ADM_REMOVE_STATE,
		"XCP_ADM_GEN_MODULE_IMPORTER": XCP_ADM_GEN_MODULE_IMPORTER,
		"XCP_ADM_SET_TRUSTED":         XCP_ADM_SET_TRUSTED,
		"XCP_ADM_DOMAINS_ZEROIZE":     XCP_ADM_DOMAINS_ZEROIZE,
		"XCP_ADM_SESSION_REMOVE":      XCP_ADM_SESSION_REMOVE,
		"XCP_ADM_EXPORT_NEXT_WK":      XCP_ADM_EXPORT_NEXT_WK,
		"XCP_ADMQ_ADMIN":              XCP_ADMQ_ADMIN,
		"XCP_ADMQ_DOMADMIN":           XCP_ADMQ_DOMADMIN,
		"XCP_ADMQ_DEVICE_CERT":        XCP_ADMQ_DEVICE_CERT,
		"XCP_ADMQ_DOM_IMPORTER_CERT":  XCP_ADMQ_DOM_IMPORTER_CERT,
		"XCP_ADMQ_CTRLPOINTS":         XCP_ADMQ_CTRLPOINTS,
		"XCP_ADMQ_DOM_CTRLPOINTS":     XCP_ADMQ_DOM_CTRLPOINTS,
		"XCP_ADMQ_WK":                 XCP_ADMQ_WK,
		"XCP_ADMQ_NEXT_WK":            XCP_ADMQ_NEXT_WK,
		"XCP_ADMQ_ATTRS":              XCP_ADMQ_ATTRS,
		"XCP_ADMQ_DOM_ATTRS":          XCP_ADMQ_DOM_ATTRS,
		"XCP_ADMQ_FCV":                XCP_ADMQ_FCV,
		"XCP_ADMQ_WK_ORIGINS":         XCP_ADMQ_WK_ORIGINS,
		"XCP_ADMQ_RKLIST":             XCP_ADMQ_RKLIST,
		"XCP_ADMQ_INTERNAL_STATE":     XCP_ADMQ_INTERNAL_STATE,
		"XCP_ADMQ_IMPORTER_CERT":      XCP_ADMQ_IMPORTER_CERT,
		"XCP_ADMQ_AUDIT_STATE":        XCP_ADMQ_AUDIT_STATE,
	}
	AdminCommandValueToName = map[AdminCommand]string{
		XCP_ADM_ADMIN_LOGIN:         "XCP_ADM_ADMIN_LOGIN",
		XCP_ADM_DOM_ADMIN_LOGIN:     "XCP_ADM_DOM_ADMIN_LOGIN",
		XCP_ADM_ADMIN_LOGOUT:        "XCP_ADM_ADMIN_LOGOUT",
		XCP_ADM_DOM_ADMIN_LOGOUT:    "XCP_ADM_DOM_ADMIN_LOGOUT",
		XCP_ADM_ADMIN_REPLACE:       "XCP_ADM_ADMIN_REPLACE",
		XCP_ADM_DOM_ADMIN_REPLACE:   "XCP_ADM_DOM_ADMIN_REPLACE",
		XCP_ADM_SET_ATTR:            "XCP_ADM_SET_ATTR",
		XCP_ADM_DOM_SET_ATTR:        "XCP_ADM_DOM_SET_ATTR",
		XCP_ADM_GEN_DOM_IMPORTER:    "XCP_ADM_GEN_DOM_IMPORTER",
		XCP_ADM_GEN_WK:              "XCP_ADM_GEN_WK",
		XCP_ADM_EXPORT_WK:           "XCP_ADM_EXPORT_WK",
		XCP_ADM_IMPORT_WK:           "XCP_ADM_IMPORT_WK",
		XCP_ADM_COMMIT_WK:           "XCP_ADM_COMMIT_WK",
		XCP_ADM_FINALIZE_WK:         "XCP_ADM_FINALIZE_WK",
		XCP_ADM_ZEROIZE:             "XCP_ADM_ZEROIZE",
		XCP_ADM_DOM_ZEROIZE:         "XCP_ADM_DOM_ZEROIZE",
		XCP_ADM_DOM_CTRLPOINT_SET:   "XCP_ADM_DOM_CTRLPOINT_SET",
		XCP_ADM_DOM_CTRLPOINT_ADD:   "XCP_ADM_DOM_CTRLPOINT_ADD",
		XCP_ADM_DOM_CTRLPOINT_DEL:   "XCP_ADM_DOM_CTRLPOINT_DEL",
		XCP_ADM_SET_CLOCK:           "XCP_ADM_SET_CLOCK",
		XCP_ADM_SET_FCV:             "XCP_ADM_SET_FCV",
		XCP_ADM_CTRLPOINT_SET:       "XCP_ADM_CTRLPOINT_SET",
		XCP_ADM_CTRLPOINT_ADD:       "XCP_ADM_CTRLPOINT_ADD",
		XCP_ADM_CTRLPOINT_DEL:       "XCP_ADM_CTRLPOINT_DEL",
		XCP_ADM_REENCRYPT:           "XCP_ADM_REENCRYPT",
		XCP_ADM_RK_REMOVE:           "XCP_ADM_RK_REMOVE",
		XCP_ADM_CLEAR_WK:            "XCP_ADM_CLEAR_WK",
		XCP_ADM_CLEAR_NEXT_WK:       "XCP_ADM_CLEAR_NEXT_WK",
		XCP_ADM_SYSTEM_ZEROIZE:      "XCP_ADM_SYSTEM_ZEROIZE",
		XCP_ADM_EXPORT_STATE:        "XCP_ADM_EXPORT_STATE",
		XCP_ADM_IMPORT_STATE:        "XCP_ADM_IMPORT_STATE",
		XCP_ADM_COMMIT_STATE:        "XCP_ADM_COMMIT_STATE",
		XCP_ADM_REMOVE_STATE:        "XCP_ADM_REMOVE_STATE",
		XCP_ADM_GEN_MODULE_IMPORTER: "XCP_ADM_GEN_MODULE_IMPORTER",
		XCP_ADM_SET_TRUSTED:         "XCP_ADM_SET_TRUSTED",
		XCP_ADM_DOMAINS_ZEROIZE:     "XCP_ADM_DOMAINS_ZEROIZE",
		XCP_ADM_SESSION_REMOVE:      "XCP_ADM_SESSION_REMOVE",
		XCP_ADM_EXPORT_NEXT_WK:      "XCP_ADM_EXPORT_NEXT_WK",
		XCP_ADMQ_ADMIN:              "XCP_ADMQ_ADMIN",
		XCP_ADMQ_DOMADMIN:           "XCP_ADMQ_DOMADMIN",
		XCP_ADMQ_DEVICE_CERT:        "XCP_ADMQ_DEVICE_CERT",
		XCP_ADMQ_DOM_IMPORTER_CERT:  "XCP_ADMQ_DOM_IMPORTER_CERT",
		XCP_ADMQ_CTRLPOINTS:         "XCP_ADMQ_CTRLPOINTS",
		XCP_ADMQ_DOM_CTRLPOINTS:     "XCP_ADMQ_DOM_CTRLPOINTS",
		XCP_ADMQ_WK:                 "XCP_ADMQ_WK",
		XCP_ADMQ_NEXT_WK:            "XCP_ADMQ_NEXT_WK",
		XCP_ADMQ_ATTRS:              "XCP_ADMQ_ATTRS",
		XCP_ADMQ_DOM_ATTRS:          "XCP_ADMQ_DOM_ATTRS",
		XCP_ADMQ_FCV:                "XCP_ADMQ_FCV",
		XCP_ADMQ_WK_ORIGINS:         "XCP_ADMQ_WK_ORIGINS",
		XCP_ADMQ_RKLIST:             "XCP_ADMQ_RKLIST",
		XCP_ADMQ_INTERNAL_STATE:     "XCP_ADMQ_INTERNAL_STATE",
		XCP_ADMQ_IMPORTER_CERT:      "XCP_ADMQ_IMPORTER_CERT",
		XCP_ADMQ_AUDIT_STATE:        "XCP_ADMQ_AUDIT_STATE",
	}
	AttributeNameToValue = map[string]Attribute{
		"CKA_CLASS":                         CKA_CLASS,
		"CKA_TOKEN":                         CKA_TOKEN,
		"CKA_PRIVATE":                       CKA_PRIVATE,
		"CKA_LABEL":                         CKA_LABEL,
		"CKA_APPLICATION":                   CKA_APPLICATION,
		"CKA_VALUE":                         CKA_VALUE,
		"CKA_OBJECT_ID":                     CKA_OBJECT_ID,
		"CKA_CERTIFICATE_TYPE":              CKA_CERTIFICATE_TYPE,
		"CKA_ISSUER":                        CKA_ISSUER,
		"CKA_SERIAL_NUMBER":                 CKA_SERIAL_NUMBER,
		"CKA_AC_ISSUER":                     CKA_AC_ISSUER,
		"CKA_OWNER":                         CKA_OWNER,
		"CKA_ATTR_TYPES":                    CKA_ATTR_TYPES,
		"CKA_TRUSTED":                       CKA_TRUSTED,
		"CKA_CERTIFICATE_CATEGORY":          CKA_CERTIFICATE_CATEGORY,
		"CKA_JAVA_MIDP_SECURITY_DOMAIN":     CKA_JAVA_MIDP_SECURITY_DOMAIN,
		"CKA_URL":                           CKA_URL,
		"CKA_HASH_OF_SUBJECT_PUBLIC_KEY":    CKA_HASH_OF_SUBJECT_PUBLIC_KEY,
		"CKA_HASH_OF_ISSUER_PUBLIC_KEY":     CKA_HASH_OF_ISSUER_PUBLIC_KEY,
		"CKA_NAME_HASH_ALGORITHM":           CKA_NAME_HASH_ALGORITHM,
		"CKA_CHECK_VALUE":                   CKA_CHECK_VALUE,
		"CKA_KEY_TYPE":                      CKA_KEY_TYPE,
		"CKA_SUBJECT":                       CKA_SUBJECT,
		"CKA_ID":                            CKA_ID,
		"CKA_SENSITIVE":                     CKA_SENSITIVE,
		"CKA_ENCRYPT":                       CKA_ENCRYPT,
		"CKA_DECRYPT":                       CKA_DECRYPT,
		"CKA_WRAP":                          CKA_WRAP,
		"CKA_UNWRAP":                        CKA_UNWRAP,
		"CKA_SIGN":                          CKA_SIGN,
		"CKA_SIGN_RECOVER":                  CKA_SIGN_RECOVER,
		"CKA_VERIFY":                        CKA_VERIFY,
		"CKA_VERIFY_RECOVER":                CKA_VERIFY_RECOVER,
		"CKA_DERIVE":                        CKA_DERIVE,
		"CKA_START_DATE":                    CKA_START_DATE,
		"CKA_END_DATE":                      CKA_END_DATE,
		"CKA_MODULUS":                       CKA_MODULUS,
		"CKA_MODULUS_BITS":                  CKA_MODULUS_BITS,
		"CKA_PUBLIC_EXPONENT":               CKA_PUBLIC_EXPONENT,
		"CKA_PRIVATE_EXPONENT":              CKA_PRIVATE_EXPONENT,
		"CKA_PRIME_1":                       CKA_PRIME_1,
		"CKA_PRIME_2":                       CKA_PRIME_2,
		"CKA_EXPONENT_1":                    CKA_EXPONENT_1,
		"CKA_EXPONENT_2":                    CKA_EXPONENT_2,
		"CKA_COEFFICIENT":                   CKA_COEFFICIENT,
		"CKA_PUBLIC_KEY_INFO":               CKA_PUBLIC_KEY_INFO,
		"CKA_PRIME":                         CKA_PRIME,
		"CKA_SUBPRIME":                      CKA_SUBPRIME,
		"CKA_BASE":                          CKA_BASE,
		"CKA_PRIME_BITS":                    CKA_PRIME_BITS,
		"CKA_SUBPRIME_BITS":                 CKA_SUBPRIME_BITS,
		"CKA_SUB_PRIME_BITS":                CKA_SUB_PRIME_BITS,
		"CKA_VALUE_BITS":                    CKA_VALUE_BITS,
		"CKA_VALUE_LEN":                     CKA_VALUE_LEN,
		"CKA_EXTRACTABLE":                   CKA_EXTRACTABLE,
		"CKA_LOCAL":                         CKA_LOCAL,
		"CKA_NEVER_EXTRACTABLE":             CKA_NEVER_EXTRACTABLE,
		"CKA_ALWAYS_SENSITIVE":              CKA_ALWAYS_SENSITIVE,
		"CKA_KEY_GEN_MECHANISM":             CKA_KEY_GEN_MECHANISM,
		"CKA_MODIFIABLE":                    CKA_MODIFIABLE,
		"CKA_COPYABLE":                      CKA_COPYABLE,
		"CKA_DESTROYABLE":                   CKA_DESTROYABLE,
		"CKA_ECDSA_PARAMS":                  CKA_ECDSA_PARAMS,
		"CKA_EC_PARAMS":                     CKA_EC_PARAMS,
		"CKA_EC_POINT":                      CKA_EC_POINT,
		"CKA_SECONDARY_AUTH":                CKA_SECONDARY_AUTH,
		"CKA_AUTH_PIN_FLAGS":                CKA_AUTH_PIN_FLAGS,
		"CKA_ALWAYS_AUTHENTICATE":           CKA_ALWAYS_AUTHENTICATE,
		"CKA_WRAP_WITH_TRUSTED":             CKA_WRAP_WITH_TRUSTED,
		"CKA_OTP_FORMAT":                    CKA_OTP_FORMAT,
		"CKA_OTP_LENGTH":                    CKA_OTP_LENGTH,
		"CKA_OTP_TIME_INTERVAL":             CKA_OTP_TIME_INTERVAL,
		"CKA_OTP_USER_FRIENDLY_MODE":        CKA_OTP_USER_FRIENDLY_MODE,
		"CKA_OTP_CHALLENGE_REQUIREMENT":     CKA_OTP_CHALLENGE_REQUIREMENT,
		"CKA_OTP_TIME_REQUIREMENT":          CKA_OTP_TIME_REQUIREMENT,
		"CKA_OTP_COUNTER_REQUIREMENT":       CKA_OTP_COUNTER_REQUIREMENT,
		"CKA_OTP_PIN_REQUIREMENT":           CKA_OTP_PIN_REQUIREMENT,
		"CKA_OTP_USER_IDENTIFIER":           CKA_OTP_USER_IDENTIFIER,
		"CKA_OTP_SERVICE_IDENTIFIER":        CKA_OTP_SERVICE_IDENTIFIER,
		"CKA_OTP_SERVICE_LOGO":              CKA_OTP_SERVICE_LOGO,
		"CKA_OTP_SERVICE_LOGO_TYPE":         CKA_OTP_SERVICE_LOGO_TYPE,
		"CKA_OTP_COUNTER":                   CKA_OTP_COUNTER,
		"CKA_OTP_TIME":                      CKA_OTP_TIME,
		"CKA_GOSTR3410_PARAMS":              CKA_GOSTR3410_PARAMS,
		"CKA_GOSTR3411_PARAMS":              CKA_GOSTR3411_PARAMS,
		"CKA_GOST28147_PARAMS":              CKA_GOST28147_PARAMS,
		"CKA_HW_FEATURE_TYPE":               CKA_HW_FEATURE_TYPE,
		"CKA_RESET_ON_INIT":                 CKA_RESET_ON_INIT,
		"CKA_HAS_RESET":                     CKA_HAS_RESET,
		"CKA_PIXEL_X":                       CKA_PIXEL_X,
		"CKA_PIXEL_Y":                       CKA_PIXEL_Y,
		"CKA_RESOLUTION":                    CKA_RESOLUTION,
		"CKA_CHAR_ROWS":                     CKA_CHAR_ROWS,
		"CKA_CHAR_COLUMNS":                  CKA_CHAR_COLUMNS,
		"CKA_COLOR":                         CKA_COLOR,
		"CKA_BITS_PER_PIXEL":                CKA_BITS_PER_PIXEL,
		"CKA_CHAR_SETS":                     CKA_CHAR_SETS,
		"CKA_ENCODING_METHODS":              CKA_ENCODING_METHODS,
		"CKA_MIME_TYPES":                    CKA_MIME_TYPES,
		"CKA_MECHANISM_TYPE":                CKA_MECHANISM_TYPE,
		"CKA_REQUIRED_CMS_ATTRIBUTES":       CKA_REQUIRED_CMS_ATTRIBUTES,
		"CKA_DEFAULT_CMS_ATTRIBUTES":        CKA_DEFAULT_CMS_ATTRIBUTES,
		"CKA_SUPPORTED_CMS_ATTRIBUTES":      CKA_SUPPORTED_CMS_ATTRIBUTES,
		"CKA_WRAP_TEMPLATE":                 CKA_WRAP_TEMPLATE,
		"CKA_UNWRAP_TEMPLATE":               CKA_UNWRAP_TEMPLATE,
		"CKA_DERIVE_TEMPLATE":               CKA_DERIVE_TEMPLATE,
		"CKA_ALLOWED_MECHANISMS":            CKA_ALLOWED_MECHANISMS,
		"CKA_VENDOR_DEFINED":                CKA_VENDOR_DEFINED,
		"CKA_IBM_RESTRICTABLE":              CKA_IBM_RESTRICTABLE,
		"CKA_IBM_NEVER_MODIFIABLE":          CKA_IBM_NEVER_MODIFIABLE,
		"CKA_IBM_RETAINKEY":                 CKA_IBM_RETAINKEY,
		"CKA_IBM_ATTRBOUND":                 CKA_IBM_ATTRBOUND,
		"CKA_IBM_KEYTYPE":                   CKA_IBM_KEYTYPE,
		"CKA_IBM_CV":                        CKA_IBM_CV,
		"CKA_IBM_MACKEY":                    CKA_IBM_MACKEY,
		"CKA_IBM_USE_AS_DATA":               CKA_IBM_USE_AS_DATA,
		"CKA_IBM_STRUCT_PARAMS":             CKA_IBM_STRUCT_PARAMS,
		"CKA_IBM_STD_COMPLIANCE1":           CKA_IBM_STD_COMPLIANCE1,
		"CKA_IBM_MLS_TYPE":                  CKA_IBM_MLS_TYPE,
		"CKA_IBM_PROTKEY_EXTRACTABLE":       CKA_IBM_PROTKEY_EXTRACTABLE,
		"CKA_IBM_PROTKEY_NEVER_EXTRACTABLE": CKA_IBM_PROTKEY_NEVER_EXTRACTABLE,
		"CKA_IBM_WIRETEST":                  CKA_IBM_WIRETEST,
		"CKA_VENDOR_DEFINED_GREP11":         CKA_VENDOR_DEFINED_GREP11,
		"CKA_GREP11_TOKEN_LABEL":            CKA_GREP11_TOKEN_LABEL,
		"CKA_GREP11_RAW_KEYBLOB":            CKA_GREP11_RAW_KEYBLOB,
		"CKA_GREP11_VOTE_VERSION":           CKA_GREP11_VOTE_VERSION,
		"CKA_IBM_EPX":                       CKA_IBM_EPX,
	}
	AttributeValueToName = map[Attribute]string{
		CKA_CLASS:                         "CKA_CLASS",
		CKA_TOKEN:                         "CKA_TOKEN",
		CKA_PRIVATE:                       "CKA_PRIVATE",
		CKA_LABEL:                         "CKA_LABEL",
		CKA_APPLICATION:                   "CKA_APPLICATION",
		CKA_VALUE:                         "CKA_VALUE",
		CKA_OBJECT_ID:                     "CKA_OBJECT_ID",
		CKA_CERTIFICATE_TYPE:              "CKA_CERTIFICATE_TYPE",
		CKA_ISSUER:                        "CKA_ISSUER",
		CKA_SERIAL_NUMBER:                 "CKA_SERIAL_NUMBER",
		CKA_AC_ISSUER:                     "CKA_AC_ISSUER",
		CKA_OWNER:                         "CKA_OWNER",
		CKA_ATTR_TYPES:                    "CKA_ATTR_TYPES",
		CKA_TRUSTED:                       "CKA_TRUSTED",
		CKA_CERTIFICATE_CATEGORY:          "CKA_CERTIFICATE_CATEGORY",
		CKA_JAVA_MIDP_SECURITY_DOMAIN:     "CKA_JAVA_MIDP_SECURITY_DOMAIN",
		CKA_URL:                           "CKA_URL",
		CKA_HASH_OF_SUBJECT_PUBLIC_KEY:    "CKA_HASH_OF_SUBJECT_PUBLIC_KEY",
		CKA_HASH_OF_ISSUER_PUBLIC_KEY:     "CKA_HASH_OF_ISSUER_PUBLIC_KEY",
		CKA_NAME_HASH_ALGORITHM:           "CKA_NAME_HASH_ALGORITHM",
		CKA_CHECK_VALUE:                   "CKA_CHECK_VALUE",
		CKA_KEY_TYPE:                      "CKA_KEY_TYPE",
		CKA_SUBJECT:                       "CKA_SUBJECT",
		CKA_ID:                            "CKA_ID",
		CKA_SENSITIVE:                     "CKA_SENSITIVE",
		CKA_ENCRYPT:                       "CKA_ENCRYPT",
		CKA_DECRYPT:                       "CKA_DECRYPT",
		CKA_WRAP:                          "CKA_WRAP",
		CKA_UNWRAP:                        "CKA_UNWRAP",
		CKA_SIGN:                          "CKA_SIGN",
		CKA_SIGN_RECOVER:                  "CKA_SIGN_RECOVER",
		CKA_VERIFY:                        "CKA_VERIFY",
		CKA_VERIFY_RECOVER:                "CKA_VERIFY_RECOVER",
		CKA_DERIVE:                        "CKA_DERIVE",
		CKA_START_DATE:                    "CKA_START_DATE",
		CKA_END_DATE:                      "CKA_END_DATE",
		CKA_MODULUS:                       "CKA_MODULUS",
		CKA_MODULUS_BITS:                  "CKA_MODULUS_BITS",
		CKA_PUBLIC_EXPONENT:               "CKA_PUBLIC_EXPONENT",
		CKA_PRIVATE_EXPONENT:              "CKA_PRIVATE_EXPONENT",
		CKA_PRIME_1:                       "CKA_PRIME_1",
		CKA_PRIME_2:                       "CKA_PRIME_2",
		CKA_EXPONENT_1:                    "CKA_EXPONENT_1",
		CKA_EXPONENT_2:                    "CKA_EXPONENT_2",
		CKA_COEFFICIENT:                   "CKA_COEFFICIENT",
		CKA_PUBLIC_KEY_INFO:               "CKA_PUBLIC_KEY_INFO",
		CKA_PRIME:                         "CKA_PRIME",
		CKA_SUBPRIME:                      "CKA_SUBPRIME",
		CKA_BASE:                          "CKA_BASE",
		CKA_PRIME_BITS:                    "CKA_PRIME_BITS",
		CKA_SUBPRIME_BITS:                 "CKA_SUBPRIME_BITS",
		CKA_VALUE_BITS:                    "CKA_VALUE_BITS",
		CKA_VALUE_LEN:                     "CKA_VALUE_LEN",
		CKA_EXTRACTABLE:                   "CKA_EXTRACTABLE",
		CKA_LOCAL:                         "CKA_LOCAL",
		CKA_NEVER_EXTRACTABLE:             "CKA_NEVER_EXTRACTABLE",
		CKA_ALWAYS_SENSITIVE:              "CKA_ALWAYS_SENSITIVE",
		CKA_KEY_GEN_MECHANISM:             "CKA_KEY_GEN_MECHANISM",
		CKA_MODIFIABLE:                    "CKA_MODIFIABLE",
		CKA_COPYABLE:                      "CKA_COPYABLE",
		CKA_DESTROYABLE:                   "CKA_DESTROYABLE",
		CKA_EC_PARAMS:                     "CKA_EC_PARAMS",
		CKA_EC_POINT:                      "CKA_EC_POINT",
		CKA_SECONDARY_AUTH:                "CKA_SECONDARY_AUTH",
		CKA_AUTH_PIN_FLAGS:                "CKA_AUTH_PIN_FLAGS",
		CKA_ALWAYS_AUTHENTICATE:           "CKA_ALWAYS_AUTHENTICATE",
		CKA_WRAP_WITH_TRUSTED:             "CKA_WRAP_WITH_TRUSTED",
		CKA_OTP_FORMAT:                    "CKA_OTP_FORMAT",
		CKA_OTP_LENGTH:                    "CKA_OTP_LENGTH",
		CKA_OTP_TIME_INTERVAL:             "CKA_OTP_TIME_INTERVAL",
		CKA_OTP_USER_FRIENDLY_MODE:        "CKA_OTP_USER_FRIENDLY_MODE",
		CKA_OTP_CHALLENGE_REQUIREMENT:     "CKA_OTP_CHALLENGE_REQUIREMENT",
		CKA_OTP_TIME_REQUIREMENT:          "CKA_OTP_TIME_REQUIREMENT",
		CKA_OTP_COUNTER_REQUIREMENT:       "CKA_OTP_COUNTER_REQUIREMENT",
		CKA_OTP_PIN_REQUIREMENT:           "CKA_OTP_PIN_REQUIREMENT",
		CKA_OTP_USER_IDENTIFIER:           "CKA_OTP_USER_IDENTIFIER",
		CKA_OTP_SERVICE_IDENTIFIER:        "CKA_OTP_SERVICE_IDENTIFIER",
		CKA_OTP_SERVICE_LOGO:              "CKA_OTP_SERVICE_LOGO",
		CKA_OTP_SERVICE_LOGO_TYPE:         "CKA_OTP_SERVICE_LOGO_TYPE",
		CKA_OTP_COUNTER:                   "CKA_OTP_COUNTER",
		CKA_OTP_TIME:                      "CKA_OTP_TIME",
		CKA_GOSTR3410_PARAMS:              "CKA_GOSTR3410_PARAMS",
		CKA_GOSTR3411_PARAMS:              "CKA_GOSTR3411_PARAMS",
		CKA_GOST28147_PARAMS:              "CKA_GOST28147_PARAMS",
		CKA_HW_FEATURE_TYPE:               "CKA_HW_FEATURE_TYPE",
		CKA_RESET_ON_INIT:                 "CKA_RESET_ON_INIT",
		CKA_HAS_RESET:                     "CKA_HAS_RESET",
		CKA_PIXEL_X:                       "CKA_PIXEL_X",
		CKA_PIXEL_Y:                       "CKA_PIXEL_Y",
		CKA_RESOLUTION:                    "CKA_RESOLUTION",
		CKA_CHAR_ROWS:                     "CKA_CHAR_ROWS",
		CKA_CHAR_COLUMNS:                  "CKA_CHAR_COLUMNS",
		CKA_COLOR:                         "CKA_COLOR",
		CKA_BITS_PER_PIXEL:                "CKA_BITS_PER_PIXEL",
		CKA_CHAR_SETS:                     "CKA_CHAR_SETS",
		CKA_ENCODING_METHODS:              "CKA_ENCODING_METHODS",
		CKA_MIME_TYPES:                    "CKA_MIME_TYPES",
		CKA_MECHANISM_TYPE:                "CKA_MECHANISM_TYPE",
		CKA_REQUIRED_CMS_ATTRIBUTES:       "CKA_REQUIRED_CMS_ATTRIBUTES",
		CKA_DEFAULT_CMS_ATTRIBUTES:        "CKA_DEFAULT_CMS_ATTRIBUTES",
		CKA_SUPPORTED_CMS_ATTRIBUTES:      "CKA_SUPPORTED_CMS_ATTRIBUTES",
		CKA_WRAP_TEMPLATE:                 "CKA_WRAP_TEMPLATE",
		CKA_UNWRAP_TEMPLATE:               "CKA_UNWRAP_TEMPLATE",
		CKA_DERIVE_TEMPLATE:               "CKA_DERIVE_TEMPLATE",
		CKA_ALLOWED_MECHANISMS:            "CKA_ALLOWED_MECHANISMS",
		CKA_VENDOR_DEFINED:                "CKA_VENDOR_DEFINED",
		CKA_IBM_RESTRICTABLE:              "CKA_IBM_RESTRICTABLE",
		CKA_IBM_NEVER_MODIFIABLE:          "CKA_IBM_NEVER_MODIFIABLE",
		CKA_IBM_RETAINKEY:                 "CKA_IBM_RETAINKEY",
		CKA_IBM_ATTRBOUND:                 "CKA_IBM_ATTRBOUND",
		CKA_IBM_KEYTYPE:                   "CKA_IBM_KEYTYPE",
		CKA_IBM_CV:                        "CKA_IBM_CV",
		CKA_IBM_MACKEY:                    "CKA_IBM_MACKEY",
		CKA_IBM_USE_AS_DATA:               "CKA_IBM_USE_AS_DATA",
		CKA_IBM_STRUCT_PARAMS:             "CKA_IBM_STRUCT_PARAMS",
		CKA_IBM_STD_COMPLIANCE1:           "CKA_IBM_STD_COMPLIANCE1",
		CKA_IBM_MLS_TYPE:                  "CKA_IBM_MLS_TYPE",
		CKA_IBM_PROTKEY_EXTRACTABLE:       "CKA_IBM_PROTKEY_EXTRACTABLE",
		CKA_IBM_PROTKEY_NEVER_EXTRACTABLE: "CKA_IBM_PROTKEY_NEVER_EXTRACTABLE",
		CKA_IBM_WIRETEST:                  "CKA_IBM_WIRETEST",
		CKA_VENDOR_DEFINED_GREP11:         "CKA_VENDOR_DEFINED_GREP11",
		CKA_GREP11_TOKEN_LABEL:            "CKA_GREP11_TOKEN_LABEL",
		CKA_GREP11_RAW_KEYBLOB:            "CKA_GREP11_RAW_KEYBLOB",
		CKA_GREP11_VOTE_VERSION:           "CKA_GREP11_VOTE_VERSION",
		CKA_IBM_EPX:                       "CKA_IBM_EPX",
	}
	CardAttributeFlagsNameToValue = map[string]CardAttributeFlags{
		"XCP_ADMP_WK_IMPORT":          XCP_ADMP_WK_IMPORT,
		"XCP_ADMP_WK_EXPORT":          XCP_ADMP_WK_EXPORT,
		"XCP_ADMP_WK_1PART":           XCP_ADMP_WK_1PART,
		"XCP_ADMP_WK_RANDOM":          XCP_ADMP_WK_RANDOM,
		"XCP_ADMP_1SIGN":              XCP_ADMP_1SIGN,
		"XCP_ADMP_CP_1SIGN":           XCP_ADMP_CP_1SIGN,
		"XCP_ADMP_ZERO_1SIGN":         XCP_ADMP_ZERO_1SIGN,
		"XCP_ADMP_NO_DOMAIN_IMPRINT":  XCP_ADMP_NO_DOMAIN_IMPRINT,
		"XCP_ADMP_STATE_IMPORT":       XCP_ADMP_STATE_IMPORT,
		"XCP_ADMP_STATE_EXPORT":       XCP_ADMP_STATE_EXPORT,
		"XCP_ADMP_STATE_1PART":        XCP_ADMP_STATE_1PART,
		"XCP_ADMP_NO_EPX":             XCP_ADMP_NO_EPX,
		"XCP_ADMP_NO_EPXVM":           XCP_ADMP_NO_EPXVM,
		"XCP_ADMP_DO_NOT_DISTURB":     XCP_ADMP_DO_NOT_DISTURB,
		"XCP_ADMP__PERMS":             XCP_ADMP__PERMS,
		"XCP_ADMP_CHG_WK_IMPORT":      XCP_ADMP_CHG_WK_IMPORT,
		"XCP_ADMP_CHG_WK_EXPORT":      XCP_ADMP_CHG_WK_EXPORT,
		"XCP_ADMP_CHG_WK_1PART":       XCP_ADMP_CHG_WK_1PART,
		"XCP_ADMP_CHG_WK_RANDOM":      XCP_ADMP_CHG_WK_RANDOM,
		"XCP_ADMP_CHG_SIGN_THR":       XCP_ADMP_CHG_SIGN_THR,
		"XCP_ADMP_CHG_REVOKE_THR":     XCP_ADMP_CHG_REVOKE_THR,
		"XCP_ADMP_CHG_1SIGN":          XCP_ADMP_CHG_1SIGN,
		"XCP_ADMP_CHG_CP_1SIGN":       XCP_ADMP_CHG_CP_1SIGN,
		"XCP_ADMP_CHG_ZERO_1SIGN":     XCP_ADMP_CHG_ZERO_1SIGN,
		"XCP_ADMP_CHG_ST_IMPORT":      XCP_ADMP_CHG_ST_IMPORT,
		"XCP_ADMP_CHG_ST_EXPORT":      XCP_ADMP_CHG_ST_EXPORT,
		"XCP_ADMP_CHG_ST_1PART":       XCP_ADMP_CHG_ST_1PART,
		"XCP_ADMP_CHG_NO_EPX":         XCP_ADMP_CHG_NO_EPX,
		"XCP_ADMP_CHG_NO_EPXVM":       XCP_ADMP_CHG_NO_EPXVM,
		"XCP_ADMP_NOT_SUP":            XCP_ADMP_NOT_SUP,
		"XCP_ADMP_CHG_DO_NOT_DISTURB": XCP_ADMP_CHG_DO_NOT_DISTURB,
		"XCP_ADMP__CHGBITS":           XCP_ADMP__CHGBITS,
		"XCP_ADMP__DEFAULT":           XCP_ADMP__DEFAULT,
	}
	CardAttributeFlagsValueToName = map[CardAttributeFlags]string{
		XCP_ADMP_WK_IMPORT:          "XCP_ADMP_WK_IMPORT",
		XCP_ADMP_WK_EXPORT:          "XCP_ADMP_WK_EXPORT",
		XCP_ADMP_WK_1PART:           "XCP_ADMP_WK_1PART",
		XCP_ADMP_WK_RANDOM:          "XCP_ADMP_WK_RANDOM",
		XCP_ADMP_1SIGN:              "XCP_ADMP_1SIGN",
		XCP_ADMP_CP_1SIGN:           "XCP_ADMP_CP_1SIGN",
		XCP_ADMP_ZERO_1SIGN:         "XCP_ADMP_ZERO_1SIGN",
		XCP_ADMP_NO_DOMAIN_IMPRINT:  "XCP_ADMP_NO_DOMAIN_IMPRINT",
		XCP_ADMP_STATE_IMPORT:       "XCP_ADMP_STATE_IMPORT",
		XCP_ADMP_STATE_EXPORT:       "XCP_ADMP_STATE_EXPORT",
		XCP_ADMP_STATE_1PART:        "XCP_ADMP_STATE_1PART",
		XCP_ADMP_NO_EPX:             "XCP_ADMP_NO_EPX",
		XCP_ADMP_NO_EPXVM:           "XCP_ADMP_NO_EPXVM",
		XCP_ADMP_DO_NOT_DISTURB:     "XCP_ADMP_DO_NOT_DISTURB",
		XCP_ADMP__PERMS:             "XCP_ADMP__PERMS",
		XCP_ADMP_CHG_WK_IMPORT:      "XCP_ADMP_CHG_WK_IMPORT",
		XCP_ADMP_CHG_WK_EXPORT:      "XCP_ADMP_CHG_WK_EXPORT",
		XCP_ADMP_CHG_WK_1PART:       "XCP_ADMP_CHG_WK_1PART",
		XCP_ADMP_CHG_WK_RANDOM:      "XCP_ADMP_CHG_WK_RANDOM",
		XCP_ADMP_CHG_SIGN_THR:       "XCP_ADMP_CHG_SIGN_THR",
		XCP_ADMP_CHG_REVOKE_THR:     "XCP_ADMP_CHG_REVOKE_THR",
		XCP_ADMP_CHG_1SIGN:          "XCP_ADMP_CHG_1SIGN",
		XCP_ADMP_CHG_CP_1SIGN:       "XCP_ADMP_CHG_CP_1SIGN",
		XCP_ADMP_CHG_ZERO_1SIGN:     "XCP_ADMP_CHG_ZERO_1SIGN",
		XCP_ADMP_CHG_ST_IMPORT:      "XCP_ADMP_CHG_ST_IMPORT",
		XCP_ADMP_CHG_ST_EXPORT:      "XCP_ADMP_CHG_ST_EXPORT",
		XCP_ADMP_CHG_ST_1PART:       "XCP_ADMP_CHG_ST_1PART",
		XCP_ADMP_CHG_NO_EPX:         "XCP_ADMP_CHG_NO_EPX",
		XCP_ADMP_CHG_NO_EPXVM:       "XCP_ADMP_CHG_NO_EPXVM",
		XCP_ADMP_NOT_SUP:            "XCP_ADMP_NOT_SUP",
		XCP_ADMP_CHG_DO_NOT_DISTURB: "XCP_ADMP_CHG_DO_NOT_DISTURB",
		XCP_ADMP__CHGBITS:           "XCP_ADMP__CHGBITS",
		XCP_ADMP__DEFAULT:           "XCP_ADMP__DEFAULT",
	}
	CardAttributeKeyNameToValue = map[string]CardAttributeKey{
		"XCP_ADMINT_SIGN_THR":   XCP_ADMINT_SIGN_THR,
		"XCP_ADMINT_REVOKE_THR": XCP_ADMINT_REVOKE_THR,
		"XCP_ADMINT_PERMS":      XCP_ADMINT_PERMS,
		"XCP_ADMINT_MODE":       XCP_ADMINT_MODE,
		"XCP_ADMINT_STD":        XCP_ADMINT_STD,
	}
	CardAttributeKeyValueToName = map[CardAttributeKey]string{
		XCP_ADMINT_SIGN_THR:   "XCP_ADMINT_SIGN_THR",
		XCP_ADMINT_REVOKE_THR: "XCP_ADMINT_REVOKE_THR",
		XCP_ADMINT_PERMS:      "XCP_ADMINT_PERMS",
		XCP_ADMINT_MODE:       "XCP_ADMINT_MODE",
		XCP_ADMINT_STD:        "XCP_ADMINT_STD",
	}
	ControlPointNameToValue = map[string]ControlPoint{
		"XCP_CPB_ADD_CPBS":           XCP_CPB_ADD_CPBS,
		"XCP_CPB_DELETE_CPBS":        XCP_CPB_DELETE_CPBS,
		"XCP_CPB_SIGN_ASYMM":         XCP_CPB_SIGN_ASYMM,
		"XCP_CPB_SIGN_SYMM":          XCP_CPB_SIGN_SYMM,
		"XCP_CPB_SIGVERIFY_SYMM":     XCP_CPB_SIGVERIFY_SYMM,
		"XCP_CPB_ENCRYPT_SYMM":       XCP_CPB_ENCRYPT_SYMM,
		"XCP_CPB_DECRYPT_ASYMM":      XCP_CPB_DECRYPT_ASYMM,
		"XCP_CPB_DECRYPT_SYMM":       XCP_CPB_DECRYPT_SYMM,
		"XCP_CPB_WRAP_ASYMM":         XCP_CPB_WRAP_ASYMM,
		"XCP_CPB_WRAP_SYMM":          XCP_CPB_WRAP_SYMM,
		"XCP_CPB_UNWRAP_ASYMM":       XCP_CPB_UNWRAP_ASYMM,
		"XCP_CPB_UNWRAP_SYMM":        XCP_CPB_UNWRAP_SYMM,
		"XCP_CPB_KEYGEN_ASYMM":       XCP_CPB_KEYGEN_ASYMM,
		"XCP_CPB_KEYGEN_SYMM":        XCP_CPB_KEYGEN_SYMM,
		"XCP_CPB_RETAINKEYS":         XCP_CPB_RETAINKEYS,
		"XCP_CPB_SKIP_KEYTESTS":      XCP_CPB_SKIP_KEYTESTS,
		"XCP_CPB_NON_ATTRBOUND":      XCP_CPB_NON_ATTRBOUND,
		"XCP_CPB_MODIFY_OBJECTS":     XCP_CPB_MODIFY_OBJECTS,
		"XCP_CPB_RNG_SEED":           XCP_CPB_RNG_SEED,
		"XCP_CPB_ALG_RAW_RSA":        XCP_CPB_ALG_RAW_RSA,
		"XCP_CPB_ALG_NFIPS2009":      XCP_CPB_ALG_NFIPS2009,
		"XCP_CPB_ALG_NBSI2009":       XCP_CPB_ALG_NBSI2009,
		"XCP_CPB_KEYSZ_HMAC_ANY":     XCP_CPB_KEYSZ_HMAC_ANY,
		"XCP_CPB_KEYSZ_BELOW80BIT":   XCP_CPB_KEYSZ_BELOW80BIT,
		"XCP_CPB_KEYSZ_80BIT":        XCP_CPB_KEYSZ_80BIT,
		"XCP_CPB_KEYSZ_112BIT":       XCP_CPB_KEYSZ_112BIT,
		"XCP_CPB_KEYSZ_128BIT":       XCP_CPB_KEYSZ_128BIT,
		"XCP_CPB_KEYSZ_192BIT":       XCP_CPB_KEYSZ_192BIT,
		"XCP_CPB_KEYSZ_256BIT":       XCP_CPB_KEYSZ_256BIT,
		"XCP_CPB_KEYSZ_RSA65536":     XCP_CPB_KEYSZ_RSA65536,
		"XCP_CPB_ALG_RSA":            XCP_CPB_ALG_RSA,
		"XCP_CPB_ALG_DSA":            XCP_CPB_ALG_DSA,
		"XCP_CPB_ALG_EC":             XCP_CPB_ALG_EC,
		"XCP_CPB_ALG_EC_BPOOLCRV":    XCP_CPB_ALG_EC_BPOOLCRV,
		"XCP_CPB_ALG_EC_NISTCRV":     XCP_CPB_ALG_EC_NISTCRV,
		"XCP_CPB_ALG_NFIPS2011":      XCP_CPB_ALG_NFIPS2011,
		"XCP_CPB_ALG_NBSI2011":       XCP_CPB_ALG_NBSI2011,
		"XCP_CPB_USER_SET_TRUSTED":   XCP_CPB_USER_SET_TRUSTED,
		"XCP_CPB_ALG_SKIP_CROSSCHK":  XCP_CPB_ALG_SKIP_CROSSCHK,
		"XCP_CPB_WRAP_CRYPT_KEYS":    XCP_CPB_WRAP_CRYPT_KEYS,
		"XCP_CPB_SIGN_CRYPT_KEYS":    XCP_CPB_SIGN_CRYPT_KEYS,
		"XCP_CPB_WRAP_SIGN_KEYS":     XCP_CPB_WRAP_SIGN_KEYS,
		"XCP_CPB_USER_SET_ATTRBOUND": XCP_CPB_USER_SET_ATTRBOUND,
		"XCP_CPB_ALLOW_PASSPHRASE":   XCP_CPB_ALLOW_PASSPHRASE,
		"XCP_CPB_WRAP_STRONGER_KEY":  XCP_CPB_WRAP_STRONGER_KEY,
		"XCP_CPB_WRAP_WITH_RAW_SPKI": XCP_CPB_WRAP_WITH_RAW_SPKI,
		"XCP_CPB_ALG_DH":             XCP_CPB_ALG_DH,
		"XCP_CPB_DERIVE":             XCP_CPB_DERIVE,
		"XCP_CPB_ALG_EC_25519":       XCP_CPB_ALG_EC_25519,
		"XCP_CPB_ALG_NBSI2017":       XCP_CPB_ALG_NBSI2017,
		"XCP_CPB_EMV":                XCP_CPB_EMV,
		"XCP_CPB_EMV_MIX":            XCP_CPB_EMV_MIX,
		"XCP_CPB_BTC":                XCP_CPB_BTC,
	}
	ControlPointValueToName = map[ControlPoint]string{
		XCP_CPB_ADD_CPBS:           "XCP_CPB_ADD_CPBS",
		XCP_CPB_DELETE_CPBS:        "XCP_CPB_DELETE_CPBS",
		XCP_CPB_SIGN_ASYMM:         "XCP_CPB_SIGN_ASYMM",
		XCP_CPB_SIGN_SYMM:          "XCP_CPB_SIGN_SYMM",
		XCP_CPB_SIGVERIFY_SYMM:     "XCP_CPB_SIGVERIFY_SYMM",
		XCP_CPB_ENCRYPT_SYMM:       "XCP_CPB_ENCRYPT_SYMM",
		XCP_CPB_DECRYPT_ASYMM:      "XCP_CPB_DECRYPT_ASYMM",
		XCP_CPB_DECRYPT_SYMM:       "XCP_CPB_DECRYPT_SYMM",
		XCP_CPB_WRAP_ASYMM:         "XCP_CPB_WRAP_ASYMM",
		XCP_CPB_WRAP_SYMM:          "XCP_CPB_WRAP_SYMM",
		XCP_CPB_UNWRAP_ASYMM:       "XCP_CPB_UNWRAP_ASYMM",
		XCP_CPB_UNWRAP_SYMM:        "XCP_CPB_UNWRAP_SYMM",
		XCP_CPB_KEYGEN_ASYMM:       "XCP_CPB_KEYGEN_ASYMM",
		XCP_CPB_KEYGEN_SYMM:        "XCP_CPB_KEYGEN_SYMM",
		XCP_CPB_RETAINKEYS:         "XCP_CPB_RETAINKEYS",
		XCP_CPB_SKIP_KEYTESTS:      "XCP_CPB_SKIP_KEYTESTS",
		XCP_CPB_NON_ATTRBOUND:      "XCP_CPB_NON_ATTRBOUND",
		XCP_CPB_MODIFY_OBJECTS:     "XCP_CPB_MODIFY_OBJECTS",
		XCP_CPB_RNG_SEED:           "XCP_CPB_RNG_SEED",
		XCP_CPB_ALG_RAW_RSA:        "XCP_CPB_ALG_RAW_RSA",
		XCP_CPB_ALG_NFIPS2009:      "XCP_CPB_ALG_NFIPS2009",
		XCP_CPB_ALG_NBSI2009:       "XCP_CPB_ALG_NBSI2009",
		XCP_CPB_KEYSZ_HMAC_ANY:     "XCP_CPB_KEYSZ_HMAC_ANY",
		XCP_CPB_KEYSZ_BELOW80BIT:   "XCP_CPB_KEYSZ_BELOW80BIT",
		XCP_CPB_KEYSZ_80BIT:        "XCP_CPB_KEYSZ_80BIT",
		XCP_CPB_KEYSZ_112BIT:       "XCP_CPB_KEYSZ_112BIT",
		XCP_CPB_KEYSZ_128BIT:       "XCP_CPB_KEYSZ_128BIT",
		XCP_CPB_KEYSZ_192BIT:       "XCP_CPB_KEYSZ_192BIT",
		XCP_CPB_KEYSZ_256BIT:       "XCP_CPB_KEYSZ_256BIT",
		XCP_CPB_KEYSZ_RSA65536:     "XCP_CPB_KEYSZ_RSA65536",
		XCP_CPB_ALG_RSA:            "XCP_CPB_ALG_RSA",
		XCP_CPB_ALG_DSA:            "XCP_CPB_ALG_DSA",
		XCP_CPB_ALG_EC:             "XCP_CPB_ALG_EC",
		XCP_CPB_ALG_EC_BPOOLCRV:    "XCP_CPB_ALG_EC_BPOOLCRV",
		XCP_CPB_ALG_EC_NISTCRV:     "XCP_CPB_ALG_EC_NISTCRV",
		XCP_CPB_ALG_NFIPS2011:      "XCP_CPB_ALG_NFIPS2011",
		XCP_CPB_ALG_NBSI2011:       "XCP_CPB_ALG_NBSI2011",
		XCP_CPB_USER_SET_TRUSTED:   "XCP_CPB_USER_SET_TRUSTED",
		XCP_CPB_ALG_SKIP_CROSSCHK:  "XCP_CPB_ALG_SKIP_CROSSCHK",
		XCP_CPB_WRAP_CRYPT_KEYS:    "XCP_CPB_WRAP_CRYPT_KEYS",
		XCP_CPB_SIGN_CRYPT_KEYS:    "XCP_CPB_SIGN_CRYPT_KEYS",
		XCP_CPB_WRAP_SIGN_KEYS:     "XCP_CPB_WRAP_SIGN_KEYS",
		XCP_CPB_USER_SET_ATTRBOUND: "XCP_CPB_USER_SET_ATTRBOUND",
		XCP_CPB_ALLOW_PASSPHRASE:   "XCP_CPB_ALLOW_PASSPHRASE",
		XCP_CPB_WRAP_STRONGER_KEY:  "XCP_CPB_WRAP_STRONGER_KEY",
		XCP_CPB_WRAP_WITH_RAW_SPKI: "XCP_CPB_WRAP_WITH_RAW_SPKI",
		XCP_CPB_ALG_DH:             "XCP_CPB_ALG_DH",
		XCP_CPB_DERIVE:             "XCP_CPB_DERIVE",
		XCP_CPB_ALG_EC_25519:       "XCP_CPB_ALG_EC_25519",
		XCP_CPB_ALG_NBSI2017:       "XCP_CPB_ALG_NBSI2017",
		XCP_CPB_EMV:                "XCP_CPB_EMV",
		XCP_CPB_EMV_MIX:            "XCP_CPB_EMV_MIX",
		XCP_CPB_BTC:                "XCP_CPB_BTC",
	}
	FunctionIDNameToValue = map[string]FunctionID{
		"FNID_Login":             FNID_Login,
		"FNID_Logout":            FNID_Logout,
		"FNID_SeedRandom":        FNID_SeedRandom,
		"FNID_GenerateRandom":    FNID_GenerateRandom,
		"FNID_DigestInit":        FNID_DigestInit,
		"FNID_DigestUpdate":      FNID_DigestUpdate,
		"FNID_DigestKey":         FNID_DigestKey,
		"FNID_DigestFinal":       FNID_DigestFinal,
		"FNID_Digest":            FNID_Digest,
		"FNID_DigestSingle":      FNID_DigestSingle,
		"FNID_EncryptInit":       FNID_EncryptInit,
		"FNID_DecryptInit":       FNID_DecryptInit,
		"FNID_EncryptUpdate":     FNID_EncryptUpdate,
		"FNID_DecryptUpdate":     FNID_DecryptUpdate,
		"FNID_EncryptFinal":      FNID_EncryptFinal,
		"FNID_DecryptFinal":      FNID_DecryptFinal,
		"FNID_Encrypt":           FNID_Encrypt,
		"FNID_Decrypt":           FNID_Decrypt,
		"FNID_EncryptSingle":     FNID_EncryptSingle,
		"FNID_DecryptSingle":     FNID_DecryptSingle,
		"FNID_GenerateKey":       FNID_GenerateKey,
		"FNID_GenerateKeyPair":   FNID_GenerateKeyPair,
		"FNID_SignInit":          FNID_SignInit,
		"FNID_SignUpdate":        FNID_SignUpdate,
		"FNID_SignFinal":         FNID_SignFinal,
		"FNID_Sign":              FNID_Sign,
		"FNID_VerifyInit":        FNID_VerifyInit,
		"FNID_VerifyUpdate":      FNID_VerifyUpdate,
		"FNID_VerifyFinal":       FNID_VerifyFinal,
		"FNID_Verify":            FNID_Verify,
		"FNID_SignSingle":        FNID_SignSingle,
		"FNID_VerifySingle":      FNID_VerifySingle,
		"FNID_WrapKey":           FNID_WrapKey,
		"FNID_UnwrapKey":         FNID_UnwrapKey,
		"FNID_DeriveKey":         FNID_DeriveKey,
		"FNID_GetMechanismList":  FNID_GetMechanismList,
		"FNID_GetMechanismInfo":  FNID_GetMechanismInfo,
		"FNID_get_xcp_info":      FNID_get_xcp_info,
		"FNID_GetAttributeValue": FNID_GetAttributeValue,
		"FNID_SetAttributeValue": FNID_SetAttributeValue,
		"FNID_admin":             FNID_admin,
		"FNID_ReencryptSingle":   FNID_ReencryptSingle,
		"FNID_NEXT_AVAILABLE":    FNID_NEXT_AVAILABLE,
	}
	FunctionIDValueToName = map[FunctionID]string{
		FNID_Login:             "FNID_Login",
		FNID_Logout:            "FNID_Logout",
		FNID_SeedRandom:        "FNID_SeedRandom",
		FNID_GenerateRandom:    "FNID_GenerateRandom",
		FNID_DigestInit:        "FNID_DigestInit",
		FNID_DigestUpdate:      "FNID_DigestUpdate",
		FNID_DigestKey:         "FNID_DigestKey",
		FNID_DigestFinal:       "FNID_DigestFinal",
		FNID_Digest:            "FNID_Digest",
		FNID_DigestSingle:      "FNID_DigestSingle",
		FNID_EncryptInit:       "FNID_EncryptInit",
		FNID_DecryptInit:       "FNID_DecryptInit",
		FNID_EncryptUpdate:     "FNID_EncryptUpdate",
		FNID_DecryptUpdate:     "FNID_DecryptUpdate",
		FNID_EncryptFinal:      "FNID_EncryptFinal",
		FNID_DecryptFinal:      "FNID_DecryptFinal",
		FNID_Encrypt:           "FNID_Encrypt",
		FNID_Decrypt:           "FNID_Decrypt",
		FNID_EncryptSingle:     "FNID_EncryptSingle",
		FNID_DecryptSingle:     "FNID_DecryptSingle",
		FNID_GenerateKey:       "FNID_GenerateKey",
		FNID_GenerateKeyPair:   "FNID_GenerateKeyPair",
		FNID_SignInit:          "FNID_SignInit",
		FNID_SignUpdate:        "FNID_SignUpdate",
		FNID_SignFinal:         "FNID_SignFinal",
		FNID_Sign:              "FNID_Sign",
		FNID_VerifyInit:        "FNID_VerifyInit",
		FNID_VerifyUpdate:      "FNID_VerifyUpdate",
		FNID_VerifyFinal:       "FNID_VerifyFinal",
		FNID_Verify:            "FNID_Verify",
		FNID_SignSingle:        "FNID_SignSingle",
		FNID_VerifySingle:      "FNID_VerifySingle",
		FNID_WrapKey:           "FNID_WrapKey",
		FNID_UnwrapKey:         "FNID_UnwrapKey",
		FNID_DeriveKey:         "FNID_DeriveKey",
		FNID_GetMechanismList:  "FNID_GetMechanismList",
		FNID_GetMechanismInfo:  "FNID_GetMechanismInfo",
		FNID_get_xcp_info:      "FNID_get_xcp_info",
		FNID_GetAttributeValue: "FNID_GetAttributeValue",
		FNID_SetAttributeValue: "FNID_SetAttributeValue",
		FNID_admin:             "FNID_admin",
		FNID_ReencryptSingle:   "FNID_ReencryptSingle",
		FNID_NEXT_AVAILABLE:    "FNID_NEXT_AVAILABLE",
	}
	ImporterKeyTypeNameToValue = map[string]ImporterKeyType{
		"XCP_IMPRKEY_RSA_2048": XCP_IMPRKEY_RSA_2048,
		"XCP_IMPRKEY_RSA_4096": XCP_IMPRKEY_RSA_4096,
		"XCP_IMPRKEY_EC_P256":  XCP_IMPRKEY_EC_P256,
		"XCP_IMPRKEY_EC_P521":  XCP_IMPRKEY_EC_P521,
		"XCP_IMPRKEY_RSA_3072": XCP_IMPRKEY_RSA_3072,
	}
	ImporterKeyTypeValueToName = map[ImporterKeyType]string{
		XCP_IMPRKEY_RSA_2048: "XCP_IMPRKEY_RSA_2048",
		XCP_IMPRKEY_RSA_4096: "XCP_IMPRKEY_RSA_4096",
		XCP_IMPRKEY_EC_P256:  "XCP_IMPRKEY_EC_P256",
		XCP_IMPRKEY_EC_P521:  "XCP_IMPRKEY_EC_P521",
		XCP_IMPRKEY_RSA_3072: "XCP_IMPRKEY_RSA_3072",
	}
	KeyTypeNameToValue = map[string]KeyType{
		"CKK_RSA":                CKK_RSA,
		"CKK_DSA":                CKK_DSA,
		"CKK_DH":                 CKK_DH,
		"CKK_EC":                 CKK_EC,
		"CKK_ECDSA":              CKK_ECDSA,
		"CKK_X9_42_DH":           CKK_X9_42_DH,
		"CKK_KEA":                CKK_KEA,
		"CKK_GENERIC_SECRET":     CKK_GENERIC_SECRET,
		"CKK_RC2":                CKK_RC2,
		"CKK_RC4":                CKK_RC4,
		"CKK_DES":                CKK_DES,
		"CKK_DES2":               CKK_DES2,
		"CKK_DES3":               CKK_DES3,
		"CKK_CAST":               CKK_CAST,
		"CKK_CAST3":              CKK_CAST3,
		"CKK_CAST128":            CKK_CAST128,
		"CKK_CAST5":              CKK_CAST5,
		"CKK_RC5":                CKK_RC5,
		"CKK_IDEA":               CKK_IDEA,
		"CKK_SKIPJACK":           CKK_SKIPJACK,
		"CKK_BATON":              CKK_BATON,
		"CKK_JUNIPER":            CKK_JUNIPER,
		"CKK_CDMF":               CKK_CDMF,
		"CKK_AES":                CKK_AES,
		"CKK_BLOWFISH":           CKK_BLOWFISH,
		"CKK_TWOFISH":            CKK_TWOFISH,
		"CKK_SECURID":            CKK_SECURID,
		"CKK_HOTP":               CKK_HOTP,
		"CKK_ACTI":               CKK_ACTI,
		"CKK_CAMELLIA":           CKK_CAMELLIA,
		"CKK_ARIA":               CKK_ARIA,
		"CKK_MD5_HMAC":           CKK_MD5_HMAC,
		"CKK_SHA_1_HMAC":         CKK_SHA_1_HMAC,
		"CKK_RIPEMD128_HMAC":     CKK_RIPEMD128_HMAC,
		"CKK_RIPEMD160_HMAC":     CKK_RIPEMD160_HMAC,
		"CKK_SHA256_HMAC":        CKK_SHA256_HMAC,
		"CKK_SHA384_HMAC":        CKK_SHA384_HMAC,
		"CKK_SHA512_HMAC":        CKK_SHA512_HMAC,
		"CKK_SHA224_HMAC":        CKK_SHA224_HMAC,
		"CKK_SEED":               CKK_SEED,
		"CKK_GOSTR3410":          CKK_GOSTR3410,
		"CKK_GOSTR3411":          CKK_GOSTR3411,
		"CKK_GOST28147":          CKK_GOST28147,
		"CKK_VENDOR_DEFINED":     CKK_VENDOR_DEFINED,
		"CKK_IBM_SM4":            CKK_IBM_SM4,
		"CKK_IBM_SM2":            CKK_IBM_SM2,
		"CKK_IBM_EPX_SYMM":       CKK_IBM_EPX_SYMM,
		"CKK_IBM_EPX_ASYMM":      CKK_IBM_EPX_ASYMM,
		"CKK_IBM_EPX_ASYMM_PRIV": CKK_IBM_EPX_ASYMM_PRIV,
		"CKK_IBM_EPX_ASYMM_PUB":  CKK_IBM_EPX_ASYMM_PUB,
	}
	KeyTypeValueToName = map[KeyType]string{
		CKK_RSA:                "CKK_RSA",
		CKK_DSA:                "CKK_DSA",
		CKK_DH:                 "CKK_DH",
		CKK_ECDSA:              "CKK_ECDSA",
		CKK_X9_42_DH:           "CKK_X9_42_DH",
		CKK_KEA:                "CKK_KEA",
		CKK_GENERIC_SECRET:     "CKK_GENERIC_SECRET",
		CKK_RC2:                "CKK_RC2",
		CKK_RC4:                "CKK_RC4",
		CKK_DES:                "CKK_DES",
		CKK_DES2:               "CKK_DES2",
		CKK_DES3:               "CKK_DES3",
		CKK_CAST:               "CKK_CAST",
		CKK_CAST3:              "CKK_CAST3",
		CKK_CAST128:            "CKK_CAST128",
		CKK_RC5:                "CKK_RC5",
		CKK_IDEA:               "CKK_IDEA",
		CKK_SKIPJACK:           "CKK_SKIPJACK",
		CKK_BATON:              "CKK_BATON",
		CKK_JUNIPER:            "CKK_JUNIPER",
		CKK_CDMF:               "CKK_CDMF",
		CKK_AES:                "CKK_AES",
		CKK_BLOWFISH:           "CKK_BLOWFISH",
		CKK_TWOFISH:            "CKK_TWOFISH",
		CKK_SECURID:            "CKK_SECURID",
		CKK_HOTP:               "CKK_HOTP",
		CKK_ACTI:               "CKK_ACTI",
		CKK_CAMELLIA:           "CKK_CAMELLIA",
		CKK_ARIA:               "CKK_ARIA",
		CKK_MD5_HMAC:           "CKK_MD5_HMAC",
		CKK_SHA_1_HMAC:         "CKK_SHA_1_HMAC",
		CKK_RIPEMD128_HMAC:     "CKK_RIPEMD128_HMAC",
		CKK_RIPEMD160_HMAC:     "CKK_RIPEMD160_HMAC",
		CKK_SHA256_HMAC:        "CKK_SHA256_HMAC",
		CKK_SHA384_HMAC:        "CKK_SHA384_HMAC",
		CKK_SHA512_HMAC:        "CKK_SHA512_HMAC",
		CKK_SHA224_HMAC:        "CKK_SHA224_HMAC",
		CKK_SEED:               "CKK_SEED",
		CKK_GOSTR3410:          "CKK_GOSTR3410",
		CKK_GOSTR3411:          "CKK_GOSTR3411",
		CKK_GOST28147:          "CKK_GOST28147",
		CKK_VENDOR_DEFINED:     "CKK_VENDOR_DEFINED",
		CKK_IBM_SM4:            "CKK_IBM_SM4",
		CKK_IBM_SM2:            "CKK_IBM_SM2",
		CKK_IBM_EPX_SYMM:       "CKK_IBM_EPX_SYMM",
		CKK_IBM_EPX_ASYMM:      "CKK_IBM_EPX_ASYMM",
		CKK_IBM_EPX_ASYMM_PRIV: "CKK_IBM_EPX_ASYMM_PRIV",
		CKK_IBM_EPX_ASYMM_PUB:  "CKK_IBM_EPX_ASYMM_PUB",
	}
	MechanismNameToValue = map[string]Mechanism{
		"CKM_RSA_PKCS_KEY_PAIR_GEN":          CKM_RSA_PKCS_KEY_PAIR_GEN,
		"CKM_RSA_PKCS":                       CKM_RSA_PKCS,
		"CKM_RSA_9796":                       CKM_RSA_9796,
		"CKM_RSA_X_509":                      CKM_RSA_X_509,
		"CKM_MD2_RSA_PKCS":                   CKM_MD2_RSA_PKCS,
		"CKM_MD5_RSA_PKCS":                   CKM_MD5_RSA_PKCS,
		"CKM_SHA1_RSA_PKCS":                  CKM_SHA1_RSA_PKCS,
		"CKM_RIPEMD128_RSA_PKCS":             CKM_RIPEMD128_RSA_PKCS,
		"CKM_RIPEMD160_RSA_PKCS":             CKM_RIPEMD160_RSA_PKCS,
		"CKM_RSA_PKCS_OAEP":                  CKM_RSA_PKCS_OAEP,
		"CKM_RSA_X9_31_KEY_PAIR_GEN":         CKM_RSA_X9_31_KEY_PAIR_GEN,
		"CKM_RSA_X9_31":                      CKM_RSA_X9_31,
		"CKM_SHA1_RSA_X9_31":                 CKM_SHA1_RSA_X9_31,
		"CKM_RSA_PKCS_PSS":                   CKM_RSA_PKCS_PSS,
		"CKM_SHA1_RSA_PKCS_PSS":              CKM_SHA1_RSA_PKCS_PSS,
		"CKM_DSA_KEY_PAIR_GEN":               CKM_DSA_KEY_PAIR_GEN,
		"CKM_DSA":                            CKM_DSA,
		"CKM_DSA_SHA1":                       CKM_DSA_SHA1,
		"CKM_DSA_SHA224":                     CKM_DSA_SHA224,
		"CKM_DSA_SHA256":                     CKM_DSA_SHA256,
		"CKM_DSA_SHA384":                     CKM_DSA_SHA384,
		"CKM_DSA_SHA512":                     CKM_DSA_SHA512,
		"CKM_DH_PKCS_KEY_PAIR_GEN":           CKM_DH_PKCS_KEY_PAIR_GEN,
		"CKM_DH_PKCS_DERIVE":                 CKM_DH_PKCS_DERIVE,
		"CKM_X9_42_DH_KEY_PAIR_GEN":          CKM_X9_42_DH_KEY_PAIR_GEN,
		"CKM_X9_42_DH_DERIVE":                CKM_X9_42_DH_DERIVE,
		"CKM_X9_42_DH_HYBRID_DERIVE":         CKM_X9_42_DH_HYBRID_DERIVE,
		"CKM_X9_42_MQV_DERIVE":               CKM_X9_42_MQV_DERIVE,
		"CKM_SHA256_RSA_PKCS":                CKM_SHA256_RSA_PKCS,
		"CKM_SHA384_RSA_PKCS":                CKM_SHA384_RSA_PKCS,
		"CKM_SHA512_RSA_PKCS":                CKM_SHA512_RSA_PKCS,
		"CKM_SHA256_RSA_PKCS_PSS":            CKM_SHA256_RSA_PKCS_PSS,
		"CKM_SHA384_RSA_PKCS_PSS":            CKM_SHA384_RSA_PKCS_PSS,
		"CKM_SHA512_RSA_PKCS_PSS":            CKM_SHA512_RSA_PKCS_PSS,
		"CKM_SHA224_RSA_PKCS":                CKM_SHA224_RSA_PKCS,
		"CKM_SHA224_RSA_PKCS_PSS":            CKM_SHA224_RSA_PKCS_PSS,
		"CKM_SHA512_224":                     CKM_SHA512_224,
		"CKM_SHA512_224_HMAC":                CKM_SHA512_224_HMAC,
		"CKM_SHA512_224_HMAC_GENERAL":        CKM_SHA512_224_HMAC_GENERAL,
		"CKM_SHA512_224_KEY_DERIVATION":      CKM_SHA512_224_KEY_DERIVATION,
		"CKM_SHA512_256":                     CKM_SHA512_256,
		"CKM_SHA512_256_HMAC":                CKM_SHA512_256_HMAC,
		"CKM_SHA512_256_HMAC_GENERAL":        CKM_SHA512_256_HMAC_GENERAL,
		"CKM_SHA512_256_KEY_DERIVATION":      CKM_SHA512_256_KEY_DERIVATION,
		"CKM_SHA512_T":                       CKM_SHA512_T,
		"CKM_SHA512_T_HMAC":                  CKM_SHA512_T_HMAC,
		"CKM_SHA512_T_HMAC_GENERAL":          CKM_SHA512_T_HMAC_GENERAL,
		"CKM_SHA512_T_KEY_DERIVATION":        CKM_SHA512_T_KEY_DERIVATION,
		"CKM_RC2_KEY_GEN":                    CKM_RC2_KEY_GEN,
		"CKM_RC2_ECB":                        CKM_RC2_ECB,
		"CKM_RC2_CBC":                        CKM_RC2_CBC,
		"CKM_RC2_MAC":                        CKM_RC2_MAC,
		"CKM_RC2_MAC_GENERAL":                CKM_RC2_MAC_GENERAL,
		"CKM_RC2_CBC_PAD":                    CKM_RC2_CBC_PAD,
		"CKM_RC4_KEY_GEN":                    CKM_RC4_KEY_GEN,
		"CKM_RC4":                            CKM_RC4,
		"CKM_DES_KEY_GEN":                    CKM_DES_KEY_GEN,
		"CKM_DES_ECB":                        CKM_DES_ECB,
		"CKM_DES_CBC":                        CKM_DES_CBC,
		"CKM_DES_MAC":                        CKM_DES_MAC,
		"CKM_DES_MAC_GENERAL":                CKM_DES_MAC_GENERAL,
		"CKM_DES_CBC_PAD":                    CKM_DES_CBC_PAD,
		"CKM_DES2_KEY_GEN":                   CKM_DES2_KEY_GEN,
		"CKM_DES3_KEY_GEN":                   CKM_DES3_KEY_GEN,
		"CKM_DES3_ECB":                       CKM_DES3_ECB,
		"CKM_DES3_CBC":                       CKM_DES3_CBC,
		"CKM_DES3_MAC":                       CKM_DES3_MAC,
		"CKM_DES3_MAC_GENERAL":               CKM_DES3_MAC_GENERAL,
		"CKM_DES3_CBC_PAD":                   CKM_DES3_CBC_PAD,
		"CKM_DES3_CMAC_GENERAL":              CKM_DES3_CMAC_GENERAL,
		"CKM_DES3_CMAC":                      CKM_DES3_CMAC,
		"CKM_CDMF_KEY_GEN":                   CKM_CDMF_KEY_GEN,
		"CKM_CDMF_ECB":                       CKM_CDMF_ECB,
		"CKM_CDMF_CBC":                       CKM_CDMF_CBC,
		"CKM_CDMF_MAC":                       CKM_CDMF_MAC,
		"CKM_CDMF_MAC_GENERAL":               CKM_CDMF_MAC_GENERAL,
		"CKM_CDMF_CBC_PAD":                   CKM_CDMF_CBC_PAD,
		"CKM_DES_OFB64":                      CKM_DES_OFB64,
		"CKM_DES_OFB8":                       CKM_DES_OFB8,
		"CKM_DES_CFB64":                      CKM_DES_CFB64,
		"CKM_DES_CFB8":                       CKM_DES_CFB8,
		"CKM_MD2":                            CKM_MD2,
		"CKM_MD2_HMAC":                       CKM_MD2_HMAC,
		"CKM_MD2_HMAC_GENERAL":               CKM_MD2_HMAC_GENERAL,
		"CKM_MD5":                            CKM_MD5,
		"CKM_MD5_HMAC":                       CKM_MD5_HMAC,
		"CKM_MD5_HMAC_GENERAL":               CKM_MD5_HMAC_GENERAL,
		"CKM_SHA_1":                          CKM_SHA_1,
		"CKM_SHA_1_HMAC":                     CKM_SHA_1_HMAC,
		"CKM_SHA_1_HMAC_GENERAL":             CKM_SHA_1_HMAC_GENERAL,
		"CKM_RIPEMD128":                      CKM_RIPEMD128,
		"CKM_RIPEMD128_HMAC":                 CKM_RIPEMD128_HMAC,
		"CKM_RIPEMD128_HMAC_GENERAL":         CKM_RIPEMD128_HMAC_GENERAL,
		"CKM_RIPEMD160":                      CKM_RIPEMD160,
		"CKM_RIPEMD160_HMAC":                 CKM_RIPEMD160_HMAC,
		"CKM_RIPEMD160_HMAC_GENERAL":         CKM_RIPEMD160_HMAC_GENERAL,
		"CKM_SHA256":                         CKM_SHA256,
		"CKM_SHA256_HMAC":                    CKM_SHA256_HMAC,
		"CKM_SHA256_HMAC_GENERAL":            CKM_SHA256_HMAC_GENERAL,
		"CKM_SHA224":                         CKM_SHA224,
		"CKM_SHA224_HMAC":                    CKM_SHA224_HMAC,
		"CKM_SHA224_HMAC_GENERAL":            CKM_SHA224_HMAC_GENERAL,
		"CKM_SHA384":                         CKM_SHA384,
		"CKM_SHA384_HMAC":                    CKM_SHA384_HMAC,
		"CKM_SHA384_HMAC_GENERAL":            CKM_SHA384_HMAC_GENERAL,
		"CKM_SHA512":                         CKM_SHA512,
		"CKM_SHA512_HMAC":                    CKM_SHA512_HMAC,
		"CKM_SHA512_HMAC_GENERAL":            CKM_SHA512_HMAC_GENERAL,
		"CKM_SECURID_KEY_GEN":                CKM_SECURID_KEY_GEN,
		"CKM_SECURID":                        CKM_SECURID,
		"CKM_HOTP_KEY_GEN":                   CKM_HOTP_KEY_GEN,
		"CKM_HOTP":                           CKM_HOTP,
		"CKM_ACTI":                           CKM_ACTI,
		"CKM_ACTI_KEY_GEN":                   CKM_ACTI_KEY_GEN,
		"CKM_CAST_KEY_GEN":                   CKM_CAST_KEY_GEN,
		"CKM_CAST_ECB":                       CKM_CAST_ECB,
		"CKM_CAST_CBC":                       CKM_CAST_CBC,
		"CKM_CAST_MAC":                       CKM_CAST_MAC,
		"CKM_CAST_MAC_GENERAL":               CKM_CAST_MAC_GENERAL,
		"CKM_CAST_CBC_PAD":                   CKM_CAST_CBC_PAD,
		"CKM_CAST3_KEY_GEN":                  CKM_CAST3_KEY_GEN,
		"CKM_CAST3_ECB":                      CKM_CAST3_ECB,
		"CKM_CAST3_CBC":                      CKM_CAST3_CBC,
		"CKM_CAST3_MAC":                      CKM_CAST3_MAC,
		"CKM_CAST3_MAC_GENERAL":              CKM_CAST3_MAC_GENERAL,
		"CKM_CAST3_CBC_PAD":                  CKM_CAST3_CBC_PAD,
		"CKM_CAST128_KEY_GEN":                CKM_CAST128_KEY_GEN,
		"CKM_CAST5_KEY_GEN":                  CKM_CAST5_KEY_GEN,
		"CKM_CAST128_ECB":                    CKM_CAST128_ECB,
		"CKM_CAST5_ECB":                      CKM_CAST5_ECB,
		"CKM_CAST128_CBC":                    CKM_CAST128_CBC,
		"CKM_CAST5_CBC":                      CKM_CAST5_CBC,
		"CKM_CAST128_MAC":                    CKM_CAST128_MAC,
		"CKM_CAST5_MAC":                      CKM_CAST5_MAC,
		"CKM_CAST128_MAC_GENERAL":            CKM_CAST128_MAC_GENERAL,
		"CKM_CAST5_MAC_GENERAL":              CKM_CAST5_MAC_GENERAL,
		"CKM_CAST128_CBC_PAD":                CKM_CAST128_CBC_PAD,
		"CKM_CAST5_CBC_PAD":                  CKM_CAST5_CBC_PAD,
		"CKM_RC5_KEY_GEN":                    CKM_RC5_KEY_GEN,
		"CKM_RC5_ECB":                        CKM_RC5_ECB,
		"CKM_RC5_CBC":                        CKM_RC5_CBC,
		"CKM_RC5_MAC":                        CKM_RC5_MAC,
		"CKM_RC5_MAC_GENERAL":                CKM_RC5_MAC_GENERAL,
		"CKM_RC5_CBC_PAD":                    CKM_RC5_CBC_PAD,
		"CKM_IDEA_KEY_GEN":                   CKM_IDEA_KEY_GEN,
		"CKM_IDEA_ECB":                       CKM_IDEA_ECB,
		"CKM_IDEA_CBC":                       CKM_IDEA_CBC,
		"CKM_IDEA_MAC":                       CKM_IDEA_MAC,
		"CKM_IDEA_MAC_GENERAL":               CKM_IDEA_MAC_GENERAL,
		"CKM_IDEA_CBC_PAD":                   CKM_IDEA_CBC_PAD,
		"CKM_GENERIC_SECRET_KEY_GEN":         CKM_GENERIC_SECRET_KEY_GEN,
		"CKM_CONCATENATE_BASE_AND_KEY":       CKM_CONCATENATE_BASE_AND_KEY,
		"CKM_CONCATENATE_BASE_AND_DATA":      CKM_CONCATENATE_BASE_AND_DATA,
		"CKM_CONCATENATE_DATA_AND_BASE":      CKM_CONCATENATE_DATA_AND_BASE,
		"CKM_XOR_BASE_AND_DATA":              CKM_XOR_BASE_AND_DATA,
		"CKM_EXTRACT_KEY_FROM_KEY":           CKM_EXTRACT_KEY_FROM_KEY,
		"CKM_SSL3_PRE_MASTER_KEY_GEN":        CKM_SSL3_PRE_MASTER_KEY_GEN,
		"CKM_SSL3_MASTER_KEY_DERIVE":         CKM_SSL3_MASTER_KEY_DERIVE,
		"CKM_SSL3_KEY_AND_MAC_DERIVE":        CKM_SSL3_KEY_AND_MAC_DERIVE,
		"CKM_SSL3_MASTER_KEY_DERIVE_DH":      CKM_SSL3_MASTER_KEY_DERIVE_DH,
		"CKM_TLS_PRE_MASTER_KEY_GEN":         CKM_TLS_PRE_MASTER_KEY_GEN,
		"CKM_TLS_MASTER_KEY_DERIVE":          CKM_TLS_MASTER_KEY_DERIVE,
		"CKM_TLS_KEY_AND_MAC_DERIVE":         CKM_TLS_KEY_AND_MAC_DERIVE,
		"CKM_TLS_MASTER_KEY_DERIVE_DH":       CKM_TLS_MASTER_KEY_DERIVE_DH,
		"CKM_TLS_PRF":                        CKM_TLS_PRF,
		"CKM_SSL3_MD5_MAC":                   CKM_SSL3_MD5_MAC,
		"CKM_SSL3_SHA1_MAC":                  CKM_SSL3_SHA1_MAC,
		"CKM_MD5_KEY_DERIVATION":             CKM_MD5_KEY_DERIVATION,
		"CKM_MD2_KEY_DERIVATION":             CKM_MD2_KEY_DERIVATION,
		"CKM_SHA1_KEY_DERIVATION":            CKM_SHA1_KEY_DERIVATION,
		"CKM_SHA256_KEY_DERIVATION":          CKM_SHA256_KEY_DERIVATION,
		"CKM_SHA384_KEY_DERIVATION":          CKM_SHA384_KEY_DERIVATION,
		"CKM_SHA512_KEY_DERIVATION":          CKM_SHA512_KEY_DERIVATION,
		"CKM_SHA224_KEY_DERIVATION":          CKM_SHA224_KEY_DERIVATION,
		"CKM_PBE_MD2_DES_CBC":                CKM_PBE_MD2_DES_CBC,
		"CKM_PBE_MD5_DES_CBC":                CKM_PBE_MD5_DES_CBC,
		"CKM_PBE_MD5_CAST_CBC":               CKM_PBE_MD5_CAST_CBC,
		"CKM_PBE_MD5_CAST3_CBC":              CKM_PBE_MD5_CAST3_CBC,
		"CKM_PBE_MD5_CAST128_CBC":            CKM_PBE_MD5_CAST128_CBC,
		"CKM_PBE_MD5_CAST5_CBC":              CKM_PBE_MD5_CAST5_CBC,
		"CKM_PBE_SHA1_CAST128_CBC":           CKM_PBE_SHA1_CAST128_CBC,
		"CKM_PBE_SHA1_CAST5_CBC":             CKM_PBE_SHA1_CAST5_CBC,
		"CKM_PBE_SHA1_RC4_128":               CKM_PBE_SHA1_RC4_128,
		"CKM_PBE_SHA1_RC4_40":                CKM_PBE_SHA1_RC4_40,
		"CKM_PBE_SHA1_DES3_EDE_CBC":          CKM_PBE_SHA1_DES3_EDE_CBC,
		"CKM_PBE_SHA1_DES2_EDE_CBC":          CKM_PBE_SHA1_DES2_EDE_CBC,
		"CKM_PBE_SHA1_RC2_128_CBC":           CKM_PBE_SHA1_RC2_128_CBC,
		"CKM_PBE_SHA1_RC2_40_CBC":            CKM_PBE_SHA1_RC2_40_CBC,
		"CKM_PKCS5_PBKD2":                    CKM_PKCS5_PBKD2,
		"CKM_PBA_SHA1_WITH_SHA1_HMAC":        CKM_PBA_SHA1_WITH_SHA1_HMAC,
		"CKM_WTLS_PRE_MASTER_KEY_GEN":        CKM_WTLS_PRE_MASTER_KEY_GEN,
		"CKM_WTLS_MASTER_KEY_DERIVE":         CKM_WTLS_MASTER_KEY_DERIVE,
		"CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC":  CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC,
		"CKM_WTLS_PRF":                       CKM_WTLS_PRF,
		"CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE": CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE,
		"CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE": CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE,
		"CKM_TLS10_MAC_SERVER":               CKM_TLS10_MAC_SERVER,
		"CKM_TLS10_MAC_CLIENT":               CKM_TLS10_MAC_CLIENT,
		"CKM_TLS12_MAC":                      CKM_TLS12_MAC,
		"CKM_TLS12_KDF":                      CKM_TLS12_KDF,
		"CKM_TLS12_MASTER_KEY_DERIVE":        CKM_TLS12_MASTER_KEY_DERIVE,
		"CKM_TLS12_KEY_AND_MAC_DERIVE":       CKM_TLS12_KEY_AND_MAC_DERIVE,
		"CKM_TLS12_MASTER_KEY_DERIVE_DH":     CKM_TLS12_MASTER_KEY_DERIVE_DH,
		"CKM_TLS12_KEY_SAFE_DERIVE":          CKM_TLS12_KEY_SAFE_DERIVE,
		"CKM_TLS_MAC":                        CKM_TLS_MAC,
		"CKM_TLS_KDF":                        CKM_TLS_KDF,
		"CKM_KEY_WRAP_LYNKS":                 CKM_KEY_WRAP_LYNKS,
		"CKM_KEY_WRAP_SET_OAEP":              CKM_KEY_WRAP_SET_OAEP,
		"CKM_CMS_SIG":                        CKM_CMS_SIG,
		"CKM_KIP_DERIVE":                     CKM_KIP_DERIVE,
		"CKM_KIP_WRAP":                       CKM_KIP_WRAP,
		"CKM_KIP_MAC":                        CKM_KIP_MAC,
		"CKM_CAMELLIA_KEY_GEN":               CKM_CAMELLIA_KEY_GEN,
		"CKM_CAMELLIA_ECB":                   CKM_CAMELLIA_ECB,
		"CKM_CAMELLIA_CBC":                   CKM_CAMELLIA_CBC,
		"CKM_CAMELLIA_MAC":                   CKM_CAMELLIA_MAC,
		"CKM_CAMELLIA_MAC_GENERAL":           CKM_CAMELLIA_MAC_GENERAL,
		"CKM_CAMELLIA_CBC_PAD":               CKM_CAMELLIA_CBC_PAD,
		"CKM_CAMELLIA_ECB_ENCRYPT_DATA":      CKM_CAMELLIA_ECB_ENCRYPT_DATA,
		"CKM_CAMELLIA_CBC_ENCRYPT_DATA":      CKM_CAMELLIA_CBC_ENCRYPT_DATA,
		"CKM_CAMELLIA_CTR":                   CKM_CAMELLIA_CTR,
		"CKM_ARIA_KEY_GEN":                   CKM_ARIA_KEY_GEN,
		"CKM_ARIA_ECB":                       CKM_ARIA_ECB,
		"CKM_ARIA_CBC":                       CKM_ARIA_CBC,
		"CKM_ARIA_MAC":                       CKM_ARIA_MAC,
		"CKM_ARIA_MAC_GENERAL":               CKM_ARIA_MAC_GENERAL,
		"CKM_ARIA_CBC_PAD":                   CKM_ARIA_CBC_PAD,
		"CKM_ARIA_ECB_ENCRYPT_DATA":          CKM_ARIA_ECB_ENCRYPT_DATA,
		"CKM_ARIA_CBC_ENCRYPT_DATA":          CKM_ARIA_CBC_ENCRYPT_DATA,
		"CKM_SEED_KEY_GEN":                   CKM_SEED_KEY_GEN,
		"CKM_SEED_ECB":                       CKM_SEED_ECB,
		"CKM_SEED_CBC":                       CKM_SEED_CBC,
		"CKM_SEED_MAC":                       CKM_SEED_MAC,
		"CKM_SEED_MAC_GENERAL":               CKM_SEED_MAC_GENERAL,
		"CKM_SEED_CBC_PAD":                   CKM_SEED_CBC_PAD,
		"CKM_SEED_ECB_ENCRYPT_DATA":          CKM_SEED_ECB_ENCRYPT_DATA,
		"CKM_SEED_CBC_ENCRYPT_DATA":          CKM_SEED_CBC_ENCRYPT_DATA,
		"CKM_SKIPJACK_KEY_GEN":               CKM_SKIPJACK_KEY_GEN,
		"CKM_SKIPJACK_ECB64":                 CKM_SKIPJACK_ECB64,
		"CKM_SKIPJACK_CBC64":                 CKM_SKIPJACK_CBC64,
		"CKM_SKIPJACK_OFB64":                 CKM_SKIPJACK_OFB64,
		"CKM_SKIPJACK_CFB64":                 CKM_SKIPJACK_CFB64,
		"CKM_SKIPJACK_CFB32":                 CKM_SKIPJACK_CFB32,
		"CKM_SKIPJACK_CFB16":                 CKM_SKIPJACK_CFB16,
		"CKM_SKIPJACK_CFB8":                  CKM_SKIPJACK_CFB8,
		"CKM_SKIPJACK_WRAP":                  CKM_SKIPJACK_WRAP,
		"CKM_SKIPJACK_PRIVATE_WRAP":          CKM_SKIPJACK_PRIVATE_WRAP,
		"CKM_SKIPJACK_RELAYX":                CKM_SKIPJACK_RELAYX,
		"CKM_KEA_KEY_PAIR_GEN":               CKM_KEA_KEY_PAIR_GEN,
		"CKM_KEA_KEY_DERIVE":                 CKM_KEA_KEY_DERIVE,
		"CKM_KEA_DERIVE":                     CKM_KEA_DERIVE,
		"CKM_FORTEZZA_TIMESTAMP":             CKM_FORTEZZA_TIMESTAMP,
		"CKM_BATON_KEY_GEN":                  CKM_BATON_KEY_GEN,
		"CKM_BATON_ECB128":                   CKM_BATON_ECB128,
		"CKM_BATON_ECB96":                    CKM_BATON_ECB96,
		"CKM_BATON_CBC128":                   CKM_BATON_CBC128,
		"CKM_BATON_COUNTER":                  CKM_BATON_COUNTER,
		"CKM_BATON_SHUFFLE":                  CKM_BATON_SHUFFLE,
		"CKM_BATON_WRAP":                     CKM_BATON_WRAP,
		"CKM_ECDSA_KEY_PAIR_GEN":             CKM_ECDSA_KEY_PAIR_GEN,
		"CKM_EC_KEY_PAIR_GEN":                CKM_EC_KEY_PAIR_GEN,
		"CKM_ECDSA":                          CKM_ECDSA,
		"CKM_ECDSA_SHA1":                     CKM_ECDSA_SHA1,
		"CKM_ECDSA_SHA224":                   CKM_ECDSA_SHA224,
		"CKM_ECDSA_SHA256":                   CKM_ECDSA_SHA256,
		"CKM_ECDSA_SHA384":                   CKM_ECDSA_SHA384,
		"CKM_ECDSA_SHA512":                   CKM_ECDSA_SHA512,
		"CKM_ECDH1_DERIVE":                   CKM_ECDH1_DERIVE,
		"CKM_ECDH1_COFACTOR_DERIVE":          CKM_ECDH1_COFACTOR_DERIVE,
		"CKM_ECMQV_DERIVE":                   CKM_ECMQV_DERIVE,
		"CKM_ECDH_AES_KEY_WRAP":              CKM_ECDH_AES_KEY_WRAP,
		"CKM_RSA_AES_KEY_WRAP":               CKM_RSA_AES_KEY_WRAP,
		"CKM_JUNIPER_KEY_GEN":                CKM_JUNIPER_KEY_GEN,
		"CKM_JUNIPER_ECB128":                 CKM_JUNIPER_ECB128,
		"CKM_JUNIPER_CBC128":                 CKM_JUNIPER_CBC128,
		"CKM_JUNIPER_COUNTER":                CKM_JUNIPER_COUNTER,
		"CKM_JUNIPER_SHUFFLE":                CKM_JUNIPER_SHUFFLE,
		"CKM_JUNIPER_WRAP":                   CKM_JUNIPER_WRAP,
		"CKM_FASTHASH":                       CKM_FASTHASH,
		"CKM_AES_KEY_GEN":                    CKM_AES_KEY_GEN,
		"CKM_AES_ECB":                        CKM_AES_ECB,
		"CKM_AES_CBC":                        CKM_AES_CBC,
		"CKM_AES_MAC":                        CKM_AES_MAC,
		"CKM_AES_MAC_GENERAL":                CKM_AES_MAC_GENERAL,
		"CKM_AES_CBC_PAD":                    CKM_AES_CBC_PAD,
		"CKM_AES_CTR":                        CKM_AES_CTR,
		"CKM_AES_GCM":                        CKM_AES_GCM,
		"CKM_AES_CCM":                        CKM_AES_CCM,
		"CKM_AES_CTS":                        CKM_AES_CTS,
		"CKM_AES_CMAC":                       CKM_AES_CMAC,
		"CKM_AES_CMAC_GENERAL":               CKM_AES_CMAC_GENERAL,
		"CKM_AES_XCBC_MAC":                   CKM_AES_XCBC_MAC,
		"CKM_AES_XCBC_MAC_96":                CKM_AES_XCBC_MAC_96,
		"CKM_AES_GMAC":                       CKM_AES_GMAC,
		"CKM_BLOWFISH_KEY_GEN":               CKM_BLOWFISH_KEY_GEN,
		"CKM_BLOWFISH_CBC":                   CKM_BLOWFISH_CBC,
		"CKM_TWOFISH_KEY_GEN":                CKM_TWOFISH_KEY_GEN,
		"CKM_TWOFISH_CBC":                    CKM_TWOFISH_CBC,
		"CKM_BLOWFISH_CBC_PAD":               CKM_BLOWFISH_CBC_PAD,
		"CKM_TWOFISH_CBC_PAD":                CKM_TWOFISH_CBC_PAD,
		"CKM_DES_ECB_ENCRYPT_DATA":           CKM_DES_ECB_ENCRYPT_DATA,
		"CKM_DES_CBC_ENCRYPT_DATA":           CKM_DES_CBC_ENCRYPT_DATA,
		"CKM_DES3_ECB_ENCRYPT_DATA":          CKM_DES3_ECB_ENCRYPT_DATA,
		"CKM_DES3_CBC_ENCRYPT_DATA":          CKM_DES3_CBC_ENCRYPT_DATA,
		"CKM_AES_ECB_ENCRYPT_DATA":           CKM_AES_ECB_ENCRYPT_DATA,
		"CKM_AES_CBC_ENCRYPT_DATA":           CKM_AES_CBC_ENCRYPT_DATA,
		"CKM_GOSTR3410_KEY_PAIR_GEN":         CKM_GOSTR3410_KEY_PAIR_GEN,
		"CKM_GOSTR3410":                      CKM_GOSTR3410,
		"CKM_GOSTR3410_WITH_GOSTR3411":       CKM_GOSTR3410_WITH_GOSTR3411,
		"CKM_GOSTR3410_KEY_WRAP":             CKM_GOSTR3410_KEY_WRAP,
		"CKM_GOSTR3410_DERIVE":               CKM_GOSTR3410_DERIVE,
		"CKM_GOSTR3411":                      CKM_GOSTR3411,
		"CKM_GOSTR3411_HMAC":                 CKM_GOSTR3411_HMAC,
		"CKM_GOST28147_KEY_GEN":              CKM_GOST28147_KEY_GEN,
		"CKM_GOST28147_ECB":                  CKM_GOST28147_ECB,
		"CKM_GOST28147":                      CKM_GOST28147,
		"CKM_GOST28147_MAC":                  CKM_GOST28147_MAC,
		"CKM_GOST28147_KEY_WRAP":             CKM_GOST28147_KEY_WRAP,
		"CKM_DSA_PARAMETER_GEN":              CKM_DSA_PARAMETER_GEN,
		"CKM_DH_PKCS_PARAMETER_GEN":          CKM_DH_PKCS_PARAMETER_GEN,
		"CKM_X9_42_DH_PARAMETER_GEN":         CKM_X9_42_DH_PARAMETER_GEN,
		"CKM_DSA_PROBABLISTIC_PARAMETER_GEN": CKM_DSA_PROBABLISTIC_PARAMETER_GEN,
		"CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN": CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN,
		"CKM_AES_OFB":                        CKM_AES_OFB,
		"CKM_AES_CFB64":                      CKM_AES_CFB64,
		"CKM_AES_CFB8":                       CKM_AES_CFB8,
		"CKM_AES_CFB128":                     CKM_AES_CFB128,
		"CKM_AES_CFB1":                       CKM_AES_CFB1,
		"CKM_AES_KEY_WRAP":                   CKM_AES_KEY_WRAP,
		"CKM_AES_KEY_WRAP_PAD":               CKM_AES_KEY_WRAP_PAD,
		"CKM_RSA_PKCS_TPM_1_1":               CKM_RSA_PKCS_TPM_1_1,
		"CKM_RSA_PKCS_OAEP_TPM_1_1":          CKM_RSA_PKCS_OAEP_TPM_1_1,
		"CKM_VENDOR_DEFINED":                 CKM_VENDOR_DEFINED,
		"CKM_IBM_SHA3_224":                   CKM_IBM_SHA3_224,
		"CKM_IBM_SHA3_256":                   CKM_IBM_SHA3_256,
		"CKM_IBM_SHA3_384":                   CKM_IBM_SHA3_384,
		"CKM_IBM_SHA3_512":                   CKM_IBM_SHA3_512,
		"CKM_IBM_SHAKE128":                   CKM_IBM_SHAKE128,
		"CKM_IBM_SHAKE256":                   CKM_IBM_SHAKE256,
		"CKM_IBM_CMAC":                       CKM_IBM_CMAC,
		"CKM_IBM_ECDSA_SHA224":               CKM_IBM_ECDSA_SHA224,
		"CKM_IBM_ECDSA_SHA256":               CKM_IBM_ECDSA_SHA256,
		"CKM_IBM_ECDSA_SHA384":               CKM_IBM_ECDSA_SHA384,
		"CKM_IBM_ECDSA_SHA512":               CKM_IBM_ECDSA_SHA512,
		"CKM_IBM_EC_MULTIPLY":                CKM_IBM_EC_MULTIPLY,
		"CKM_IBM_EAC":                        CKM_IBM_EAC,
		"CKM_IBM_TESTCODE":                   CKM_IBM_TESTCODE,
		"CKM_IBM_RESERVED_SMX_1":             CKM_IBM_RESERVED_SMX_1,
		"CKM_IBM_RESERVED_SMX_2":             CKM_IBM_RESERVED_SMX_2,
		"CKM_IBM_RESERVED_SMX_3":             CKM_IBM_RESERVED_SMX_3,
		"CKM_IBM_SHA512_256":                 CKM_IBM_SHA512_256,
		"CKM_IBM_SHA512_224":                 CKM_IBM_SHA512_224,
		"CKM_IBM_SHA512_256_HMAC":            CKM_IBM_SHA512_256_HMAC,
		"CKM_IBM_SHA512_224_HMAC":            CKM_IBM_SHA512_224_HMAC,
		"CKM_IBM_EMV":                        CKM_IBM_EMV,
		"CKM_IBM_SHA512_256_HMAC_GENERAL":    CKM_IBM_SHA512_256_HMAC_GENERAL,
		"CKM_IBM_SHA512_224_HMAC_GENERAL":    CKM_IBM_SHA512_224_HMAC_GENERAL,
		"CKM_IBM_SHA512_256_KEY_DERIVATION":  CKM_IBM_SHA512_256_KEY_DERIVATION,
		"CKM_IBM_SHA512_224_KEY_DERIVATION":  CKM_IBM_SHA512_224_KEY_DERIVATION,
		"CKM_IBM_EC_X25519":                  CKM_IBM_EC_X25519,
		"CKM_IBM_ED25519_SHA512":             CKM_IBM_ED25519_SHA512,
		"CKM_IBM_ED25519_PH_SHA512":          CKM_IBM_ED25519_PH_SHA512,
		"CKM_IBM_EC_X448":                    CKM_IBM_EC_X448,
		"CKM_IBM_ED448_SHA3":                 CKM_IBM_ED448_SHA3,
		"CKM_IBM_ED448_PH_SHA3":              CKM_IBM_ED448_PH_SHA3,
		"CKM_IBM_SIPHASH":                    CKM_IBM_SIPHASH,
		"CKM_IBM_SHA3_224_HMAC":              CKM_IBM_SHA3_224_HMAC,
		"CKM_IBM_SHA3_256_HMAC":              CKM_IBM_SHA3_256_HMAC,
		"CKM_IBM_SHA3_384_HMAC":              CKM_IBM_SHA3_384_HMAC,
		"CKM_IBM_SHA3_512_HMAC":              CKM_IBM_SHA3_512_HMAC,
		"CKM_IBM_EC_X25519_RAW":              CKM_IBM_EC_X25519_RAW,
		"CKM_IBM_EC_X448_RAW":                CKM_IBM_EC_X448_RAW,
		"CKM_IBM_ECDSA_OTHER":                CKM_IBM_ECDSA_OTHER,
		"CKM_IBM_CLEARKEY_TRANSPORT":         CKM_IBM_CLEARKEY_TRANSPORT,
		"CKM_IBM_ATTRIBUTEBOUND_WRAP":        CKM_IBM_ATTRIBUTEBOUND_WRAP,
		"CKM_IBM_TRANSPORTKEY":               CKM_IBM_TRANSPORTKEY,
		"CKM_IBM_DH_PKCS_DERIVE_RAW":         CKM_IBM_DH_PKCS_DERIVE_RAW,
		"CKM_IBM_ECDH1_DERIVE_RAW":           CKM_IBM_ECDH1_DERIVE_RAW,
		"CKM_IBM_POLY1305":                   CKM_IBM_POLY1305,
		"CKM_IBM_CHACHA20":                   CKM_IBM_CHACHA20,
		"CKM_IBM_FILE":                       CKM_IBM_FILE,
		"CKM_IBM_WIRETEST":                   CKM_IBM_WIRETEST,
		"CKM_IBM_RETAINKEY":                  CKM_IBM_RETAINKEY,
		"CKM_IBM_SM4_KEY_GEN":                CKM_IBM_SM4_KEY_GEN,
		"CKM_IBM_SM4_CBC":                    CKM_IBM_SM4_CBC,
		"CKM_IBM_SM4_CBC_PAD":                CKM_IBM_SM4_CBC_PAD,
		"CKM_IBM_SM4_ECB":                    CKM_IBM_SM4_ECB,
		"CKM_IBM_ISO2_SM4_ECB_PAD":           CKM_IBM_ISO2_SM4_ECB_PAD,
		"CKM_IBM_ISO2_SM4_CBC_PAD":           CKM_IBM_ISO2_SM4_CBC_PAD,
		"CKM_IBM_SM4_MAC_GENERAL":            CKM_IBM_SM4_MAC_GENERAL,
		"CKM_IBM_ISO2_SM4_MAC_GENERAL":       CKM_IBM_ISO2_SM4_MAC_GENERAL,
		"CKM_IBM_SM4_ECB_ENCRYPT_DATA":       CKM_IBM_SM4_ECB_ENCRYPT_DATA,
		"CKM_IBM_SM2_KEY_PAIR_GEN":           CKM_IBM_SM2_KEY_PAIR_GEN,
		"CKM_IBM_SM2":                        CKM_IBM_SM2,
		"CKM_IBM_SM2_SM3":                    CKM_IBM_SM2_SM3,
		"CKM_IBM_SM2_ENCRYPT":                CKM_IBM_SM2_ENCRYPT,
		"CKM_IBM_SM3":                        CKM_IBM_SM3,
		"CKM_IBM_SM2_SM3_RFC":                CKM_IBM_SM2_SM3_RFC,
		"CKM_IBM_SM4_MAC":                    CKM_IBM_SM4_MAC,
		"CKM_IBM_ISO2_SM4_MAC":               CKM_IBM_ISO2_SM4_MAC,
		"CKM_IBM_BTC_DERIVE":                 CKM_IBM_BTC_DERIVE,
		"CKM_IBM_EPX":                        CKM_IBM_EPX,
		"CKM_IBM_EPX_WPRM":                   CKM_IBM_EPX_WPRM,
	}
	MechanismValueToName = map[Mechanism]string{
		CKM_RSA_PKCS_KEY_PAIR_GEN:          "CKM_RSA_PKCS_KEY_PAIR_GEN",
		CKM_RSA_PKCS:                       "CKM_RSA_PKCS",
		CKM_RSA_9796:                       "CKM_RSA_9796",
		CKM_RSA_X_509:                      "CKM_RSA_X_509",
		CKM_MD2_RSA_PKCS:                   "CKM_MD2_RSA_PKCS",
		CKM_MD5_RSA_PKCS:                   "CKM_MD5_RSA_PKCS",
		CKM_SHA1_RSA_PKCS:                  "CKM_SHA1_RSA_PKCS",
		CKM_RIPEMD128_RSA_PKCS:             "CKM_RIPEMD128_RSA_PKCS",
		CKM_RIPEMD160_RSA_PKCS:             "CKM_RIPEMD160_RSA_PKCS",
		CKM_RSA_PKCS_OAEP:                  "CKM_RSA_PKCS_OAEP",
		CKM_RSA_X9_31_KEY_PAIR_GEN:         "CKM_RSA_X9_31_KEY_PAIR_GEN",
		CKM_RSA_X9_31:                      "CKM_RSA_X9_31",
		CKM_SHA1_RSA_X9_31:                 "CKM_SHA1_RSA_X9_31",
		CKM_RSA_PKCS_PSS:                   "CKM_RSA_PKCS_PSS",
		CKM_SHA1_RSA_PKCS_PSS:              "CKM_SHA1_RSA_PKCS_PSS",
		CKM_DSA_KEY_PAIR_GEN:               "CKM_DSA_KEY_PAIR_GEN",
		CKM_DSA:                            "CKM_DSA",
		CKM_DSA_SHA1:                       "CKM_DSA_SHA1",
		CKM_DSA_SHA224:                     "CKM_DSA_SHA224",
		CKM_DSA_SHA256:                     "CKM_DSA_SHA256",
		CKM_DSA_SHA384:                     "CKM_DSA_SHA384",
		CKM_DSA_SHA512:                     "CKM_DSA_SHA512",
		CKM_DH_PKCS_KEY_PAIR_GEN:           "CKM_DH_PKCS_KEY_PAIR_GEN",
		CKM_DH_PKCS_DERIVE:                 "CKM_DH_PKCS_DERIVE",
		CKM_X9_42_DH_KEY_PAIR_GEN:          "CKM_X9_42_DH_KEY_PAIR_GEN",
		CKM_X9_42_DH_DERIVE:                "CKM_X9_42_DH_DERIVE",
		CKM_X9_42_DH_HYBRID_DERIVE:         "CKM_X9_42_DH_HYBRID_DERIVE",
		CKM_X9_42_MQV_DERIVE:               "CKM_X9_42_MQV_DERIVE",
		CKM_SHA256_RSA_PKCS:                "CKM_SHA256_RSA_PKCS",
		CKM_SHA384_RSA_PKCS:                "CKM_SHA384_RSA_PKCS",
		CKM_SHA512_RSA_PKCS:                "CKM_SHA512_RSA_PKCS",
		CKM_SHA256_RSA_PKCS_PSS:            "CKM_SHA256_RSA_PKCS_PSS",
		CKM_SHA384_RSA_PKCS_PSS:            "CKM_SHA384_RSA_PKCS_PSS",
		CKM_SHA512_RSA_PKCS_PSS:            "CKM_SHA512_RSA_PKCS_PSS",
		CKM_SHA224_RSA_PKCS:                "CKM_SHA224_RSA_PKCS",
		CKM_SHA224_RSA_PKCS_PSS:            "CKM_SHA224_RSA_PKCS_PSS",
		CKM_SHA512_224:                     "CKM_SHA512_224",
		CKM_SHA512_224_HMAC:                "CKM_SHA512_224_HMAC",
		CKM_SHA512_224_HMAC_GENERAL:        "CKM_SHA512_224_HMAC_GENERAL",
		CKM_SHA512_224_KEY_DERIVATION:      "CKM_SHA512_224_KEY_DERIVATION",
		CKM_SHA512_256:                     "CKM_SHA512_256",
		CKM_SHA512_256_HMAC:                "CKM_SHA512_256_HMAC",
		CKM_SHA512_256_HMAC_GENERAL:        "CKM_SHA512_256_HMAC_GENERAL",
		CKM_SHA512_256_KEY_DERIVATION:      "CKM_SHA512_256_KEY_DERIVATION",
		CKM_SHA512_T:                       "CKM_SHA512_T",
		CKM_SHA512_T_HMAC:                  "CKM_SHA512_T_HMAC",
		CKM_SHA512_T_HMAC_GENERAL:          "CKM_SHA512_T_HMAC_GENERAL",
		CKM_SHA512_T_KEY_DERIVATION:        "CKM_SHA512_T_KEY_DERIVATION",
		CKM_RC2_KEY_GEN:                    "CKM_RC2_KEY_GEN",
		CKM_RC2_ECB:                        "CKM_RC2_ECB",
		CKM_RC2_CBC:                        "CKM_RC2_CBC",
		CKM_RC2_MAC:                        "CKM_RC2_MAC",
		CKM_RC2_MAC_GENERAL:                "CKM_RC2_MAC_GENERAL",
		CKM_RC2_CBC_PAD:                    "CKM_RC2_CBC_PAD",
		CKM_RC4_KEY_GEN:                    "CKM_RC4_KEY_GEN",
		CKM_RC4:                            "CKM_RC4",
		CKM_DES_KEY_GEN:                    "CKM_DES_KEY_GEN",
		CKM_DES_ECB:                        "CKM_DES_ECB",
		CKM_DES_CBC:                        "CKM_DES_CBC",
		CKM_DES_MAC:                        "CKM_DES_MAC",
		CKM_DES_MAC_GENERAL:                "CKM_DES_MAC_GENERAL",
		CKM_DES_CBC_PAD:                    "CKM_DES_CBC_PAD",
		CKM_DES2_KEY_GEN:                   "CKM_DES2_KEY_GEN",
		CKM_DES3_KEY_GEN:                   "CKM_DES3_KEY_GEN",
		CKM_DES3_ECB:                       "CKM_DES3_ECB",
		CKM_DES3_CBC:                       "CKM_DES3_CBC",
		CKM_DES3_MAC:                       "CKM_DES3_MAC",
		CKM_DES3_MAC_GENERAL:               "CKM_DES3_MAC_GENERAL",
		CKM_DES3_CBC_PAD:                   "CKM_DES3_CBC_PAD",
		CKM_DES3_CMAC_GENERAL:              "CKM_DES3_CMAC_GENERAL",
		CKM_DES3_CMAC:                      "CKM_DES3_CMAC",
		CKM_CDMF_KEY_GEN:                   "CKM_CDMF_KEY_GEN",
		CKM_CDMF_ECB:                       "CKM_CDMF_ECB",
		CKM_CDMF_CBC:                       "CKM_CDMF_CBC",
		CKM_CDMF_MAC:                       "CKM_CDMF_MAC",
		CKM_CDMF_MAC_GENERAL:               "CKM_CDMF_MAC_GENERAL",
		CKM_CDMF_CBC_PAD:                   "CKM_CDMF_CBC_PAD",
		CKM_DES_OFB64:                      "CKM_DES_OFB64",
		CKM_DES_OFB8:                       "CKM_DES_OFB8",
		CKM_DES_CFB64:                      "CKM_DES_CFB64",
		CKM_DES_CFB8:                       "CKM_DES_CFB8",
		CKM_MD2:                            "CKM_MD2",
		CKM_MD2_HMAC:                       "CKM_MD2_HMAC",
		CKM_MD2_HMAC_GENERAL:               "CKM_MD2_HMAC_GENERAL",
		CKM_MD5:                            "CKM_MD5",
		CKM_MD5_HMAC:                       "CKM_MD5_HMAC",
		CKM_MD5_HMAC_GENERAL:               "CKM_MD5_HMAC_GENERAL",
		CKM_SHA_1:                          "CKM_SHA_1",
		CKM_SHA_1_HMAC:                     "CKM_SHA_1_HMAC",
		CKM_SHA_1_HMAC_GENERAL:             "CKM_SHA_1_HMAC_GENERAL",
		CKM_RIPEMD128:                      "CKM_RIPEMD128",
		CKM_RIPEMD128_HMAC:                 "CKM_RIPEMD128_HMAC",
		CKM_RIPEMD128_HMAC_GENERAL:         "CKM_RIPEMD128_HMAC_GENERAL",
		CKM_RIPEMD160:                      "CKM_RIPEMD160",
		CKM_RIPEMD160_HMAC:                 "CKM_RIPEMD160_HMAC",
		CKM_RIPEMD160_HMAC_GENERAL:         "CKM_RIPEMD160_HMAC_GENERAL",
		CKM_SHA256:                         "CKM_SHA256",
		CKM_SHA256_HMAC:                    "CKM_SHA256_HMAC",
		CKM_SHA256_HMAC_GENERAL:            "CKM_SHA256_HMAC_GENERAL",
		CKM_SHA224:                         "CKM_SHA224",
		CKM_SHA224_HMAC:                    "CKM_SHA224_HMAC",
		CKM_SHA224_HMAC_GENERAL:            "CKM_SHA224_HMAC_GENERAL",
		CKM_SHA384:                         "CKM_SHA384",
		CKM_SHA384_HMAC:                    "CKM_SHA384_HMAC",
		CKM_SHA384_HMAC_GENERAL:            "CKM_SHA384_HMAC_GENERAL",
		CKM_SHA512:                         "CKM_SHA512",
		CKM_SHA512_HMAC:                    "CKM_SHA512_HMAC",
		CKM_SHA512_HMAC_GENERAL:            "CKM_SHA512_HMAC_GENERAL",
		CKM_SECURID_KEY_GEN:                "CKM_SECURID_KEY_GEN",
		CKM_SECURID:                        "CKM_SECURID",
		CKM_HOTP_KEY_GEN:                   "CKM_HOTP_KEY_GEN",
		CKM_HOTP:                           "CKM_HOTP",
		CKM_ACTI:                           "CKM_ACTI",
		CKM_ACTI_KEY_GEN:                   "CKM_ACTI_KEY_GEN",
		CKM_CAST_KEY_GEN:                   "CKM_CAST_KEY_GEN",
		CKM_CAST_ECB:                       "CKM_CAST_ECB",
		CKM_CAST_CBC:                       "CKM_CAST_CBC",
		CKM_CAST_MAC:                       "CKM_CAST_MAC",
		CKM_CAST_MAC_GENERAL:               "CKM_CAST_MAC_GENERAL",
		CKM_CAST_CBC_PAD:                   "CKM_CAST_CBC_PAD",
		CKM_CAST3_KEY_GEN:                  "CKM_CAST3_KEY_GEN",
		CKM_CAST3_ECB:                      "CKM_CAST3_ECB",
		CKM_CAST3_CBC:                      "CKM_CAST3_CBC",
		CKM_CAST3_MAC:                      "CKM_CAST3_MAC",
		CKM_CAST3_MAC_GENERAL:              "CKM_CAST3_MAC_GENERAL",
		CKM_CAST3_CBC_PAD:                  "CKM_CAST3_CBC_PAD",
		CKM_CAST128_KEY_GEN:                "CKM_CAST128_KEY_GEN",
		CKM_CAST128_ECB:                    "CKM_CAST128_ECB",
		CKM_CAST128_CBC:                    "CKM_CAST128_CBC",
		CKM_CAST128_MAC:                    "CKM_CAST128_MAC",
		CKM_CAST128_MAC_GENERAL:            "CKM_CAST128_MAC_GENERAL",
		CKM_CAST128_CBC_PAD:                "CKM_CAST128_CBC_PAD",
		CKM_RC5_KEY_GEN:                    "CKM_RC5_KEY_GEN",
		CKM_RC5_ECB:                        "CKM_RC5_ECB",
		CKM_RC5_CBC:                        "CKM_RC5_CBC",
		CKM_RC5_MAC:                        "CKM_RC5_MAC",
		CKM_RC5_MAC_GENERAL:                "CKM_RC5_MAC_GENERAL",
		CKM_RC5_CBC_PAD:                    "CKM_RC5_CBC_PAD",
		CKM_IDEA_KEY_GEN:                   "CKM_IDEA_KEY_GEN",
		CKM_IDEA_ECB:                       "CKM_IDEA_ECB",
		CKM_IDEA_CBC:                       "CKM_IDEA_CBC",
		CKM_IDEA_MAC:                       "CKM_IDEA_MAC",
		CKM_IDEA_MAC_GENERAL:               "CKM_IDEA_MAC_GENERAL",
		CKM_IDEA_CBC_PAD:                   "CKM_IDEA_CBC_PAD",
		CKM_GENERIC_SECRET_KEY_GEN:         "CKM_GENERIC_SECRET_KEY_GEN",
		CKM_CONCATENATE_BASE_AND_KEY:       "CKM_CONCATENATE_BASE_AND_KEY",
		CKM_CONCATENATE_BASE_AND_DATA:      "CKM_CONCATENATE_BASE_AND_DATA",
		CKM_CONCATENATE_DATA_AND_BASE:      "CKM_CONCATENATE_DATA_AND_BASE",
		CKM_XOR_BASE_AND_DATA:              "CKM_XOR_BASE_AND_DATA",
		CKM_EXTRACT_KEY_FROM_KEY:           "CKM_EXTRACT_KEY_FROM_KEY",
		CKM_SSL3_PRE_MASTER_KEY_GEN:        "CKM_SSL3_PRE_MASTER_KEY_GEN",
		CKM_SSL3_MASTER_KEY_DERIVE:         "CKM_SSL3_MASTER_KEY_DERIVE",
		CKM_SSL3_KEY_AND_MAC_DERIVE:        "CKM_SSL3_KEY_AND_MAC_DERIVE",
		CKM_SSL3_MASTER_KEY_DERIVE_DH:      "CKM_SSL3_MASTER_KEY_DERIVE_DH",
		CKM_TLS_PRE_MASTER_KEY_GEN:         "CKM_TLS_PRE_MASTER_KEY_GEN",
		CKM_TLS_MASTER_KEY_DERIVE:          "CKM_TLS_MASTER_KEY_DERIVE",
		CKM_TLS_KEY_AND_MAC_DERIVE:         "CKM_TLS_KEY_AND_MAC_DERIVE",
		CKM_TLS_MASTER_KEY_DERIVE_DH:       "CKM_TLS_MASTER_KEY_DERIVE_DH",
		CKM_TLS_PRF:                        "CKM_TLS_PRF",
		CKM_SSL3_MD5_MAC:                   "CKM_SSL3_MD5_MAC",
		CKM_SSL3_SHA1_MAC:                  "CKM_SSL3_SHA1_MAC",
		CKM_MD5_KEY_DERIVATION:             "CKM_MD5_KEY_DERIVATION",
		CKM_MD2_KEY_DERIVATION:             "CKM_MD2_KEY_DERIVATION",
		CKM_SHA1_KEY_DERIVATION:            "CKM_SHA1_KEY_DERIVATION",
		CKM_SHA256_KEY_DERIVATION:          "CKM_SHA256_KEY_DERIVATION",
		CKM_SHA384_KEY_DERIVATION:          "CKM_SHA384_KEY_DERIVATION",
		CKM_SHA512_KEY_DERIVATION:          "CKM_SHA512_KEY_DERIVATION",
		CKM_SHA224_KEY_DERIVATION:          "CKM_SHA224_KEY_DERIVATION",
		CKM_PBE_MD2_DES_CBC:                "CKM_PBE_MD2_DES_CBC",
		CKM_PBE_MD5_DES_CBC:                "CKM_PBE_MD5_DES_CBC",
		CKM_PBE_MD5_CAST_CBC:               "CKM_PBE_MD5_CAST_CBC",
		CKM_PBE_MD5_CAST3_CBC:              "CKM_PBE_MD5_CAST3_CBC",
		CKM_PBE_MD5_CAST128_CBC:            "CKM_PBE_MD5_CAST128_CBC",
		CKM_PBE_SHA1_CAST128_CBC:           "CKM_PBE_SHA1_CAST128_CBC",
		CKM_PBE_SHA1_RC4_128:               "CKM_PBE_SHA1_RC4_128",
		CKM_PBE_SHA1_RC4_40:                "CKM_PBE_SHA1_RC4_40",
		CKM_PBE_SHA1_DES3_EDE_CBC:          "CKM_PBE_SHA1_DES3_EDE_CBC",
		CKM_PBE_SHA1_DES2_EDE_CBC:          "CKM_PBE_SHA1_DES2_EDE_CBC",
		CKM_PBE_SHA1_RC2_128_CBC:           "CKM_PBE_SHA1_RC2_128_CBC",
		CKM_PBE_SHA1_RC2_40_CBC:            "CKM_PBE_SHA1_RC2_40_CBC",
		CKM_PKCS5_PBKD2:                    "CKM_PKCS5_PBKD2",
		CKM_PBA_SHA1_WITH_SHA1_HMAC:        "CKM_PBA_SHA1_WITH_SHA1_HMAC",
		CKM_WTLS_PRE_MASTER_KEY_GEN:        "CKM_WTLS_PRE_MASTER_KEY_GEN",
		CKM_WTLS_MASTER_KEY_DERIVE:         "CKM_WTLS_MASTER_KEY_DERIVE",
		CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC:  "CKM_WTLS_MASTER_KEY_DERIVE_DH_ECC",
		CKM_WTLS_PRF:                       "CKM_WTLS_PRF",
		CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE: "CKM_WTLS_SERVER_KEY_AND_MAC_DERIVE",
		CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE: "CKM_WTLS_CLIENT_KEY_AND_MAC_DERIVE",
		CKM_TLS10_MAC_SERVER:               "CKM_TLS10_MAC_SERVER",
		CKM_TLS10_MAC_CLIENT:               "CKM_TLS10_MAC_CLIENT",
		CKM_TLS12_MAC:                      "CKM_TLS12_MAC",
		CKM_TLS12_KDF:                      "CKM_TLS12_KDF",
		CKM_TLS12_MASTER_KEY_DERIVE:        "CKM_TLS12_MASTER_KEY_DERIVE",
		CKM_TLS12_KEY_AND_MAC_DERIVE:       "CKM_TLS12_KEY_AND_MAC_DERIVE",
		CKM_TLS12_MASTER_KEY_DERIVE_DH:     "CKM_TLS12_MASTER_KEY_DERIVE_DH",
		CKM_TLS12_KEY_SAFE_DERIVE:          "CKM_TLS12_KEY_SAFE_DERIVE",
		CKM_TLS_MAC:                        "CKM_TLS_MAC",
		CKM_TLS_KDF:                        "CKM_TLS_KDF",
		CKM_KEY_WRAP_LYNKS:                 "CKM_KEY_WRAP_LYNKS",
		CKM_KEY_WRAP_SET_OAEP:              "CKM_KEY_WRAP_SET_OAEP",
		CKM_CMS_SIG:                        "CKM_CMS_SIG",
		CKM_KIP_DERIVE:                     "CKM_KIP_DERIVE",
		CKM_KIP_WRAP:                       "CKM_KIP_WRAP",
		CKM_KIP_MAC:                        "CKM_KIP_MAC",
		CKM_CAMELLIA_KEY_GEN:               "CKM_CAMELLIA_KEY_GEN",
		CKM_CAMELLIA_ECB:                   "CKM_CAMELLIA_ECB",
		CKM_CAMELLIA_CBC:                   "CKM_CAMELLIA_CBC",
		CKM_CAMELLIA_MAC:                   "CKM_CAMELLIA_MAC",
		CKM_CAMELLIA_MAC_GENERAL:           "CKM_CAMELLIA_MAC_GENERAL",
		CKM_CAMELLIA_CBC_PAD:               "CKM_CAMELLIA_CBC_PAD",
		CKM_CAMELLIA_ECB_ENCRYPT_DATA:      "CKM_CAMELLIA_ECB_ENCRYPT_DATA",
		CKM_CAMELLIA_CBC_ENCRYPT_DATA:      "CKM_CAMELLIA_CBC_ENCRYPT_DATA",
		CKM_CAMELLIA_CTR:                   "CKM_CAMELLIA_CTR",
		CKM_ARIA_KEY_GEN:                   "CKM_ARIA_KEY_GEN",
		CKM_ARIA_ECB:                       "CKM_ARIA_ECB",
		CKM_ARIA_CBC:                       "CKM_ARIA_CBC",
		CKM_ARIA_MAC:                       "CKM_ARIA_MAC",
		CKM_ARIA_MAC_GENERAL:               "CKM_ARIA_MAC_GENERAL",
		CKM_ARIA_CBC_PAD:                   "CKM_ARIA_CBC_PAD",
		CKM_ARIA_ECB_ENCRYPT_DATA:          "CKM_ARIA_ECB_ENCRYPT_DATA",
		CKM_ARIA_CBC_ENCRYPT_DATA:          "CKM_ARIA_CBC_ENCRYPT_DATA",
		CKM_SEED_KEY_GEN:                   "CKM_SEED_KEY_GEN",
		CKM_SEED_ECB:                       "CKM_SEED_ECB",
		CKM_SEED_CBC:                       "CKM_SEED_CBC",
		CKM_SEED_MAC:                       "CKM_SEED_MAC",
		CKM_SEED_MAC_GENERAL:               "CKM_SEED_MAC_GENERAL",
		CKM_SEED_CBC_PAD:                   "CKM_SEED_CBC_PAD",
		CKM_SEED_ECB_ENCRYPT_DATA:          "CKM_SEED_ECB_ENCRYPT_DATA",
		CKM_SEED_CBC_ENCRYPT_DATA:          "CKM_SEED_CBC_ENCRYPT_DATA",
		CKM_SKIPJACK_KEY_GEN:               "CKM_SKIPJACK_KEY_GEN",
		CKM_SKIPJACK_ECB64:                 "CKM_SKIPJACK_ECB64",
		CKM_SKIPJACK_CBC64:                 "CKM_SKIPJACK_CBC64",
		CKM_SKIPJACK_OFB64:                 "CKM_SKIPJACK_OFB64",
		CKM_SKIPJACK_CFB64:                 "CKM_SKIPJACK_CFB64",
		CKM_SKIPJACK_CFB32:                 "CKM_SKIPJACK_CFB32",
		CKM_SKIPJACK_CFB16:                 "CKM_SKIPJACK_CFB16",
		CKM_SKIPJACK_CFB8:                  "CKM_SKIPJACK_CFB8",
		CKM_SKIPJACK_WRAP:                  "CKM_SKIPJACK_WRAP",
		CKM_SKIPJACK_PRIVATE_WRAP:          "CKM_SKIPJACK_PRIVATE_WRAP",
		CKM_SKIPJACK_RELAYX:                "CKM_SKIPJACK_RELAYX",
		CKM_KEA_KEY_PAIR_GEN:               "CKM_KEA_KEY_PAIR_GEN",
		CKM_KEA_KEY_DERIVE:                 "CKM_KEA_KEY_DERIVE",
		CKM_KEA_DERIVE:                     "CKM_KEA_DERIVE",
		CKM_FORTEZZA_TIMESTAMP:             "CKM_FORTEZZA_TIMESTAMP",
		CKM_BATON_KEY_GEN:                  "CKM_BATON_KEY_GEN",
		CKM_BATON_ECB128:                   "CKM_BATON_ECB128",
		CKM_BATON_ECB96:                    "CKM_BATON_ECB96",
		CKM_BATON_CBC128:                   "CKM_BATON_CBC128",
		CKM_BATON_COUNTER:                  "CKM_BATON_COUNTER",
		CKM_BATON_SHUFFLE:                  "CKM_BATON_SHUFFLE",
		CKM_BATON_WRAP:                     "CKM_BATON_WRAP",
		CKM_EC_KEY_PAIR_GEN:                "CKM_EC_KEY_PAIR_GEN",
		CKM_ECDSA:                          "CKM_ECDSA",
		CKM_ECDSA_SHA1:                     "CKM_ECDSA_SHA1",
		CKM_ECDSA_SHA224:                   "CKM_ECDSA_SHA224",
		CKM_ECDSA_SHA256:                   "CKM_ECDSA_SHA256",
		CKM_ECDSA_SHA384:                   "CKM_ECDSA_SHA384",
		CKM_ECDSA_SHA512:                   "CKM_ECDSA_SHA512",
		CKM_ECDH1_DERIVE:                   "CKM_ECDH1_DERIVE",
		CKM_ECDH1_COFACTOR_DERIVE:          "CKM_ECDH1_COFACTOR_DERIVE",
		CKM_ECMQV_DERIVE:                   "CKM_ECMQV_DERIVE",
		CKM_ECDH_AES_KEY_WRAP:              "CKM_ECDH_AES_KEY_WRAP",
		CKM_RSA_AES_KEY_WRAP:               "CKM_RSA_AES_KEY_WRAP",
		CKM_JUNIPER_KEY_GEN:                "CKM_JUNIPER_KEY_GEN",
		CKM_JUNIPER_ECB128:                 "CKM_JUNIPER_ECB128",
		CKM_JUNIPER_CBC128:                 "CKM_JUNIPER_CBC128",
		CKM_JUNIPER_COUNTER:                "CKM_JUNIPER_COUNTER",
		CKM_JUNIPER_SHUFFLE:                "CKM_JUNIPER_SHUFFLE",
		CKM_JUNIPER_WRAP:                   "CKM_JUNIPER_WRAP",
		CKM_FASTHASH:                       "CKM_FASTHASH",
		CKM_AES_KEY_GEN:                    "CKM_AES_KEY_GEN",
		CKM_AES_ECB:                        "CKM_AES_ECB",
		CKM_AES_CBC:                        "CKM_AES_CBC",
		CKM_AES_MAC:                        "CKM_AES_MAC",
		CKM_AES_MAC_GENERAL:                "CKM_AES_MAC_GENERAL",
		CKM_AES_CBC_PAD:                    "CKM_AES_CBC_PAD",
		CKM_AES_CTR:                        "CKM_AES_CTR",
		CKM_AES_GCM:                        "CKM_AES_GCM",
		CKM_AES_CCM:                        "CKM_AES_CCM",
		CKM_AES_CTS:                        "CKM_AES_CTS",
		CKM_AES_CMAC:                       "CKM_AES_CMAC",
		CKM_AES_CMAC_GENERAL:               "CKM_AES_CMAC_GENERAL",
		CKM_AES_XCBC_MAC:                   "CKM_AES_XCBC_MAC",
		CKM_AES_XCBC_MAC_96:                "CKM_AES_XCBC_MAC_96",
		CKM_AES_GMAC:                       "CKM_AES_GMAC",
		CKM_BLOWFISH_KEY_GEN:               "CKM_BLOWFISH_KEY_GEN",
		CKM_BLOWFISH_CBC:                   "CKM_BLOWFISH_CBC",
		CKM_TWOFISH_KEY_GEN:                "CKM_TWOFISH_KEY_GEN",
		CKM_TWOFISH_CBC:                    "CKM_TWOFISH_CBC",
		CKM_BLOWFISH_CBC_PAD:               "CKM_BLOWFISH_CBC_PAD",
		CKM_TWOFISH_CBC_PAD:                "CKM_TWOFISH_CBC_PAD",
		CKM_DES_ECB_ENCRYPT_DATA:           "CKM_DES_ECB_ENCRYPT_DATA",
		CKM_DES_CBC_ENCRYPT_DATA:           "CKM_DES_CBC_ENCRYPT_DATA",
		CKM_DES3_ECB_ENCRYPT_DATA:          "CKM_DES3_ECB_ENCRYPT_DATA",
		CKM_DES3_CBC_ENCRYPT_DATA:          "CKM_DES3_CBC_ENCRYPT_DATA",
		CKM_AES_ECB_ENCRYPT_DATA:           "CKM_AES_ECB_ENCRYPT_DATA",
		CKM_AES_CBC_ENCRYPT_DATA:           "CKM_AES_CBC_ENCRYPT_DATA",
		CKM_GOSTR3410_KEY_PAIR_GEN:         "CKM_GOSTR3410_KEY_PAIR_GEN",
		CKM_GOSTR3410:                      "CKM_GOSTR3410",
		CKM_GOSTR3410_WITH_GOSTR3411:       "CKM_GOSTR3410_WITH_GOSTR3411",
		CKM_GOSTR3410_KEY_WRAP:             "CKM_GOSTR3410_KEY_WRAP",
		CKM_GOSTR3410_DERIVE:               "CKM_GOSTR3410_DERIVE",
		CKM_GOSTR3411:                      "CKM_GOSTR3411",
		CKM_GOSTR3411_HMAC:                 "CKM_GOSTR3411_HMAC",
		CKM_GOST28147_KEY_GEN:              "CKM_GOST28147_KEY_GEN",
		CKM_GOST28147_ECB:                  "CKM_GOST28147_ECB",
		CKM_GOST28147:                      "CKM_GOST28147",
		CKM_GOST28147_MAC:                  "CKM_GOST28147_MAC",
		CKM_GOST28147_KEY_WRAP:             "CKM_GOST28147_KEY_WRAP",
		CKM_DSA_PARAMETER_GEN:              "CKM_DSA_PARAMETER_GEN",
		CKM_DH_PKCS_PARAMETER_GEN:          "CKM_DH_PKCS_PARAMETER_GEN",
		CKM_X9_42_DH_PARAMETER_GEN:         "CKM_X9_42_DH_PARAMETER_GEN",
		CKM_DSA_PROBABLISTIC_PARAMETER_GEN: "CKM_DSA_PROBABLISTIC_PARAMETER_GEN",
		CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN: "CKM_DSA_SHAWE_TAYLOR_PARAMETER_GEN",
		CKM_AES_OFB:                        "CKM_AES_OFB",
		CKM_AES_CFB64:                      "CKM_AES_CFB64",
		CKM_AES_CFB8:                       "CKM_AES_CFB8",
		CKM_AES_CFB128:                     "CKM_AES_CFB128",
		CKM_AES_CFB1:                       "CKM_AES_CFB1",
		CKM_AES_KEY_WRAP:                   "CKM_AES_KEY_WRAP",
		CKM_AES_KEY_WRAP_PAD:               "CKM_AES_KEY_WRAP_PAD",
		CKM_RSA_PKCS_TPM_1_1:               "CKM_RSA_PKCS_TPM_1_1",
		CKM_RSA_PKCS_OAEP_TPM_1_1:          "CKM_RSA_PKCS_OAEP_TPM_1_1",
		CKM_VENDOR_DEFINED:                 "CKM_VENDOR_DEFINED",
		CKM_IBM_SHA3_224:                   "CKM_IBM_SHA3_224",
		CKM_IBM_SHA3_256:                   "CKM_IBM_SHA3_256",
		CKM_IBM_SHA3_384:                   "CKM_IBM_SHA3_384",
		CKM_IBM_SHA3_512:                   "CKM_IBM_SHA3_512",
		CKM_IBM_SHAKE128:                   "CKM_IBM_SHAKE128",
		CKM_IBM_SHAKE256:                   "CKM_IBM_SHAKE256",
		CKM_IBM_CMAC:                       "CKM_IBM_CMAC",
		CKM_IBM_ECDSA_SHA224:               "CKM_IBM_ECDSA_SHA224",
		CKM_IBM_ECDSA_SHA256:               "CKM_IBM_ECDSA_SHA256",
		CKM_IBM_ECDSA_SHA384:               "CKM_IBM_ECDSA_SHA384",
		CKM_IBM_ECDSA_SHA512:               "CKM_IBM_ECDSA_SHA512",
		CKM_IBM_EC_MULTIPLY:                "CKM_IBM_EC_MULTIPLY",
		CKM_IBM_EAC:                        "CKM_IBM_EAC",
		CKM_IBM_TESTCODE:                   "CKM_IBM_TESTCODE",
		CKM_IBM_RESERVED_SMX_1:             "CKM_IBM_RESERVED_SMX_1",
		CKM_IBM_RESERVED_SMX_2:             "CKM_IBM_RESERVED_SMX_2",
		CKM_IBM_RESERVED_SMX_3:             "CKM_IBM_RESERVED_SMX_3",
		CKM_IBM_SHA512_256:                 "CKM_IBM_SHA512_256",
		CKM_IBM_SHA512_224:                 "CKM_IBM_SHA512_224",
		CKM_IBM_SHA512_256_HMAC:            "CKM_IBM_SHA512_256_HMAC",
		CKM_IBM_SHA512_224_HMAC:            "CKM_IBM_SHA512_224_HMAC",
		CKM_IBM_EMV:                        "CKM_IBM_EMV",
		CKM_IBM_SHA512_256_HMAC_GENERAL:    "CKM_IBM_SHA512_256_HMAC_GENERAL",
		CKM_IBM_SHA512_224_HMAC_GENERAL:    "CKM_IBM_SHA512_224_HMAC_GENERAL",
		CKM_IBM_SHA512_256_KEY_DERIVATION:  "CKM_IBM_SHA512_256_KEY_DERIVATION",
		CKM_IBM_SHA512_224_KEY_DERIVATION:  "CKM_IBM_SHA512_224_KEY_DERIVATION",
		CKM_IBM_EC_X25519:                  "CKM_IBM_EC_X25519",
		CKM_IBM_ED25519_SHA512:             "CKM_IBM_ED25519_SHA512",
		CKM_IBM_ED25519_PH_SHA512:          "CKM_IBM_ED25519_PH_SHA512",
		CKM_IBM_EC_X448:                    "CKM_IBM_EC_X448",
		CKM_IBM_ED448_SHA3:                 "CKM_IBM_ED448_SHA3",
		CKM_IBM_ED448_PH_SHA3:              "CKM_IBM_ED448_PH_SHA3",
		CKM_IBM_SIPHASH:                    "CKM_IBM_SIPHASH",
		CKM_IBM_SHA3_224_HMAC:              "CKM_IBM_SHA3_224_HMAC",
		CKM_IBM_SHA3_256_HMAC:              "CKM_IBM_SHA3_256_HMAC",
		CKM_IBM_SHA3_384_HMAC:              "CKM_IBM_SHA3_384_HMAC",
		CKM_IBM_SHA3_512_HMAC:              "CKM_IBM_SHA3_512_HMAC",
		CKM_IBM_EC_X25519_RAW:              "CKM_IBM_EC_X25519_RAW",
		CKM_IBM_EC_X448_RAW:                "CKM_IBM_EC_X448_RAW",
		CKM_IBM_ECDSA_OTHER:                "CKM_IBM_ECDSA_OTHER",
		CKM_IBM_CLEARKEY_TRANSPORT:         "CKM_IBM_CLEARKEY_TRANSPORT",
		CKM_IBM_ATTRIBUTEBOUND_WRAP:        "CKM_IBM_ATTRIBUTEBOUND_WRAP",
		CKM_IBM_TRANSPORTKEY:               "CKM_IBM_TRANSPORTKEY",
		CKM_IBM_DH_PKCS_DERIVE_RAW:         "CKM_IBM_DH_PKCS_DERIVE_RAW",
		CKM_IBM_ECDH1_DERIVE_RAW:           "CKM_IBM_ECDH1_DERIVE_RAW",
		CKM_IBM_POLY1305:                   "CKM_IBM_POLY1305",
		CKM_IBM_CHACHA20:                   "CKM_IBM_CHACHA20",
		CKM_IBM_FILE:                       "CKM_IBM_FILE",
		CKM_IBM_WIRETEST:                   "CKM_IBM_WIRETEST",
		CKM_IBM_RETAINKEY:                  "CKM_IBM_RETAINKEY",
		CKM_IBM_SM4_KEY_GEN:                "CKM_IBM_SM4_KEY_GEN",
		CKM_IBM_SM4_CBC:                    "CKM_IBM_SM4_CBC",
		CKM_IBM_SM4_CBC_PAD:                "CKM_IBM_SM4_CBC_PAD",
		CKM_IBM_SM4_ECB:                    "CKM_IBM_SM4_ECB",
		CKM_IBM_ISO2_SM4_ECB_PAD:           "CKM_IBM_ISO2_SM4_ECB_PAD",
		CKM_IBM_ISO2_SM4_CBC_PAD:           "CKM_IBM_ISO2_SM4_CBC_PAD",
		CKM_IBM_SM4_MAC_GENERAL:            "CKM_IBM_SM4_MAC_GENERAL",
		CKM_IBM_ISO2_SM4_MAC_GENERAL:       "CKM_IBM_ISO2_SM4_MAC_GENERAL",
		CKM_IBM_SM4_ECB_ENCRYPT_DATA:       "CKM_IBM_SM4_ECB_ENCRYPT_DATA",
		CKM_IBM_SM2_KEY_PAIR_GEN:           "CKM_IBM_SM2_KEY_PAIR_GEN",
		CKM_IBM_SM2:                        "CKM_IBM_SM2",
		CKM_IBM_SM2_SM3:                    "CKM_IBM_SM2_SM3",
		CKM_IBM_SM2_ENCRYPT:                "CKM_IBM_SM2_ENCRYPT",
		CKM_IBM_SM3:                        "CKM_IBM_SM3",
		CKM_IBM_SM2_SM3_RFC:                "CKM_IBM_SM2_SM3_RFC",
		CKM_IBM_SM4_MAC:                    "CKM_IBM_SM4_MAC",
		CKM_IBM_ISO2_SM4_MAC:               "CKM_IBM_ISO2_SM4_MAC",
		CKM_IBM_BTC_DERIVE:                 "CKM_IBM_BTC_DERIVE",
		CKM_IBM_EPX:                        "CKM_IBM_EPX",
		CKM_IBM_EPX_WPRM:                   "CKM_IBM_EPX_WPRM",
	}
	MechanismInfoFlagNameToValue = map[string]MechanismInfoFlag{
		"CKF_DONT_BLOCK":                     CKF_DONT_BLOCK,
		"CKF_HW":                             CKF_HW,
		"CKF_LIBRARY_CANT_CREATE_OS_THREADS": CKF_LIBRARY_CANT_CREATE_OS_THREADS,
		"CKF_NEXT_OTP":                       CKF_NEXT_OTP,
		"CKF_RNG":                            CKF_RNG,
		"CKF_TOKEN_PRESENT":                  CKF_TOKEN_PRESENT,
		"CKF_EXCLUDE_TIME":                   CKF_EXCLUDE_TIME,
		"CKF_OS_LOCKING_OK":                  CKF_OS_LOCKING_OK,
		"CKF_REMOVABLE_DEVICE":               CKF_REMOVABLE_DEVICE,
		"CKF_RW_SESSION":                     CKF_RW_SESSION,
		"CKF_WRITE_PROTECTED":                CKF_WRITE_PROTECTED,
		"CKF_EXCLUDE_COUNTER":                CKF_EXCLUDE_COUNTER,
		"CKF_HW_SLOT":                        CKF_HW_SLOT,
		"CKF_LOGIN_REQUIRED":                 CKF_LOGIN_REQUIRED,
		"CKF_SERIAL_SESSION":                 CKF_SERIAL_SESSION,
		"CKF_EXCLUDE_CHALLENGE":              CKF_EXCLUDE_CHALLENGE,
		"CKF_USER_PIN_INITIALIZED":           CKF_USER_PIN_INITIALIZED,
		"CKF_EXCLUDE_PIN":                    CKF_EXCLUDE_PIN,
		"CKF_RESTORE_KEY_NOT_NEEDED":         CKF_RESTORE_KEY_NOT_NEEDED,
		"CKF_USER_FRIENDLY_OTP":              CKF_USER_FRIENDLY_OTP,
		"CKF_CLOCK_ON_TOKEN":                 CKF_CLOCK_ON_TOKEN,
		"CKF_ENCRYPT":                        CKF_ENCRYPT,
		"CKF_PROTECTED_AUTHENTICATION_PATH":  CKF_PROTECTED_AUTHENTICATION_PATH,
		"CKF_DECRYPT":                        CKF_DECRYPT,
		"CKF_DUAL_CRYPTO_OPERATIONS":         CKF_DUAL_CRYPTO_OPERATIONS,
		"CKF_DIGEST":                         CKF_DIGEST,
		"CKF_TOKEN_INITIALIZED":              CKF_TOKEN_INITIALIZED,
		"CKF_SECONDARY_AUTHENTICATION":       CKF_SECONDARY_AUTHENTICATION,
		"CKF_SIGN":                           CKF_SIGN,
		"CKF_SIGN_RECOVER":                   CKF_SIGN_RECOVER,
		"CKF_VERIFY":                         CKF_VERIFY,
		"CKF_VERIFY_RECOVER":                 CKF_VERIFY_RECOVER,
		"CKF_GENERATE":                       CKF_GENERATE,
		"CKF_GENERATE_KEY_PAIR":              CKF_GENERATE_KEY_PAIR,
		"CKF_USER_PIN_COUNT_LOW":             CKF_USER_PIN_COUNT_LOW,
		"CKF_USER_PIN_FINAL_TRY":             CKF_USER_PIN_FINAL_TRY,
		"CKF_WRAP":                           CKF_WRAP,
		"CKF_UNWRAP":                         CKF_UNWRAP,
		"CKF_USER_PIN_LOCKED":                CKF_USER_PIN_LOCKED,
		"CKF_DERIVE":                         CKF_DERIVE,
		"CKF_USER_PIN_TO_BE_CHANGED":         CKF_USER_PIN_TO_BE_CHANGED,
		"CKF_EC_F_P":                         CKF_EC_F_P,
		"CKF_SO_PIN_COUNT_LOW":               CKF_SO_PIN_COUNT_LOW,
		"CKF_EC_F_2M":                        CKF_EC_F_2M,
		"CKF_SO_PIN_FINAL_TRY":               CKF_SO_PIN_FINAL_TRY,
		"CKF_EC_ECPARAMETERS":                CKF_EC_ECPARAMETERS,
		"CKF_SO_PIN_LOCKED":                  CKF_SO_PIN_LOCKED,
		"CKF_EC_NAMEDCURVE":                  CKF_EC_NAMEDCURVE,
		"CKF_SO_PIN_TO_BE_CHANGED":           CKF_SO_PIN_TO_BE_CHANGED,
		"CKF_EC_UNCOMPRESS":                  CKF_EC_UNCOMPRESS,
		"CKF_ERROR_STATE":                    CKF_ERROR_STATE,
		"CKF_EC_COMPRESS":                    CKF_EC_COMPRESS,
		"CKF_ARRAY_ATTRIBUTE":                CKF_ARRAY_ATTRIBUTE,
		"CKF_EXTENSION":                      CKF_EXTENSION,
	}
	MechanismInfoFlagValueToName = map[MechanismInfoFlag]string{}
	ObjectClassNameToValue       = map[string]ObjectClass{
		"CKO_DATA":              CKO_DATA,
		"CKO_CERTIFICATE":       CKO_CERTIFICATE,
		"CKO_PUBLIC_KEY":        CKO_PUBLIC_KEY,
		"CKO_PRIVATE_KEY":       CKO_PRIVATE_KEY,
		"CKO_SECRET_KEY":        CKO_SECRET_KEY,
		"CKO_HW_FEATURE":        CKO_HW_FEATURE,
		"CKO_DOMAIN_PARAMETERS": CKO_DOMAIN_PARAMETERS,
		"CKO_MECHANISM":         CKO_MECHANISM,
		"CKO_OTP_KEY":           CKO_OTP_KEY,
		"CKO_VENDOR_DEFINED":    CKO_VENDOR_DEFINED,
	}
	ObjectClassValueToName = map[ObjectClass]string{
		CKO_DATA:              "CKO_DATA",
		CKO_CERTIFICATE:       "CKO_CERTIFICATE",
		CKO_PUBLIC_KEY:        "CKO_PUBLIC_KEY",
		CKO_PRIVATE_KEY:       "CKO_PRIVATE_KEY",
		CKO_SECRET_KEY:        "CKO_SECRET_KEY",
		CKO_HW_FEATURE:        "CKO_HW_FEATURE",
		CKO_DOMAIN_PARAMETERS: "CKO_DOMAIN_PARAMETERS",
		CKO_MECHANISM:         "CKO_MECHANISM",
		CKO_OTP_KEY:           "CKO_OTP_KEY",
		CKO_VENDOR_DEFINED:    "CKO_VENDOR_DEFINED",
	}
	ReturnNameToValue = map[string]Return{
		"CKR_OK":                               CKR_OK,
		"CKR_CANCEL":                           CKR_CANCEL,
		"CKR_HOST_MEMORY":                      CKR_HOST_MEMORY,
		"CKR_SLOT_ID_INVALID":                  CKR_SLOT_ID_INVALID,
		"CKR_GENERAL_ERROR":                    CKR_GENERAL_ERROR,
		"CKR_FUNCTION_FAILED":                  CKR_FUNCTION_FAILED,
		"CKR_ARGUMENTS_BAD":                    CKR_ARGUMENTS_BAD,
		"CKR_NO_EVENT":                         CKR_NO_EVENT,
		"CKR_NEED_TO_CREATE_THREADS":           CKR_NEED_TO_CREATE_THREADS,
		"CKR_CANT_LOCK":                        CKR_CANT_LOCK,
		"CKR_ATTRIBUTE_READ_ONLY":              CKR_ATTRIBUTE_READ_ONLY,
		"CKR_ATTRIBUTE_SENSITIVE":              CKR_ATTRIBUTE_SENSITIVE,
		"CKR_ATTRIBUTE_TYPE_INVALID":           CKR_ATTRIBUTE_TYPE_INVALID,
		"CKR_ATTRIBUTE_VALUE_INVALID":          CKR_ATTRIBUTE_VALUE_INVALID,
		"CKR_ACTION_PROHIBITED":                CKR_ACTION_PROHIBITED,
		"CKR_DATA_INVALID":                     CKR_DATA_INVALID,
		"CKR_DATA_LEN_RANGE":                   CKR_DATA_LEN_RANGE,
		"CKR_DEVICE_ERROR":                     CKR_DEVICE_ERROR,
		"CKR_DEVICE_MEMORY":                    CKR_DEVICE_MEMORY,
		"CKR_DEVICE_REMOVED":                   CKR_DEVICE_REMOVED,
		"CKR_ENCRYPTED_DATA_INVALID":           CKR_ENCRYPTED_DATA_INVALID,
		"CKR_ENCRYPTED_DATA_LEN_RANGE":         CKR_ENCRYPTED_DATA_LEN_RANGE,
		"CKR_FUNCTION_CANCELED":                CKR_FUNCTION_CANCELED,
		"CKR_FUNCTION_NOT_PARALLEL":            CKR_FUNCTION_NOT_PARALLEL,
		"CKR_FUNCTION_NOT_SUPPORTED":           CKR_FUNCTION_NOT_SUPPORTED,
		"CKR_KEY_HANDLE_INVALID":               CKR_KEY_HANDLE_INVALID,
		"CKR_KEY_SIZE_RANGE":                   CKR_KEY_SIZE_RANGE,
		"CKR_KEY_TYPE_INCONSISTENT":            CKR_KEY_TYPE_INCONSISTENT,
		"CKR_KEY_NOT_NEEDED":                   CKR_KEY_NOT_NEEDED,
		"CKR_KEY_CHANGED":                      CKR_KEY_CHANGED,
		"CKR_KEY_NEEDED":                       CKR_KEY_NEEDED,
		"CKR_KEY_INDIGESTIBLE":                 CKR_KEY_INDIGESTIBLE,
		"CKR_KEY_FUNCTION_NOT_PERMITTED":       CKR_KEY_FUNCTION_NOT_PERMITTED,
		"CKR_KEY_NOT_WRAPPABLE":                CKR_KEY_NOT_WRAPPABLE,
		"CKR_KEY_UNEXTRACTABLE":                CKR_KEY_UNEXTRACTABLE,
		"CKR_MECHANISM_INVALID":                CKR_MECHANISM_INVALID,
		"CKR_MECHANISM_PARAM_INVALID":          CKR_MECHANISM_PARAM_INVALID,
		"CKR_OBJECT_HANDLE_INVALID":            CKR_OBJECT_HANDLE_INVALID,
		"CKR_OPERATION_ACTIVE":                 CKR_OPERATION_ACTIVE,
		"CKR_OPERATION_NOT_INITIALIZED":        CKR_OPERATION_NOT_INITIALIZED,
		"CKR_PIN_INCORRECT":                    CKR_PIN_INCORRECT,
		"CKR_PIN_INVALID":                      CKR_PIN_INVALID,
		"CKR_PIN_LEN_RANGE":                    CKR_PIN_LEN_RANGE,
		"CKR_PIN_EXPIRED":                      CKR_PIN_EXPIRED,
		"CKR_PIN_LOCKED":                       CKR_PIN_LOCKED,
		"CKR_SESSION_CLOSED":                   CKR_SESSION_CLOSED,
		"CKR_SESSION_COUNT":                    CKR_SESSION_COUNT,
		"CKR_SESSION_HANDLE_INVALID":           CKR_SESSION_HANDLE_INVALID,
		"CKR_SESSION_PARALLEL_NOT_SUPPORTED":   CKR_SESSION_PARALLEL_NOT_SUPPORTED,
		"CKR_SESSION_READ_ONLY":                CKR_SESSION_READ_ONLY,
		"CKR_SESSION_EXISTS":                   CKR_SESSION_EXISTS,
		"CKR_SESSION_READ_ONLY_EXISTS":         CKR_SESSION_READ_ONLY_EXISTS,
		"CKR_SESSION_READ_WRITE_SO_EXISTS":     CKR_SESSION_READ_WRITE_SO_EXISTS,
		"CKR_SIGNATURE_INVALID":                CKR_SIGNATURE_INVALID,
		"CKR_SIGNATURE_LEN_RANGE":              CKR_SIGNATURE_LEN_RANGE,
		"CKR_TEMPLATE_INCOMPLETE":              CKR_TEMPLATE_INCOMPLETE,
		"CKR_TEMPLATE_INCONSISTENT":            CKR_TEMPLATE_INCONSISTENT,
		"CKR_TOKEN_NOT_PRESENT":                CKR_TOKEN_NOT_PRESENT,
		"CKR_TOKEN_NOT_RECOGNIZED":             CKR_TOKEN_NOT_RECOGNIZED,
		"CKR_TOKEN_WRITE_PROTECTED":            CKR_TOKEN_WRITE_PROTECTED,
		"CKR_UNWRAPPING_KEY_HANDLE_INVALID":    CKR_UNWRAPPING_KEY_HANDLE_INVALID,
		"CKR_UNWRAPPING_KEY_SIZE_RANGE":        CKR_UNWRAPPING_KEY_SIZE_RANGE,
		"CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT": CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT,
		"CKR_USER_ALREADY_LOGGED_IN":           CKR_USER_ALREADY_LOGGED_IN,
		"CKR_USER_NOT_LOGGED_IN":               CKR_USER_NOT_LOGGED_IN,
		"CKR_USER_PIN_NOT_INITIALIZED":         CKR_USER_PIN_NOT_INITIALIZED,
		"CKR_USER_TYPE_INVALID":                CKR_USER_TYPE_INVALID,
		"CKR_USER_ANOTHER_ALREADY_LOGGED_IN":   CKR_USER_ANOTHER_ALREADY_LOGGED_IN,
		"CKR_USER_TOO_MANY_TYPES":              CKR_USER_TOO_MANY_TYPES,
		"CKR_WRAPPED_KEY_INVALID":              CKR_WRAPPED_KEY_INVALID,
		"CKR_WRAPPED_KEY_LEN_RANGE":            CKR_WRAPPED_KEY_LEN_RANGE,
		"CKR_WRAPPING_KEY_HANDLE_INVALID":      CKR_WRAPPING_KEY_HANDLE_INVALID,
		"CKR_WRAPPING_KEY_SIZE_RANGE":          CKR_WRAPPING_KEY_SIZE_RANGE,
		"CKR_WRAPPING_KEY_TYPE_INCONSISTENT":   CKR_WRAPPING_KEY_TYPE_INCONSISTENT,
		"CKR_RANDOM_SEED_NOT_SUPPORTED":        CKR_RANDOM_SEED_NOT_SUPPORTED,
		"CKR_RANDOM_NO_RNG":                    CKR_RANDOM_NO_RNG,
		"CKR_DOMAIN_PARAMS_INVALID":            CKR_DOMAIN_PARAMS_INVALID,
		"CKR_CURVE_NOT_SUPPORTED":              CKR_CURVE_NOT_SUPPORTED,
		"CKR_BUFFER_TOO_SMALL":                 CKR_BUFFER_TOO_SMALL,
		"CKR_SAVED_STATE_INVALID":              CKR_SAVED_STATE_INVALID,
		"CKR_INFORMATION_SENSITIVE":            CKR_INFORMATION_SENSITIVE,
		"CKR_STATE_UNSAVEABLE":                 CKR_STATE_UNSAVEABLE,
		"CKR_CRYPTOKI_NOT_INITIALIZED":         CKR_CRYPTOKI_NOT_INITIALIZED,
		"CKR_CRYPTOKI_ALREADY_INITIALIZED":     CKR_CRYPTOKI_ALREADY_INITIALIZED,
		"CKR_MUTEX_BAD":                        CKR_MUTEX_BAD,
		"CKR_MUTEX_NOT_LOCKED":                 CKR_MUTEX_NOT_LOCKED,
		"CKR_NEW_PIN_MODE":                     CKR_NEW_PIN_MODE,
		"CKR_NEXT_OTP":                         CKR_NEXT_OTP,
		"CKR_EXCEEDED_MAX_ITERATIONS":          CKR_EXCEEDED_MAX_ITERATIONS,
		"CKR_FIPS_SELF_TEST_FAILED":            CKR_FIPS_SELF_TEST_FAILED,
		"CKR_LIBRARY_LOAD_FAILED":              CKR_LIBRARY_LOAD_FAILED,
		"CKR_PIN_TOO_WEAK":                     CKR_PIN_TOO_WEAK,
		"CKR_PUBLIC_KEY_INVALID":               CKR_PUBLIC_KEY_INVALID,
		"CKR_FUNCTION_REJECTED":                CKR_FUNCTION_REJECTED,
		"CKR_VENDOR_DEFINED":                   CKR_VENDOR_DEFINED,
		"CKR_IBM_WKID_MISMATCH":                CKR_IBM_WKID_MISMATCH,
		"CKR_IBM_INTERNAL_ERROR":               CKR_IBM_INTERNAL_ERROR,
		"CKR_IBM_TRANSPORT_ERROR":              CKR_IBM_TRANSPORT_ERROR,
		"CKR_IBM_BLOB_ERROR":                   CKR_IBM_BLOB_ERROR,
		"CKR_IBM_BLOBKEY_CONFLICT":             CKR_IBM_BLOBKEY_CONFLICT,
		"CKR_IBM_MODE_CONFLICT":                CKR_IBM_MODE_CONFLICT,
		"CKR_IBM_NONCRT_KEY_SIZE":              CKR_IBM_NONCRT_KEY_SIZE,
		"CKR_IBM_WK_NOT_INITIALIZED":           CKR_IBM_WK_NOT_INITIALIZED,
		"CKR_IBM_OA_API_ERROR":                 CKR_IBM_OA_API_ERROR,
		"CKR_IBM_REQ_TIMEOUT":                  CKR_IBM_REQ_TIMEOUT,
		"CKR_IBM_READONLY":                     CKR_IBM_READONLY,
		"CKR_IBM_STATIC_POLICY":                CKR_IBM_STATIC_POLICY,
		"CKR_IBM_EMBED_CODE":                   CKR_IBM_EMBED_CODE,
		"CKR_IBM_EMBED_GENERIC":                CKR_IBM_EMBED_GENERIC,
		"CKR_IBM_TRANSPORT_LIMIT":              CKR_IBM_TRANSPORT_LIMIT,
		"CKR_IBM_FCV_NOT_SET":                  CKR_IBM_FCV_NOT_SET,
		"CKR_IBM_PERF_CATEGORY_INVALID":        CKR_IBM_PERF_CATEGORY_INVALID,
		"CKR_IBM_API_MISMATCH":                 CKR_IBM_API_MISMATCH,
		"CKR_IBM_TARGET_INVALID":               CKR_IBM_TARGET_INVALID,
		"CKR_VENDOR_DEFINED_GREP11":            CKR_VENDOR_DEFINED_GREP11,
		"CKR_IBM_GREP11_NOT_AUTHENTICATED":     CKR_IBM_GREP11_NOT_AUTHENTICATED,
		"CKR_IBM_GREP11_CANNOT_UNMARSHAL":      CKR_IBM_GREP11_CANNOT_UNMARSHAL,
		"CKR_IBM_GREP11_CANNOT_MARSHAL":        CKR_IBM_GREP11_CANNOT_MARSHAL,
		"CKR_IBM_GREP11_CONFLICT":              CKR_IBM_GREP11_CONFLICT,
		"CKR_IBM_GREP11_DBINTERNAL":            CKR_IBM_GREP11_DBINTERNAL,
		"CKR_IBM_GREP11_SERVER_INTERNAL":       CKR_IBM_GREP11_SERVER_INTERNAL,
	}
	ReturnValueToName = map[Return]string{
		CKR_OK:                               "CKR_OK",
		CKR_CANCEL:                           "CKR_CANCEL",
		CKR_HOST_MEMORY:                      "CKR_HOST_MEMORY",
		CKR_SLOT_ID_INVALID:                  "CKR_SLOT_ID_INVALID",
		CKR_GENERAL_ERROR:                    "CKR_GENERAL_ERROR",
		CKR_FUNCTION_FAILED:                  "CKR_FUNCTION_FAILED",
		CKR_ARGUMENTS_BAD:                    "CKR_ARGUMENTS_BAD",
		CKR_NO_EVENT:                         "CKR_NO_EVENT",
		CKR_NEED_TO_CREATE_THREADS:           "CKR_NEED_TO_CREATE_THREADS",
		CKR_CANT_LOCK:                        "CKR_CANT_LOCK",
		CKR_ATTRIBUTE_READ_ONLY:              "CKR_ATTRIBUTE_READ_ONLY",
		CKR_ATTRIBUTE_SENSITIVE:              "CKR_ATTRIBUTE_SENSITIVE",
		CKR_ATTRIBUTE_TYPE_INVALID:           "CKR_ATTRIBUTE_TYPE_INVALID",
		CKR_ATTRIBUTE_VALUE_INVALID:          "CKR_ATTRIBUTE_VALUE_INVALID",
		CKR_ACTION_PROHIBITED:                "CKR_ACTION_PROHIBITED",
		CKR_DATA_INVALID:                     "CKR_DATA_INVALID",
		CKR_DATA_LEN_RANGE:                   "CKR_DATA_LEN_RANGE",
		CKR_DEVICE_ERROR:                     "CKR_DEVICE_ERROR",
		CKR_DEVICE_MEMORY:                    "CKR_DEVICE_MEMORY",
		CKR_DEVICE_REMOVED:                   "CKR_DEVICE_REMOVED",
		CKR_ENCRYPTED_DATA_INVALID:           "CKR_ENCRYPTED_DATA_INVALID",
		CKR_ENCRYPTED_DATA_LEN_RANGE:         "CKR_ENCRYPTED_DATA_LEN_RANGE",
		CKR_FUNCTION_CANCELED:                "CKR_FUNCTION_CANCELED",
		CKR_FUNCTION_NOT_PARALLEL:            "CKR_FUNCTION_NOT_PARALLEL",
		CKR_FUNCTION_NOT_SUPPORTED:           "CKR_FUNCTION_NOT_SUPPORTED",
		CKR_KEY_HANDLE_INVALID:               "CKR_KEY_HANDLE_INVALID",
		CKR_KEY_SIZE_RANGE:                   "CKR_KEY_SIZE_RANGE",
		CKR_KEY_TYPE_INCONSISTENT:            "CKR_KEY_TYPE_INCONSISTENT",
		CKR_KEY_NOT_NEEDED:                   "CKR_KEY_NOT_NEEDED",
		CKR_KEY_CHANGED:                      "CKR_KEY_CHANGED",
		CKR_KEY_NEEDED:                       "CKR_KEY_NEEDED",
		CKR_KEY_INDIGESTIBLE:                 "CKR_KEY_INDIGESTIBLE",
		CKR_KEY_FUNCTION_NOT_PERMITTED:       "CKR_KEY_FUNCTION_NOT_PERMITTED",
		CKR_KEY_NOT_WRAPPABLE:                "CKR_KEY_NOT_WRAPPABLE",
		CKR_KEY_UNEXTRACTABLE:                "CKR_KEY_UNEXTRACTABLE",
		CKR_MECHANISM_INVALID:                "CKR_MECHANISM_INVALID",
		CKR_MECHANISM_PARAM_INVALID:          "CKR_MECHANISM_PARAM_INVALID",
		CKR_OBJECT_HANDLE_INVALID:            "CKR_OBJECT_HANDLE_INVALID",
		CKR_OPERATION_ACTIVE:                 "CKR_OPERATION_ACTIVE",
		CKR_OPERATION_NOT_INITIALIZED:        "CKR_OPERATION_NOT_INITIALIZED",
		CKR_PIN_INCORRECT:                    "CKR_PIN_INCORRECT",
		CKR_PIN_INVALID:                      "CKR_PIN_INVALID",
		CKR_PIN_LEN_RANGE:                    "CKR_PIN_LEN_RANGE",
		CKR_PIN_EXPIRED:                      "CKR_PIN_EXPIRED",
		CKR_PIN_LOCKED:                       "CKR_PIN_LOCKED",
		CKR_SESSION_CLOSED:                   "CKR_SESSION_CLOSED",
		CKR_SESSION_COUNT:                    "CKR_SESSION_COUNT",
		CKR_SESSION_HANDLE_INVALID:           "CKR_SESSION_HANDLE_INVALID",
		CKR_SESSION_PARALLEL_NOT_SUPPORTED:   "CKR_SESSION_PARALLEL_NOT_SUPPORTED",
		CKR_SESSION_READ_ONLY:                "CKR_SESSION_READ_ONLY",
		CKR_SESSION_EXISTS:                   "CKR_SESSION_EXISTS",
		CKR_SESSION_READ_ONLY_EXISTS:         "CKR_SESSION_READ_ONLY_EXISTS",
		CKR_SESSION_READ_WRITE_SO_EXISTS:     "CKR_SESSION_READ_WRITE_SO_EXISTS",
		CKR_SIGNATURE_INVALID:                "CKR_SIGNATURE_INVALID",
		CKR_SIGNATURE_LEN_RANGE:              "CKR_SIGNATURE_LEN_RANGE",
		CKR_TEMPLATE_INCOMPLETE:              "CKR_TEMPLATE_INCOMPLETE",
		CKR_TEMPLATE_INCONSISTENT:            "CKR_TEMPLATE_INCONSISTENT",
		CKR_TOKEN_NOT_PRESENT:                "CKR_TOKEN_NOT_PRESENT",
		CKR_TOKEN_NOT_RECOGNIZED:             "CKR_TOKEN_NOT_RECOGNIZED",
		CKR_TOKEN_WRITE_PROTECTED:            "CKR_TOKEN_WRITE_PROTECTED",
		CKR_UNWRAPPING_KEY_HANDLE_INVALID:    "CKR_UNWRAPPING_KEY_HANDLE_INVALID",
		CKR_UNWRAPPING_KEY_SIZE_RANGE:        "CKR_UNWRAPPING_KEY_SIZE_RANGE",
		CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT: "CKR_UNWRAPPING_KEY_TYPE_INCONSISTENT",
		CKR_USER_ALREADY_LOGGED_IN:           "CKR_USER_ALREADY_LOGGED_IN",
		CKR_USER_NOT_LOGGED_IN:               "CKR_USER_NOT_LOGGED_IN",
		CKR_USER_PIN_NOT_INITIALIZED:         "CKR_USER_PIN_NOT_INITIALIZED",
		CKR_USER_TYPE_INVALID:                "CKR_USER_TYPE_INVALID",
		CKR_USER_ANOTHER_ALREADY_LOGGED_IN:   "CKR_USER_ANOTHER_ALREADY_LOGGED_IN",
		CKR_USER_TOO_MANY_TYPES:              "CKR_USER_TOO_MANY_TYPES",
		CKR_WRAPPED_KEY_INVALID:              "CKR_WRAPPED_KEY_INVALID",
		CKR_WRAPPED_KEY_LEN_RANGE:            "CKR_WRAPPED_KEY_LEN_RANGE",
		CKR_WRAPPING_KEY_HANDLE_INVALID:      "CKR_WRAPPING_KEY_HANDLE_INVALID",
		CKR_WRAPPING_KEY_SIZE_RANGE:          "CKR_WRAPPING_KEY_SIZE_RANGE",
		CKR_WRAPPING_KEY_TYPE_INCONSISTENT:   "CKR_WRAPPING_KEY_TYPE_INCONSISTENT",
		CKR_RANDOM_SEED_NOT_SUPPORTED:        "CKR_RANDOM_SEED_NOT_SUPPORTED",
		CKR_RANDOM_NO_RNG:                    "CKR_RANDOM_NO_RNG",
		CKR_DOMAIN_PARAMS_INVALID:            "CKR_DOMAIN_PARAMS_INVALID",
		CKR_CURVE_NOT_SUPPORTED:              "CKR_CURVE_NOT_SUPPORTED",
		CKR_BUFFER_TOO_SMALL:                 "CKR_BUFFER_TOO_SMALL",
		CKR_SAVED_STATE_INVALID:              "CKR_SAVED_STATE_INVALID",
		CKR_INFORMATION_SENSITIVE:            "CKR_INFORMATION_SENSITIVE",
		CKR_STATE_UNSAVEABLE:                 "CKR_STATE_UNSAVEABLE",
		CKR_CRYPTOKI_NOT_INITIALIZED:         "CKR_CRYPTOKI_NOT_INITIALIZED",
		CKR_CRYPTOKI_ALREADY_INITIALIZED:     "CKR_CRYPTOKI_ALREADY_INITIALIZED",
		CKR_MUTEX_BAD:                        "CKR_MUTEX_BAD",
		CKR_MUTEX_NOT_LOCKED:                 "CKR_MUTEX_NOT_LOCKED",
		CKR_NEW_PIN_MODE:                     "CKR_NEW_PIN_MODE",
		CKR_NEXT_OTP:                         "CKR_NEXT_OTP",
		CKR_EXCEEDED_MAX_ITERATIONS:          "CKR_EXCEEDED_MAX_ITERATIONS",
		CKR_FIPS_SELF_TEST_FAILED:            "CKR_FIPS_SELF_TEST_FAILED",
		CKR_LIBRARY_LOAD_FAILED:              "CKR_LIBRARY_LOAD_FAILED",
		CKR_PIN_TOO_WEAK:                     "CKR_PIN_TOO_WEAK",
		CKR_PUBLIC_KEY_INVALID:               "CKR_PUBLIC_KEY_INVALID",
		CKR_FUNCTION_REJECTED:                "CKR_FUNCTION_REJECTED",
		CKR_VENDOR_DEFINED:                   "CKR_VENDOR_DEFINED",
		CKR_IBM_WKID_MISMATCH:                "CKR_IBM_WKID_MISMATCH",
		CKR_IBM_INTERNAL_ERROR:               "CKR_IBM_INTERNAL_ERROR",
		CKR_IBM_TRANSPORT_ERROR:              "CKR_IBM_TRANSPORT_ERROR",
		CKR_IBM_BLOB_ERROR:                   "CKR_IBM_BLOB_ERROR",
		CKR_IBM_BLOBKEY_CONFLICT:             "CKR_IBM_BLOBKEY_CONFLICT",
		CKR_IBM_MODE_CONFLICT:                "CKR_IBM_MODE_CONFLICT",
		CKR_IBM_NONCRT_KEY_SIZE:              "CKR_IBM_NONCRT_KEY_SIZE",
		CKR_IBM_WK_NOT_INITIALIZED:           "CKR_IBM_WK_NOT_INITIALIZED",
		CKR_IBM_OA_API_ERROR:                 "CKR_IBM_OA_API_ERROR",
		CKR_IBM_REQ_TIMEOUT:                  "CKR_IBM_REQ_TIMEOUT",
		CKR_IBM_READONLY:                     "CKR_IBM_READONLY",
		CKR_IBM_STATIC_POLICY:                "CKR_IBM_STATIC_POLICY",
		CKR_IBM_EMBED_CODE:                   "CKR_IBM_EMBED_CODE",
		CKR_IBM_EMBED_GENERIC:                "CKR_IBM_EMBED_GENERIC",
		CKR_IBM_TRANSPORT_LIMIT:              "CKR_IBM_TRANSPORT_LIMIT",
		CKR_IBM_FCV_NOT_SET:                  "CKR_IBM_FCV_NOT_SET",
		CKR_IBM_PERF_CATEGORY_INVALID:        "CKR_IBM_PERF_CATEGORY_INVALID",
		CKR_IBM_API_MISMATCH:                 "CKR_IBM_API_MISMATCH",
		CKR_IBM_TARGET_INVALID:               "CKR_IBM_TARGET_INVALID",
		CKR_VENDOR_DEFINED_GREP11:            "CKR_VENDOR_DEFINED_GREP11",
		CKR_IBM_GREP11_NOT_AUTHENTICATED:     "CKR_IBM_GREP11_NOT_AUTHENTICATED",
		CKR_IBM_GREP11_CANNOT_UNMARSHAL:      "CKR_IBM_GREP11_CANNOT_UNMARSHAL",
		CKR_IBM_GREP11_CANNOT_MARSHAL:        "CKR_IBM_GREP11_CANNOT_MARSHAL",
		CKR_IBM_GREP11_CONFLICT:              "CKR_IBM_GREP11_CONFLICT",
		CKR_IBM_GREP11_DBINTERNAL:            "CKR_IBM_GREP11_DBINTERNAL",
		CKR_IBM_GREP11_SERVER_INTERNAL:       "CKR_IBM_GREP11_SERVER_INTERNAL",
	}
)

// MarshalJSON is generated so AdminCommand satisfies json.Marshaler.
func (c AdminCommand) MarshalJSON() ([]byte, error) {
	s, ok := AdminCommandValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so AdminCommand satisfies json.Unmarshaler.
func (c *AdminCommand) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("AdminCommand should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c AdminCommand) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *AdminCommand) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c AdminCommand) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *AdminCommand) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c AdminCommand) String() string {
	if str, ok := AdminCommandValueToName[c]; ok {
		return str
	}
	return "AdminCommand(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *AdminCommand) FromString(s string) error {
	v, ok := AdminCommandNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "AdminCommand(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid AdminCommand %q", s)
	}

	*c = AdminCommand(vv)
	return nil
}

// MarshalJSON is generated so Attribute satisfies json.Marshaler.
func (c Attribute) MarshalJSON() ([]byte, error) {
	s, ok := AttributeValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Attribute satisfies json.Unmarshaler.
func (c *Attribute) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Attribute should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c Attribute) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *Attribute) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c Attribute) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *Attribute) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c Attribute) String() string {
	if str, ok := AttributeValueToName[c]; ok {
		return str
	}
	return "Attribute(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *Attribute) FromString(s string) error {
	v, ok := AttributeNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "Attribute(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid Attribute %q", s)
	}

	*c = Attribute(vv)
	return nil
}

// MarshalJSON is generated so CardAttributeFlags satisfies json.Marshaler.
func (c CardAttributeFlags) MarshalJSON() ([]byte, error) {
	s, ok := CardAttributeFlagsValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so CardAttributeFlags satisfies json.Unmarshaler.
func (c *CardAttributeFlags) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CardAttributeFlags should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c CardAttributeFlags) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *CardAttributeFlags) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c CardAttributeFlags) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *CardAttributeFlags) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c CardAttributeFlags) String() string {
	if str, ok := CardAttributeFlagsValueToName[c]; ok {
		return str
	}
	return "CardAttributeFlags(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *CardAttributeFlags) FromString(s string) error {
	v, ok := CardAttributeFlagsNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "CardAttributeFlags(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid CardAttributeFlags %q", s)
	}

	*c = CardAttributeFlags(vv)
	return nil
}

// MarshalJSON is generated so CardAttributeKey satisfies json.Marshaler.
func (c CardAttributeKey) MarshalJSON() ([]byte, error) {
	s, ok := CardAttributeKeyValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so CardAttributeKey satisfies json.Unmarshaler.
func (c *CardAttributeKey) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("CardAttributeKey should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c CardAttributeKey) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *CardAttributeKey) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c CardAttributeKey) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *CardAttributeKey) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c CardAttributeKey) String() string {
	if str, ok := CardAttributeKeyValueToName[c]; ok {
		return str
	}
	return "CardAttributeKey(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *CardAttributeKey) FromString(s string) error {
	v, ok := CardAttributeKeyNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "CardAttributeKey(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid CardAttributeKey %q", s)
	}

	*c = CardAttributeKey(vv)
	return nil
}

// MarshalJSON is generated so ControlPoint satisfies json.Marshaler.
func (c ControlPoint) MarshalJSON() ([]byte, error) {
	s, ok := ControlPointValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so ControlPoint satisfies json.Unmarshaler.
func (c *ControlPoint) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ControlPoint should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c ControlPoint) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *ControlPoint) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c ControlPoint) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *ControlPoint) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c ControlPoint) String() string {
	if str, ok := ControlPointValueToName[c]; ok {
		return str
	}
	return "ControlPoint(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *ControlPoint) FromString(s string) error {
	v, ok := ControlPointNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "ControlPoint(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid ControlPoint %q", s)
	}

	*c = ControlPoint(vv)
	return nil
}

// MarshalJSON is generated so FunctionID satisfies json.Marshaler.
func (c FunctionID) MarshalJSON() ([]byte, error) {
	s, ok := FunctionIDValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so FunctionID satisfies json.Unmarshaler.
func (c *FunctionID) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("FunctionID should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c FunctionID) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *FunctionID) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c FunctionID) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *FunctionID) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c FunctionID) String() string {
	if str, ok := FunctionIDValueToName[c]; ok {
		return str
	}
	return "FunctionID(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *FunctionID) FromString(s string) error {
	v, ok := FunctionIDNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "FunctionID(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid FunctionID %q", s)
	}

	*c = FunctionID(vv)
	return nil
}

// MarshalJSON is generated so ImporterKeyType satisfies json.Marshaler.
func (c ImporterKeyType) MarshalJSON() ([]byte, error) {
	s, ok := ImporterKeyTypeValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so ImporterKeyType satisfies json.Unmarshaler.
func (c *ImporterKeyType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ImporterKeyType should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c ImporterKeyType) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *ImporterKeyType) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c ImporterKeyType) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *ImporterKeyType) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c ImporterKeyType) String() string {
	if str, ok := ImporterKeyTypeValueToName[c]; ok {
		return str
	}
	return "ImporterKeyType(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *ImporterKeyType) FromString(s string) error {
	v, ok := ImporterKeyTypeNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "ImporterKeyType(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid ImporterKeyType %q", s)
	}

	*c = ImporterKeyType(vv)
	return nil
}

// MarshalJSON is generated so KeyType satisfies json.Marshaler.
func (c KeyType) MarshalJSON() ([]byte, error) {
	s, ok := KeyTypeValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so KeyType satisfies json.Unmarshaler.
func (c *KeyType) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("KeyType should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c KeyType) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *KeyType) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c KeyType) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *KeyType) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c KeyType) String() string {
	if str, ok := KeyTypeValueToName[c]; ok {
		return str
	}
	return "KeyType(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *KeyType) FromString(s string) error {
	v, ok := KeyTypeNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "KeyType(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid KeyType %q", s)
	}

	*c = KeyType(vv)
	return nil
}

// MarshalJSON is generated so Mechanism satisfies json.Marshaler.
func (c Mechanism) MarshalJSON() ([]byte, error) {
	s, ok := MechanismValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Mechanism satisfies json.Unmarshaler.
func (c *Mechanism) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Mechanism should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c Mechanism) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *Mechanism) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c Mechanism) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *Mechanism) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c Mechanism) String() string {
	if str, ok := MechanismValueToName[c]; ok {
		return str
	}
	return "Mechanism(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *Mechanism) FromString(s string) error {
	v, ok := MechanismNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "Mechanism(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid Mechanism %q", s)
	}

	*c = Mechanism(vv)
	return nil
}

// MarshalJSON is generated so MechanismInfoFlag satisfies json.Marshaler.
func (c MechanismInfoFlag) MarshalJSON() ([]byte, error) {
	s, ok := MechanismInfoFlagValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so MechanismInfoFlag satisfies json.Unmarshaler.
func (c *MechanismInfoFlag) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("MechanismInfoFlag should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c MechanismInfoFlag) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *MechanismInfoFlag) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c MechanismInfoFlag) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *MechanismInfoFlag) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c MechanismInfoFlag) String() string {
	if str, ok := MechanismInfoFlagValueToName[c]; ok {
		return str
	}
	return "MechanismInfoFlag(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *MechanismInfoFlag) FromString(s string) error {
	v, ok := MechanismInfoFlagNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "MechanismInfoFlag(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid MechanismInfoFlag %q", s)
	}

	*c = MechanismInfoFlag(vv)
	return nil
}

// MarshalJSON is generated so ObjectClass satisfies json.Marshaler.
func (c ObjectClass) MarshalJSON() ([]byte, error) {
	s, ok := ObjectClassValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so ObjectClass satisfies json.Unmarshaler.
func (c *ObjectClass) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("ObjectClass should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c ObjectClass) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *ObjectClass) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c ObjectClass) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *ObjectClass) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c ObjectClass) String() string {
	if str, ok := ObjectClassValueToName[c]; ok {
		return str
	}
	return "ObjectClass(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *ObjectClass) FromString(s string) error {
	v, ok := ObjectClassNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "ObjectClass(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid ObjectClass %q", s)
	}

	*c = ObjectClass(vv)
	return nil
}

// MarshalJSON is generated so Return satisfies json.Marshaler.
func (c Return) MarshalJSON() ([]byte, error) {
	s, ok := ReturnValueToName[c]
	if !ok {
		s = c.String()
	}
	return json.Marshal(s)
}

// UnmarshalJSON is generated so Return satisfies json.Unmarshaler.
func (c *Return) UnmarshalJSON(data []byte) error {
	var s string
	if err := json.Unmarshal(data, &s); err != nil {
		return fmt.Errorf("Return should be a string, got %s", data)
	}

	return c.FromString(s)
}

// Workaround for a strange Map behaviour
func (c Return) MarshalText() (text []byte, err error) {
	return []byte(c.String()), nil
}

func (c *Return) UnmarshalText(text []byte) error {
	return c.FromString(string(text))
}

// JSONPBMarshaler is implemented by protobuf messages that customize the
// way they are marshaled to JSON. Messages that implement this should
// also implement JSONPBUnmarshaler so that the custom format can be
// parsed.
func (c Return) MarshalJSONPB(*jsonpb.Marshaler) ([]byte, error) {
	return c.MarshalJSON()
}

// JSONPBUnmarshaler is implemented by protobuf messages that customize
// the way they are unmarshaled from JSON. Messages that implement this
// should also implement JSONPBMarshaler so that the custom format can be
// produced.
func (c *Return) UnmarshalJSONPB(m *jsonpb.Unmarshaler, d []byte) error {
	err := c.UnmarshalJSON(d)
	if err == nil {
		return nil
	}

	return c.FromString(string(d))
}

func (c Return) String() string {
	if str, ok := ReturnValueToName[c]; ok {
		return str
	}
	return "Return(0x" + strconv.FormatUint(uint64(c), 16) + ")"
}

func (c *Return) FromString(s string) error {
	v, ok := ReturnNameToValue[s]
	if ok {
		*c = v
		return nil
	}

	ss := strings.TrimPrefix(s, "Return(0x")
	ss = strings.TrimSuffix(ss, ")")
	vv, err := strconv.ParseUint(ss, 16, 64)
	if err != nil {
		return fmt.Errorf("invalid Return %q", s)
	}

	*c = Return(vv)
	return nil
}

func (c Return) Error() string {
	return c.String()
}

